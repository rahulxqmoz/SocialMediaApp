{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\ChatDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages, sendMessage } from '../features/auth/chatSlice';\nimport { FaSmile, FaTimes } from 'react-icons/fa'; // Emoji toggle icons\nimport Picker from '@emoji-mart/react'; // Emoji picker component\nimport data from '@emoji-mart/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDialog = ({\n  roomName,\n  user\n}) => {\n  _s();\n  console.log(`roomName: ${roomName}`);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const messages = useSelector(state => state.chat.messages);\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const socketRef = useRef(null); // Using useRef for socket\n  const chatRooms = useSelector(state => state.chat.rooms);\n  const currentUser = useSelector(state => state.user.user);\n  const room = useSelector(state => state.chat.rooms);\n  const messagesEndRef = useRef(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const peerConnectionRef = useRef(null);\n  const [inCall, setInCall] = useState(false);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [incomingCallerName, setIncomingCallerName] = useState(null);\n  const [offer, setOffer] = useState(null);\n  let iceCandidatesBuffer = [];\n  console.log(`roomsssss${room}`);\n  console.log(messages);\n  console.log(user.id, currentUser.id);\n  const startVideoCall = async () => {\n    if (inCall) {\n      console.log(\"Already in a call\");\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setLocalStream(stream);\n      setInCall(true);\n      peerConnectionRef.current = new RTCPeerConnection();\n\n      // Add local stream tracks to peer connection\n      stream.getTracks().forEach(track => {\n        peerConnectionRef.current.addTrack(track, stream);\n      });\n      peerConnectionRef.current.ontrack = event => {\n        const [remoteStream] = event.streams;\n        setRemoteStream(remoteStream);\n      };\n      peerConnectionRef.current.onicecandidate = event => {\n        if (event.candidate) {\n          socketRef.current.send(JSON.stringify({\n            candidate: event.candidate\n          }));\n        }\n      };\n      const offer = await peerConnectionRef.current.createOffer();\n      await peerConnectionRef.current.setLocalDescription(offer);\n\n      // Send offer to the other user\n      socketRef.current.send(JSON.stringify({\n        type: 'video-call-offer',\n        from: currentUser.id,\n        to: user.id,\n        offer: offer\n      }));\n    } catch (error) {\n      console.error('Error accessing media devices.', error);\n    }\n  };\n  const acceptCall = async data => {\n    setIncomingCallerName(data.from);\n    console.log(`datafrom:${data.from}`);\n    setIncomingCall(false);\n    try {\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\n        type: 'offer',\n        sdp: offer.sdp // Use the stored offer\n      }));\n      const answer = await peerConnectionRef.current.createAnswer();\n      await peerConnectionRef.current.setLocalDescription(answer);\n\n      // Send answer back to the caller\n      socketRef.current.send(JSON.stringify({\n        type: 'video-call-answer',\n        from: currentUser.id,\n        to: data.from,\n        answer: answer\n      }));\n    } catch (error) {\n      console.error(\"Error accepting call:\", error);\n    }\n  };\n  const rejectCall = from => {\n    setIncomingCall(false);\n    socketRef.current.send(JSON.stringify({\n      type: 'video-call-rejected',\n      from: currentUser.id,\n      to: from\n    }));\n  };\n  const endCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (peerConnectionRef.current) {\n      peerConnectionRef.current.close();\n      peerConnectionRef.current = null;\n    }\n    setLocalStream(null);\n    setRemoteStream(null);\n    setInCall(false);\n  };\n  useEffect(() => {\n    if (roomName && token) {\n      dispatch({\n        type: 'chat/resetMessages'\n      });\n      // Step 1: Fetch all chat rooms to check if the room exists\n      dispatch(fetchChatRooms({\n        token\n      })).then(action => {\n        const roomExists = chatRooms.some(room => room.name === roomName);\n        if (roomExists) {\n          // Room exists, fetch messages for this room\n          dispatch(fetchMessages({\n            roomName,\n            token\n          }));\n        } else {\n          // Room doesn't exist, create it first\n          dispatch(createChatRoom({\n            roomName,\n            participants: [user.id, currentUser.id],\n            token\n          })).then(() => {\n            // After creating the room, fetch the messages\n            dispatch(fetchMessages({\n              roomName,\n              token\n            }));\n          });\n        }\n      });\n    }\n\n    // WebSocket connection setup\n    socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\n    socketRef.current.onopen = () => {\n      console.log(\"WebSocket connection opened\");\n    };\n\n    // socketRef.current.onmessage = (e) => {\n    //     const data = JSON.parse(e.data);\n    //     console.log(\"WebSocket data received:\", data); \n    //     if (data && data.message && data.sender) {\n    //         dispatch(addMessage({\n    //             sender: data.sender,\n    //             message: data.message,\n    //             timestamp: data.timestamp || new Date().toISOString(),  // Use provided timestamp or current time if not available\n    //         }));\n    //     }\n    //     // dispatch(addMessage({\n    //     //     sender: data.sender,\n    //     //     message: data.message,\n    //     //     timestamp: new Date().toISOString(),  // Or use the timestamp from data if available\n    //     // }));\n    // };\n    let iceCandidatesBuffer = [];\n    socketRef.current.onmessage = async e => {\n      const data = JSON.parse(e.data);\n      console.log(\"WebSocket data received:\", data);\n      if (!peerConnectionRef.current) {\n        peerConnectionRef.current = new RTCPeerConnection();\n        if (localStream) {\n          localStream.getTracks().forEach(track => {\n            peerConnectionRef.current.addTrack(track, localStream);\n          });\n        }\n      }\n      if (data.type === 'video-call-offer') {\n        if (data.to === currentUser.id) {\n          setOffer(data.offer);\n          setIncomingCall(true);\n          setIncomingCallerName(data.from);\n        }\n      } else if (data.type === 'video-call-answer') {\n        await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\n          type: 'answer',\n          sdp: data.answer.sdp\n        }));\n        // Process buffered ICE candidates\n        iceCandidatesBuffer.forEach(candidate => {\n          peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(candidate)).catch(error => {\n            console.error('Error adding received ICE candidate', error);\n          });\n        });\n        iceCandidatesBuffer = []; // Clear buffer after processing\n      } else if (data.candidate) {\n        if (incomingCall && peerConnectionRef.current.remoteDescription) {\n          await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate)).catch(error => {\n            console.error('Error adding received ICE candidate', error);\n          });\n        } else {\n          iceCandidatesBuffer.push(data.candidate); // Buffer candidate until remote description is set\n        }\n      } else if (data.message && data.sender) {\n        dispatch(addMessage({\n          sender: data.sender,\n          message: data.message,\n          timestamp: data.timestamp || new Date().toISOString()\n        }));\n      }\n    };\n    socketRef.current.onclose = event => {\n      console.log('WebSocket closed. Attempting to reconnect...');\n      console.error(\"WebSocket closed unexpectedly:\", event.reason);\n    };\n    return () => {\n      socketRef.current.close();\n    };\n  }, [roomName, token, dispatch]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (messageInput && socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(JSON.stringify({\n        message: messageInput,\n        user_id: user.id\n      }));\n      console.log(`roomname=${roomName},message:${messageInput}`);\n      // dispatch(sendMessage({ roomName, message: messageInput, token }));\n      setMessageInput('');\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const handleAddEmoji = emoji => {\n    setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 mt-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic || 'https://via.placeholder.com/800x500',\n        alt: user.username,\n        className: \"w-10 h-10 rounded-full mr-3 object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg font-semibold\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-sm\",\n        children: user.is_online ? 'Online' : 'Offline'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startVideoCall,\n        className: \"ml-auto text-white bg-green-500 rounded-full p-2\",\n        children: \"\\uD83D\\uDCF9 Video Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto bg-gray-100 p-4\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded-lg mb-2 ${currentUser.id === msg.sender ? 'bg-blue-500 text-white self-end' : 'bg-gray-400  text-white self-end'}`,\n        style: {\n          maxWidth: '50%',\n          marginLeft: currentUser.id === msg.sender ? 'auto' : '0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-orange-50 mt-1 text-right\",\n          children: formatTimestamp(msg.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-2 border-t bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEmojiPicker(!showEmojiPicker),\n        className: \"text-gray-500 hover:text-gray-800 mr-2\",\n        children: showEmojiPicker ? /*#__PURE__*/_jsxDEV(FaTimes, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(FaSmile, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 16\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-12 left-0 z-10\",\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          data: data,\n          onEmojiSelect: handleAddEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this), incomingCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [incomingCallerName, \" is calling...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => acceptCall(incomingCall),\n        className: \"bg-green-500 p-2 rounded-lg\",\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIncomingCall(false),\n        className: \"bg-red-500 p-2 rounded-lg\",\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }, this), inCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-call\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Call in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: video => {\n          if (video) video.srcObject = localStream;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: video => {\n          if (video) video.srcObject = remoteStream;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endCall,\n        children: \"End Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatDialog, \"Df6xCyfFARzsisik4Y+Orcy7SkE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ChatDialog;\nexport default ChatDialog;\nvar _c;\n$RefreshReg$(_c, \"ChatDialog\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useDispatch","useSelector","addMessage","createChatRoom","fetchChatRooms","fetchMessages","sendMessage","FaSmile","FaTimes","Picker","data","jsxDEV","_jsxDEV","ChatDialog","roomName","user","_s","console","log","dispatch","token","state","auth","messages","chat","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","socketRef","chatRooms","rooms","currentUser","room","messagesEndRef","localStream","setLocalStream","remoteStream","setRemoteStream","peerConnectionRef","inCall","setInCall","incomingCall","setIncomingCall","incomingCallerName","setIncomingCallerName","offer","setOffer","iceCandidatesBuffer","id","startVideoCall","stream","navigator","mediaDevices","getUserMedia","video","audio","current","RTCPeerConnection","getTracks","forEach","track","addTrack","ontrack","event","streams","onicecandidate","candidate","send","JSON","stringify","createOffer","setLocalDescription","type","from","to","error","acceptCall","setRemoteDescription","RTCSessionDescription","sdp","answer","createAnswer","rejectCall","endCall","stop","close","then","action","roomExists","some","name","participants","WebSocket","onopen","onmessage","e","parse","addIceCandidate","RTCIceCandidate","catch","remoteDescription","push","message","sender","timestamp","Date","toISOString","onclose","reason","_messagesEndRef$curre","scrollIntoView","behavior","handleSendMessage","readyState","OPEN","user_id","formatTimestamp","date","toLocaleTimeString","hour","minute","hour12","handleAddEmoji","emoji","prevInput","native","className","children","src","profile_pic","alt","username","fileName","_jsxFileName","lineNumber","columnNumber","is_online","onClick","map","msg","index","style","maxWidth","marginLeft","ref","size","onEmojiSelect","value","onChange","target","onKeyPress","key","placeholder","autoPlay","playsInline","srcObject","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/ChatDialog.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages,sendMessage } from '../features/auth/chatSlice';\r\nimport { FaSmile, FaTimes } from 'react-icons/fa'; // Emoji toggle icons\r\nimport Picker from '@emoji-mart/react'; // Emoji picker component\r\nimport data from '@emoji-mart/data';\r\nconst ChatDialog = ({ roomName, user }) => {\r\n    console.log(`roomName: ${roomName}`);\r\n    const dispatch = useDispatch();\r\n    const token = useSelector((state) => state.auth.token);\r\n    const messages = useSelector((state) => state.chat.messages);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const socketRef = useRef(null); // Using useRef for socket\r\n    const chatRooms = useSelector((state) => state.chat.rooms);\r\n    const currentUser = useSelector((state) => state.user.user);\r\n    const room = useSelector((state)=>state.chat.rooms)\r\n    const messagesEndRef = useRef(null);\r\n    const [localStream, setLocalStream] = useState(null);\r\n    const [remoteStream, setRemoteStream] = useState(null);\r\n    const peerConnectionRef = useRef(null);\r\n    const [inCall, setInCall] = useState(false);\r\n    const [incomingCall, setIncomingCall] = useState(false);\r\n    const [incomingCallerName, setIncomingCallerName] = useState(null);\r\n    const [offer, setOffer] = useState(null);\r\n    let iceCandidatesBuffer = [];\r\n    console.log(`roomsssss${room}`)\r\n    console.log(messages)\r\n    console.log(user.id,currentUser.id)\r\n\r\n    const startVideoCall = async () => {\r\n      if (inCall) {\r\n          console.log(\"Already in a call\");\r\n          return;\r\n      }\r\n\r\n      try {\r\n          const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n          setLocalStream(stream);\r\n          setInCall(true);\r\n\r\n          peerConnectionRef.current = new RTCPeerConnection();\r\n\r\n          // Add local stream tracks to peer connection\r\n          stream.getTracks().forEach(track => {\r\n              peerConnectionRef.current.addTrack(track, stream);\r\n          });\r\n\r\n          peerConnectionRef.current.ontrack = (event) => {\r\n              const [remoteStream] = event.streams;\r\n              setRemoteStream(remoteStream);\r\n          };\r\n\r\n          peerConnectionRef.current.onicecandidate = (event) => {\r\n              if (event.candidate) {\r\n                  socketRef.current.send(JSON.stringify({ candidate: event.candidate }));\r\n              }\r\n          };\r\n\r\n          const offer = await peerConnectionRef.current.createOffer();\r\n          await peerConnectionRef.current.setLocalDescription(offer);\r\n\r\n          // Send offer to the other user\r\n          socketRef.current.send(JSON.stringify({\r\n              type: 'video-call-offer',\r\n              from: currentUser.id,\r\n              to: user.id,\r\n              offer: offer,\r\n          }));\r\n      } catch (error) {\r\n          console.error('Error accessing media devices.', error);\r\n      }\r\n  };\r\n  \r\n  const acceptCall = async (data) => {\r\n    setIncomingCallerName(data.from);\r\n    console.log(`datafrom:${data.from}`)\r\n    setIncomingCall(false);\r\n    try {\r\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\r\n        type: 'offer',\r\n        sdp: offer.sdp, // Use the stored offer\r\n    }));\r\n        const answer = await peerConnectionRef.current.createAnswer();\r\n        await peerConnectionRef.current.setLocalDescription(answer);\r\n\r\n        // Send answer back to the caller\r\n        socketRef.current.send(JSON.stringify({\r\n            type: 'video-call-answer',\r\n            from: currentUser.id,\r\n            to: data.from,\r\n            answer: answer,\r\n        }));\r\n    } catch (error) {\r\n        console.error(\"Error accepting call:\", error);\r\n    }\r\n};\r\n\r\n  \r\n    const rejectCall = (from) => {\r\n      setIncomingCall(false);\r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'video-call-rejected',\r\n        from: currentUser.id,\r\n        to: from,\r\n      }));\r\n    };\r\n  \r\n    \r\n    const endCall = () => {\r\n      if (localStream) {\r\n          localStream.getTracks().forEach(track => track.stop());\r\n      }\r\n\r\n      if (peerConnectionRef.current) {\r\n          peerConnectionRef.current.close();\r\n          peerConnectionRef.current = null;\r\n      }\r\n\r\n      setLocalStream(null);\r\n      setRemoteStream(null);\r\n      setInCall(false);\r\n  };\r\n  \r\n\r\n    useEffect(() => {\r\n        if (roomName && token) {\r\n\r\n            dispatch({ type: 'chat/resetMessages' });\r\n            // Step 1: Fetch all chat rooms to check if the room exists\r\n            dispatch(fetchChatRooms({ token })).then((action) => {\r\n                const roomExists = chatRooms.some(room => room.name === roomName);\r\n\r\n                if (roomExists) {\r\n                    // Room exists, fetch messages for this room\r\n                    dispatch(fetchMessages({ roomName, token }));\r\n                } else {\r\n                    // Room doesn't exist, create it first\r\n                    dispatch(createChatRoom({ roomName,participants:[user.id,currentUser.id], token }))\r\n                        .then(() => {\r\n                            // After creating the room, fetch the messages\r\n                            dispatch(fetchMessages({ roomName, token }));\r\n                        });\r\n                }\r\n            });\r\n        }\r\n       \r\n\r\n\r\n        // WebSocket connection setup\r\n        socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\r\n\r\n        socketRef.current.onopen = () => {\r\n            console.log(\"WebSocket connection opened\");\r\n        };\r\n        \r\n        // socketRef.current.onmessage = (e) => {\r\n        //     const data = JSON.parse(e.data);\r\n        //     console.log(\"WebSocket data received:\", data); \r\n        //     if (data && data.message && data.sender) {\r\n        //         dispatch(addMessage({\r\n        //             sender: data.sender,\r\n        //             message: data.message,\r\n        //             timestamp: data.timestamp || new Date().toISOString(),  // Use provided timestamp or current time if not available\r\n        //         }));\r\n        //     }\r\n        //     // dispatch(addMessage({\r\n        //     //     sender: data.sender,\r\n        //     //     message: data.message,\r\n        //     //     timestamp: new Date().toISOString(),  // Or use the timestamp from data if available\r\n        //     // }));\r\n        // };\r\n        let iceCandidatesBuffer = [];\r\n        socketRef.current.onmessage = async (e) => {\r\n          const data = JSON.parse(e.data);\r\n          console.log(\"WebSocket data received:\", data);\r\n\r\n          if (!peerConnectionRef.current) {\r\n            peerConnectionRef.current = new RTCPeerConnection();\r\n\r\n            if (localStream) {\r\n                localStream.getTracks().forEach(track => {\r\n                    peerConnectionRef.current.addTrack(track, localStream);\r\n                });\r\n            }\r\n        }\r\n\r\n        if (data.type === 'video-call-offer') {\r\n          if (data.to === currentUser.id) {\r\n              setOffer(data.offer);\r\n              setIncomingCall(true);\r\n              setIncomingCallerName(data.from);\r\n          }\r\n        } else if (data.type === 'video-call-answer') {\r\n                  await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\r\n                    type: 'answer',\r\n                    sdp: data.answer.sdp,\r\n                }));\r\n                // Process buffered ICE candidates\r\n                iceCandidatesBuffer.forEach(candidate => {\r\n                    peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(candidate)).catch(error => {\r\n                        console.error('Error adding received ICE candidate', error);\r\n                    });\r\n                });\r\n                iceCandidatesBuffer = [];  // Clear buffer after processing\r\n            } else if (data.candidate) {\r\n              if (incomingCall && peerConnectionRef.current.remoteDescription) {\r\n                await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate)).catch(error => {\r\n                    console.error('Error adding received ICE candidate', error);\r\n                });\r\n                } else {\r\n                    iceCandidatesBuffer.push(data.candidate); // Buffer candidate until remote description is set\r\n                }\r\n            } else if (data.message && data.sender) {\r\n              dispatch(addMessage({\r\n                  sender: data.sender,\r\n                  message: data.message,\r\n                  timestamp: data.timestamp || new Date().toISOString(),\r\n              }));\r\n          }\r\n      };\r\n\r\n        \r\n        socketRef.current.onclose = (event) => {\r\n            console.log('WebSocket closed. Attempting to reconnect...');\r\n            console.error(\"WebSocket closed unexpectedly:\", event.reason);\r\n        };\r\n        \r\n\r\n        return () => {\r\n            socketRef.current.close();\r\n        };\r\n    }, [roomName, token, dispatch]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        if (messageInput && socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n            socketRef.current.send(JSON.stringify({\r\n                message: messageInput,\r\n                user_id: user.id,\r\n            }));\r\n            console.log(`roomname=${roomName},message:${messageInput}`)\r\n           // dispatch(sendMessage({ roomName, message: messageInput, token }));\r\n            setMessageInput('');\r\n        }\r\n    };\r\n    const formatTimestamp = (timestamp) => {\r\n        const date = new Date(timestamp);\r\n        return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true });\r\n    };\r\n    const handleAddEmoji = (emoji) => {\r\n      setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\r\n  };\r\n  \r\n    return (\r\n        <div className=\"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \">\r\n        {/* Header */}\r\n        <div className=\"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 mt-16\">\r\n          <img\r\n            src={user.profile_pic || 'https://via.placeholder.com/800x500'}\r\n            alt={user.username}\r\n            className=\"w-10 h-10 rounded-full mr-3 object-cover\"\r\n          />\r\n          <span className=\"text-lg font-semibold\">{user.username}</span>\r\n          <div className={`ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`}></div>\r\n                <span className=\"ml-1 text-sm\">\r\n                    {user.is_online ? 'Online' : 'Offline'}\r\n                </span>\r\n                <button \r\n                  onClick={startVideoCall} \r\n                  className=\"ml-auto text-white bg-green-500 rounded-full p-2\"\r\n                >\r\n                  📹 Video Call\r\n                </button>\r\n        </div>\r\n      \r\n        {/* Chat messages container */}\r\n        <div className=\"flex-1 overflow-y-auto bg-gray-100 p-4\">\r\n          {messages.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              className={`p-2 rounded-lg mb-2 ${\r\n                currentUser.id === msg.sender\r\n                  ? 'bg-blue-500 text-white self-end'\r\n                  : 'bg-gray-400  text-white self-end'\r\n              }`}\r\n              style={{\r\n                maxWidth: '50%',\r\n                marginLeft: currentUser.id === msg.sender ? 'auto' : '0',\r\n              }}\r\n            >\r\n              <span>{msg.message}</span>\r\n              <div className=\"text-xs text-orange-50 mt-1 text-right\">\r\n                {formatTimestamp(msg.timestamp)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n           \r\n              \r\n        {/* Message input */}\r\n        <div className=\"flex items-center p-2 border-t bg-white\">\r\n               {/* Emoji Picker Button */}\r\n               <button\r\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                    className=\"text-gray-500 hover:text-gray-800 mr-2\"\r\n                >\r\n                    {showEmojiPicker ? <FaTimes size={20} /> : <FaSmile size={20} />}\r\n                </button>\r\n\r\n                {showEmojiPicker && (\r\n                    <div className=\"absolute bottom-12 left-0 z-10\">\r\n                        <Picker data={data} onEmojiSelect={handleAddEmoji} />\r\n                    </div>\r\n                )}\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            value={messageInput}\r\n            onChange={(e) => setMessageInput(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n\r\n        {incomingCall && (\r\n                <div className=\"fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white p-4 rounded-lg\">\r\n                    <p>{incomingCallerName} is calling...</p>\r\n                    <button onClick={() => acceptCall(incomingCall)} className=\"bg-green-500 p-2 rounded-lg\">Accept</button>\r\n                    <button onClick={() => setIncomingCall(false)} className=\"bg-red-500 p-2 rounded-lg\">Decline</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Video Call Stream */}\r\n            {inCall && (\r\n                <div className=\"video-call\">\r\n                    <h2>Video Call in Progress</h2>\r\n                    <video autoPlay playsInline ref={(video) => { if (video) video.srcObject = localStream; }} />\r\n                    <video autoPlay playsInline ref={(video) => { if (video) video.srcObject = remoteStream; }} />\r\n                    <button onClick={endCall}>End Call</button>\r\n                </div>\r\n            )}\r\n        \r\n\r\n      </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default ChatDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}