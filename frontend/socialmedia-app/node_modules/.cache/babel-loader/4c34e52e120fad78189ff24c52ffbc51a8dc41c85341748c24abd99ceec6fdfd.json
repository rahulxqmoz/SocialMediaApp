{"ast":null,"code":"// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n\n// const useNotifications = (onMessage) => {\n//   const token = useSelector((state) => state.auth.token);\n//   useEffect(() => {\n//     const socket = new WebSocket(`ws://localhost:8000/ws/notifications/?token=${token}`);\n\n//     socket.onopen = () => {\n//       console.log('WebSocket connection established');\n//     };\n\n//     socket.onmessage = (event) => {\n//       const notification = JSON.parse(event.data);\n//       onMessage(notification);\n//       console.log(notification);\n//     };\n\n//     socket.onerror = (error) => {\n//       console.error('WebSocket error:', error);\n//     };\n\n//     socket.onclose = (event) => {\n//       console.log('WebSocket connection closed:', event);\n//       // Optionally, handle reconnection logic here\n//     };\n\n//     // Cleanup on component unmount\n//     return () => {\n//       socket.close();\n//     };\n//   }, [onMessage]); // Add onMessage to the dependency array\n// };\n\n// export default useNotifications;","map":{"version":3,"names":[],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/NotificationService.js"],"sourcesContent":["// import { useEffect } from 'react';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// const useNotifications = (onMessage) => {\r\n//   const token = useSelector((state) => state.auth.token);\r\n//   useEffect(() => {\r\n//     const socket = new WebSocket(`ws://localhost:8000/ws/notifications/?token=${token}`);\r\n\r\n//     socket.onopen = () => {\r\n//       console.log('WebSocket connection established');\r\n//     };\r\n\r\n//     socket.onmessage = (event) => {\r\n//       const notification = JSON.parse(event.data);\r\n//       onMessage(notification);\r\n//       console.log(notification);\r\n//     };\r\n\r\n//     socket.onerror = (error) => {\r\n//       console.error('WebSocket error:', error);\r\n//     };\r\n\r\n//     socket.onclose = (event) => {\r\n//       console.log('WebSocket connection closed:', event);\r\n//       // Optionally, handle reconnection logic here\r\n//     };\r\n\r\n//     // Cleanup on component unmount\r\n//     return () => {\r\n//       socket.close();\r\n//     };\r\n//   }, [onMessage]); // Add onMessage to the dependency array\r\n// };\r\n\r\n// export default useNotifications;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}