{"ast":null,"code":"\"use strict\";\n\nvar RetryManager = /*#__PURE__*/function () {\n  function RetryManager() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  }\n  var _proto = RetryManager.prototype;\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n  _proto.reset = function reset() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  };\n  _proto.getMaxAttempts = function getMaxAttempts() {\n    return this.maxAttempts_;\n  };\n  _proto.setMaxAttempts = function setMaxAttempts(maxAttempts) {\n    this.maxAttempts_ = maxAttempts;\n  };\n  _proto.getDelayFactor = function getDelayFactor() {\n    return this.delayFactor_;\n  };\n  _proto.setDelayFactor = function setDelayFactor(delayFactor) {\n    this.delayFactor_ = delayFactor;\n  };\n  _proto.getFuzzFactor = function getFuzzFactor() {\n    return this.fuzzFactor_;\n  };\n  _proto.setFuzzFactor = function setFuzzFactor(fuzzFactor) {\n    this.fuzzFactor_ = fuzzFactor;\n  };\n  _proto.getInitialDelay = function getInitialDelay() {\n    return this.initialDelay_;\n  };\n  _proto.setInitialDelay = function setInitialDelay(initialDelay) {\n    this.initialDelay_ = initialDelay;\n  };\n  _proto.createRetry = function createRetry(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      maxAttempts = _ref.maxAttempts,\n      delayFactor = _ref.delayFactor,\n      fuzzFactor = _ref.fuzzFactor,\n      initialDelay = _ref.initialDelay;\n    return new Retry({\n      maxAttempts: maxAttempts || this.maxAttempts_,\n      delayFactor: delayFactor || this.delayFactor_,\n      fuzzFactor: fuzzFactor || this.fuzzFactor_,\n      initialDelay: initialDelay || this.initialDelay_\n    });\n  };\n  return RetryManager;\n}();\nvar Retry = /*#__PURE__*/function () {\n  function Retry(options) {\n    this.maxAttempts_ = options.maxAttempts;\n    this.delayFactor_ = options.delayFactor;\n    this.fuzzFactor_ = options.fuzzFactor;\n    this.currentDelay_ = options.initialDelay;\n    this.currentAttempt_ = 1;\n  }\n  var _proto2 = Retry.prototype;\n  _proto2.moveToNextAttempt = function moveToNextAttempt() {\n    this.currentAttempt_++;\n    var delayDelta = this.currentDelay_ * this.delayFactor_;\n    this.currentDelay_ = this.currentDelay_ + delayDelta;\n  };\n  _proto2.shouldRetry = function shouldRetry() {\n    return this.currentAttempt_ < this.maxAttempts_;\n  };\n  _proto2.getCurrentDelay = function getCurrentDelay() {\n    return this.currentDelay_;\n  };\n  _proto2.getCurrentMinPossibleDelay = function getCurrentMinPossibleDelay() {\n    return (1 - this.fuzzFactor_) * this.currentDelay_;\n  };\n  _proto2.getCurrentMaxPossibleDelay = function getCurrentMaxPossibleDelay() {\n    return (1 + this.fuzzFactor_) * this.currentDelay_;\n  }\n  /**\n   * For example fuzzFactor is 0.1\n   * This means ±10% deviation\n   * So if we have delay as 1000\n   * This function can generate any value from 900 to 1100\n   */;\n  _proto2.getCurrentFuzzedDelay = function getCurrentFuzzedDelay() {\n    var lowValue = this.getCurrentMinPossibleDelay();\n    var highValue = this.getCurrentMaxPossibleDelay();\n    return lowValue + Math.random() * (highValue - lowValue);\n  };\n  return Retry;\n}();\nmodule.exports = RetryManager;","map":{"version":3,"names":["RetryManager","maxAttempts_","delayFactor_","fuzzFactor_","initialDelay_","enabled_","_proto","prototype","getIsEnabled","enable","disable","reset","getMaxAttempts","setMaxAttempts","maxAttempts","getDelayFactor","setDelayFactor","delayFactor","getFuzzFactor","setFuzzFactor","fuzzFactor","getInitialDelay","setInitialDelay","initialDelay","createRetry","_temp","_ref","Retry","options","currentDelay_","currentAttempt_","_proto2","moveToNextAttempt","delayDelta","shouldRetry","getCurrentDelay","getCurrentMinPossibleDelay","getCurrentMaxPossibleDelay","getCurrentFuzzedDelay","lowValue","highValue","Math","random","module","exports"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/node_modules/@videojs/xhr/lib/retry.js"],"sourcesContent":["\"use strict\";\n\nvar RetryManager = /*#__PURE__*/function () {\n  function RetryManager() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  }\n\n  var _proto = RetryManager.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  };\n\n  _proto.getMaxAttempts = function getMaxAttempts() {\n    return this.maxAttempts_;\n  };\n\n  _proto.setMaxAttempts = function setMaxAttempts(maxAttempts) {\n    this.maxAttempts_ = maxAttempts;\n  };\n\n  _proto.getDelayFactor = function getDelayFactor() {\n    return this.delayFactor_;\n  };\n\n  _proto.setDelayFactor = function setDelayFactor(delayFactor) {\n    this.delayFactor_ = delayFactor;\n  };\n\n  _proto.getFuzzFactor = function getFuzzFactor() {\n    return this.fuzzFactor_;\n  };\n\n  _proto.setFuzzFactor = function setFuzzFactor(fuzzFactor) {\n    this.fuzzFactor_ = fuzzFactor;\n  };\n\n  _proto.getInitialDelay = function getInitialDelay() {\n    return this.initialDelay_;\n  };\n\n  _proto.setInitialDelay = function setInitialDelay(initialDelay) {\n    this.initialDelay_ = initialDelay;\n  };\n\n  _proto.createRetry = function createRetry(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        maxAttempts = _ref.maxAttempts,\n        delayFactor = _ref.delayFactor,\n        fuzzFactor = _ref.fuzzFactor,\n        initialDelay = _ref.initialDelay;\n\n    return new Retry({\n      maxAttempts: maxAttempts || this.maxAttempts_,\n      delayFactor: delayFactor || this.delayFactor_,\n      fuzzFactor: fuzzFactor || this.fuzzFactor_,\n      initialDelay: initialDelay || this.initialDelay_\n    });\n  };\n\n  return RetryManager;\n}();\n\nvar Retry = /*#__PURE__*/function () {\n  function Retry(options) {\n    this.maxAttempts_ = options.maxAttempts;\n    this.delayFactor_ = options.delayFactor;\n    this.fuzzFactor_ = options.fuzzFactor;\n    this.currentDelay_ = options.initialDelay;\n    this.currentAttempt_ = 1;\n  }\n\n  var _proto2 = Retry.prototype;\n\n  _proto2.moveToNextAttempt = function moveToNextAttempt() {\n    this.currentAttempt_++;\n    var delayDelta = this.currentDelay_ * this.delayFactor_;\n    this.currentDelay_ = this.currentDelay_ + delayDelta;\n  };\n\n  _proto2.shouldRetry = function shouldRetry() {\n    return this.currentAttempt_ < this.maxAttempts_;\n  };\n\n  _proto2.getCurrentDelay = function getCurrentDelay() {\n    return this.currentDelay_;\n  };\n\n  _proto2.getCurrentMinPossibleDelay = function getCurrentMinPossibleDelay() {\n    return (1 - this.fuzzFactor_) * this.currentDelay_;\n  };\n\n  _proto2.getCurrentMaxPossibleDelay = function getCurrentMaxPossibleDelay() {\n    return (1 + this.fuzzFactor_) * this.currentDelay_;\n  }\n  /**\n   * For example fuzzFactor is 0.1\n   * This means ±10% deviation\n   * So if we have delay as 1000\n   * This function can generate any value from 900 to 1100\n   */\n  ;\n\n  _proto2.getCurrentFuzzedDelay = function getCurrentFuzzedDelay() {\n    var lowValue = this.getCurrentMinPossibleDelay();\n    var highValue = this.getCurrentMaxPossibleDelay();\n    return lowValue + Math.random() * (highValue - lowValue);\n  };\n\n  return Retry;\n}();\n\nmodule.exports = RetryManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}