{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.js\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  isAdminRoute\n}) => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useSelector(state => state.user);\n  if (!isAuthenticated) {\n    // If the user is not authenticated, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (isAdminRoute && !(user !== null && user !== void 0 && user.is_admin)) {\n    // If the route is admin only and the user is not an admin, redirect to the home page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user is authenticated and has the necessary privileges, render the child component\n  return children;\n};\n_s(ProtectedRoute, \"rjqGI63hpmZClfT6Pvn/BiFQSF8=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useSelector","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","isAdminRoute","_s","user","isAuthenticated","state","to","fileName","_jsxFileName","lineNumber","columnNumber","is_admin","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children, isAdminRoute }) => {\r\n  const { user, isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  if (!isAuthenticated) {\r\n    // If the user is not authenticated, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  if (isAdminRoute && !user?.is_admin) {\r\n    // If the route is admin only and the user is not an admin, redirect to the home page\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  // If the user is authenticated and has the necessary privileges, render the child component\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAAEC,IAAI;IAAEC;EAAgB,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACF,IAAI,CAAC;EAEpE,IAAI,CAACC,eAAe,EAAE;IACpB;IACA,oBAAON,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAIT,YAAY,IAAI,EAACE,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEQ,QAAQ,GAAE;IACnC;IACA,oBAAOb,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;;EAEA;EACA,OAAOV,QAAQ;AACjB,CAAC;AAACE,EAAA,CAfIH,cAAc;EAAA,QACgBJ,WAAW;AAAA;AAAAiB,EAAA,GADzCb,cAAc;AAiBpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}