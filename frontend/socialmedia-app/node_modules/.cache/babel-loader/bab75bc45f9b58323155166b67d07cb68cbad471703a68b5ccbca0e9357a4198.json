{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../../config';\n\n// Thunk to fetch chat rooms\nexport const fetchChatRooms = createAsyncThunk('chat/fetchChatRooms', async ({\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/api/chat/chatrooms/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n  }\n});\n\n// Thunk to create a chat room\nexport const createChatRoom = createAsyncThunk('chat/createChatRoom', async ({\n  roomName,\n  participants,\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/api/chat/chatrooms/`, {\n      room_name: roomName,\n      participants\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response2;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n  }\n});\n\n// Thunk to fetch messages for a specific room\nexport const fetchMessages = createAsyncThunk('chat/fetchMessages', async ({\n  roomName,\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/api/chat/messages/${roomName}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response3;\n    return rejectWithValue(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n  }\n});\n\n// Thunk to send a message\nexport const sendMessage = createAsyncThunk('chat/sendMessage', async ({\n  roomName,\n  message,\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/api/chat/messages/${roomName}/`, {\n      message\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response4;\n    return rejectWithValue(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || err.message);\n  }\n});\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState: {\n    rooms: [],\n    messages: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    addMessage: (state, action) => {\n      state.messages.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    // Handling chat room fetch\n    builder.addCase(fetchChatRooms.pending, state => {\n      state.loading = true;\n    }).addCase(fetchChatRooms.fulfilled, (state, action) => {\n      state.loading = false;\n      state.rooms = action.payload;\n    }).addCase(fetchChatRooms.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    });\n\n    // Handling chat room creation\n    builder.addCase(createChatRoom.pending, state => {\n      state.loading = true;\n    }).addCase(createChatRoom.fulfilled, (state, action) => {\n      state.loading = false;\n      state.rooms.push(action.payload);\n    }).addCase(createChatRoom.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    });\n\n    // Handling messages fetch\n    builder.addCase(fetchMessages.pending, state => {\n      state.loading = true;\n    }).addCase(fetchMessages.fulfilled, (state, action) => {\n      state.loading = false;\n      state.messages = action.payload;\n    }).addCase(fetchMessages.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    });\n\n    // Handling message send\n    builder.addCase(sendMessage.pending, state => {\n      state.loading = true;\n    }).addCase(sendMessage.fulfilled, (state, action) => {\n      state.loading = false;\n      state.messages.push(action.payload);\n    }).addCase(sendMessage.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    });\n  }\n});\nexport default chatSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","BASE_URL","fetchChatRooms","token","rejectWithValue","response","get","headers","Authorization","data","err","_err$response","message","createChatRoom","roomName","participants","post","room_name","_err$response2","fetchMessages","_err$response3","sendMessage","_err$response4","chatSlice","name","initialState","rooms","messages","loading","error","reducers","addMessage","state","action","push","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","reducer"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/features/auth/chatSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../config';\r\n\r\n// Thunk to fetch chat rooms\r\nexport const fetchChatRooms = createAsyncThunk(\r\n  'chat/fetchChatRooms',\r\n  async ({ token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/chat/chatrooms/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Thunk to create a chat room\r\nexport const createChatRoom = createAsyncThunk(\r\n    'chat/createChatRoom',\r\n    async ({ roomName, participants, token }, { rejectWithValue }) => {\r\n      try {\r\n        const response = await axios.post(\r\n          `${BASE_URL}/api/chat/chatrooms/`,\r\n          { room_name: roomName, participants },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            }\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (err) {\r\n        return rejectWithValue(err.response?.data || err.message);\r\n      }\r\n    }\r\n  );\r\n  \r\n// Thunk to fetch messages for a specific room\r\nexport const fetchMessages = createAsyncThunk(\r\n  'chat/fetchMessages',\r\n  async ({ roomName, token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/chat/messages/${roomName}/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Thunk to send a message\r\nexport const sendMessage = createAsyncThunk(\r\n  'chat/sendMessage',\r\n  async ({ roomName, message, token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${BASE_URL}/api/chat/messages/${roomName}/`,\r\n        { message },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState: {\r\n    rooms: [],\r\n    messages: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    addMessage: (state, action) => {\r\n        state.messages.push(action.payload);  \r\n      },\r\n    },\r\n  extraReducers: (builder) => {\r\n    // Handling chat room fetch\r\n    builder\r\n      .addCase(fetchChatRooms.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchChatRooms.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.rooms = action.payload;\r\n      })\r\n      .addCase(fetchChatRooms.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message;\r\n      });\r\n\r\n    // Handling chat room creation\r\n    builder\r\n      .addCase(createChatRoom.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(createChatRoom.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.rooms.push(action.payload);\r\n      })\r\n      .addCase(createChatRoom.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message;\r\n      });\r\n\r\n    // Handling messages fetch\r\n    builder\r\n      .addCase(fetchMessages.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchMessages.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.messages = action.payload;\r\n      })\r\n      .addCase(fetchMessages.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message;\r\n      });\r\n\r\n    // Handling message send\r\n    builder\r\n      .addCase(sendMessage.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(sendMessage.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.messages.push(action.payload);\r\n      })\r\n      .addCase(sendMessage.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default chatSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}