{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\pages\\\\ViewPostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { BASE_URL } from '../config';\nimport { showErrorToast } from '../components/ErroToast';\nimport { showSuccessToast } from '../components/CustomToast';\nimport { fetchProfile } from '../features/auth/profileSlice';\nimport { fetchBookmarks, fetchPosts, handleBookmark, handleLike, viewPost } from '../features/auth/postSlice';\nimport ViewPostBoxComponent from '../components/ViewPostBoxComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewPostPage = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const [comments, setComments] = useState({});\n  const [newComment, setNewComment] = useState('');\n  const [openCommentId, setOpenCommentId] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [replyingToCommentId, setReplyingToCommentId] = useState(null);\n  const token = useSelector(state => state.auth.token);\n  const user = useSelector(state => state.user.user);\n  const userId = user.id;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    profile,\n    loading: userLoading,\n    error: userError\n  } = useSelector(state => state.profile);\n  const {\n    loading: postLoading,\n    error: postError,\n    currentPost\n  } = useSelector(state => state.posts);\n  useEffect(() => {\n    if (user && token) {\n      dispatch(fetchProfile({\n        userId: user.id,\n        token\n      }));\n      dispatch(viewPost({\n        postId,\n        token\n      }));\n    }\n  }, [user, token]);\n  console.log(profile);\n  console.log(currentPost);\n  console.log(currentPost && currentPost.content);\n  const fetchComments = async postId => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(`getting comment resposne:${response.data}`);\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: response.data\n      }));\n    } catch (error) {\n      console.log(\"Error fetching comments\");\n    }\n  };\n  useEffect(() => {\n    fetchComments(postId);\n  }, [currentPost]);\n  const postLike = async postId => {\n    dispatch(handleLike({\n      postId,\n      token,\n      userId: user.id\n    }));\n  };\n  const handleToggleComments = postId => {\n    if (openCommentId === postId) {\n      setOpenCommentId(null);\n    } else {\n      setOpenCommentId(postId);\n      fetchComments(postId);\n    }\n  };\n  const handleSubmitComment = async (postId, commentText, parentId = null) => {\n    if (!commentText.trim()) {\n      showErrorToast('Empty Comment Box');\n      return;\n    }\n    try {\n      const response = await axios.post(`${BASE_URL}/api/comments/`, {\n        post: postId,\n        content: commentText,\n        user: user.id,\n        parent: parentId // Include parentId here\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newCommentData = response.data;\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData]\n      }));\n      setNewComment(\"\");\n      setReplyingToCommentId(null);\n      dispatch(fetchPosts({\n        userId: user.id,\n        token\n      }));\n      showSuccessToast(\"Comment submitted successfully\");\n    } catch (error) {\n      showErrorToast(\"Error submitting comment\");\n    }\n  };\n  const handleAddEmoji = emoji => {\n    setCommentText(prev => prev + emoji.native); // Append the selected emoji to the comment text\n  };\n  const toggleBookmark = (postId, isBookmarked) => {\n    dispatch(handleBookmark({\n      postId,\n      token,\n      isBookmarked\n    }));\n  };\n  if (!currentPost) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto bg-white shadow-md rounded-md overflow-hidden mt-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 sm:p-6\",\n      children: /*#__PURE__*/_jsxDEV(ViewPostBoxComponent, {\n        currentPost: currentPost,\n        user: user,\n        handleLike: postLike,\n        handleToggleComments: handleToggleComments,\n        handleBookmark: toggleBookmark,\n        openCommentId: openCommentId,\n        handleSubmitComment: handleSubmitComment,\n        replyingToCommentId: replyingToCommentId,\n        setReplyingToCommentId: setReplyingToCommentId,\n        setCommentText: setCommentText,\n        setShowEmojiPicker: setShowEmojiPicker,\n        showEmojiPicker: showEmojiPicker,\n        handleAddEmoji: handleAddEmoji,\n        comments: comments,\n        commentText: commentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewPostPage, \"OBs/Lgj4Ww3OPRF8H5gP4mh9wcE=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = ViewPostPage;\nexport default ViewPostPage;\nvar _c;\n$RefreshReg$(_c, \"ViewPostPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","useDispatch","useSelector","axios","BASE_URL","showErrorToast","showSuccessToast","fetchProfile","fetchBookmarks","fetchPosts","handleBookmark","handleLike","viewPost","ViewPostBoxComponent","jsxDEV","_jsxDEV","ViewPostPage","_s","postId","comments","setComments","newComment","setNewComment","openCommentId","setOpenCommentId","showEmojiPicker","setShowEmojiPicker","commentText","setCommentText","replyingToCommentId","setReplyingToCommentId","token","state","auth","user","userId","id","dispatch","navigate","profile","loading","userLoading","error","userError","postLoading","postError","currentPost","posts","console","log","content","fetchComments","response","get","headers","Authorization","data","prevComments","postLike","handleToggleComments","handleSubmitComment","parentId","trim","post","parent","newCommentData","handleAddEmoji","emoji","prev","native","toggleBookmark","isBookmarked","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/pages/ViewPostPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../config';\r\nimport { showErrorToast } from '../components/ErroToast';\r\nimport { showSuccessToast } from '../components/CustomToast';\r\nimport { fetchProfile } from '../features/auth/profileSlice';\r\nimport { fetchBookmarks, fetchPosts, handleBookmark, handleLike, viewPost } from '../features/auth/postSlice';\r\nimport ViewPostBoxComponent from '../components/ViewPostBoxComponent';\r\n\r\n\r\nconst ViewPostPage = () => {\r\n  const { postId } = useParams(); \r\n  const [comments, setComments] = useState({});\r\n  const [newComment, setNewComment] = useState('');\r\n  const [openCommentId, setOpenCommentId] = useState(null);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [commentText, setCommentText] = useState('');\r\n  const [replyingToCommentId, setReplyingToCommentId] = useState(null); \r\n  const token = useSelector((state) => state.auth.token);\r\n  const user = useSelector((state) => state.user.user);\r\n  const userId=user.id\r\n  const dispatch = useDispatch()\r\n  const navigate=useNavigate();\r\n  const {  profile,loading:userLoading, error:userError } = useSelector((state) => state.profile);\r\n  const {  loading:postLoading, error:postError ,currentPost} = useSelector((state) => state.posts);\r\n\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    if (user && token) {\r\n      dispatch(fetchProfile({ userId:user.id, token }));\r\n      dispatch(viewPost({ postId, token }));\r\n      \r\n      \r\n    }\r\n  }, [user, token]);\r\n  \r\n  console.log(profile)\r\n  console.log(currentPost)\r\n  console.log(currentPost && currentPost.content);\r\n  const fetchComments = async (postId) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      console.log(`getting comment resposne:${response.data}`)\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: response.data,\r\n        \r\n      }));\r\n    } catch (error) {\r\n      console.log(\"Error fetching comments\");\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n   \r\n        \r\n        fetchComments(postId);\r\n   \r\n    }, [currentPost]);\r\n\r\n const postLike = async  (postId) => {\r\n    dispatch(handleLike({ postId, token ,userId:user.id}));\r\n  };\r\n\r\n\r\n  const handleToggleComments = (postId) => {\r\n    if (openCommentId === postId) {\r\n      setOpenCommentId(null);\r\n    } else {\r\n      setOpenCommentId(postId);\r\n      fetchComments(postId);\r\n    }\r\n  };\r\n  const handleSubmitComment = async (postId, commentText, parentId = null) => {\r\n    if (!commentText.trim()) {\r\n      showErrorToast('Empty Comment Box');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/api/comments/`, {\r\n        post: postId,\r\n        content: commentText,\r\n        user: user.id,\r\n        parent: parentId, // Include parentId here\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      const newCommentData = response.data;\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: [...(prevComments[postId] || []), newCommentData],\r\n      }));\r\n  \r\n      setNewComment(\"\");\r\n      setReplyingToCommentId(null);\r\n      dispatch(fetchPosts({ userId: user.id, token }));\r\n      showSuccessToast(\"Comment submitted successfully\");\r\n     \r\n    } catch (error) {\r\n      showErrorToast(\"Error submitting comment\");\r\n    }\r\n  };\r\n \r\n  \r\n\r\n  const handleAddEmoji = (emoji) => {\r\n    setCommentText((prev) => prev + emoji.native); // Append the selected emoji to the comment text\r\n  };\r\n  \r\n  const toggleBookmark = (postId,isBookmarked) => {\r\n    dispatch(handleBookmark({ postId, token, isBookmarked }));\r\n  };\r\n\r\n  if (!currentPost) {\r\n    return <div>Loading post...</div>;\r\n  }\r\n  \r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"max-w-3xl mx-auto bg-white shadow-md rounded-md overflow-hidden mt-8\">\r\n      \r\n      \r\n        <div className=\"p-4 sm:p-6\">\r\n        \r\n\r\n        \r\n            <ViewPostBoxComponent \r\n              currentPost={currentPost}\r\n              user={user}\r\n              handleLike={postLike}\r\n              handleToggleComments={handleToggleComments}\r\n              handleBookmark={toggleBookmark}\r\n              openCommentId={openCommentId}\r\n              handleSubmitComment={handleSubmitComment}\r\n              replyingToCommentId={replyingToCommentId}\r\n              setReplyingToCommentId={setReplyingToCommentId}\r\n              setCommentText={setCommentText}\r\n              setShowEmojiPicker={setShowEmojiPicker}\r\n              showEmojiPicker={showEmojiPicker}\r\n              handleAddEmoji={handleAddEmoji}\r\n              comments={comments}\r\n              commentText={commentText}\r\n              />\r\n       \r\n           \r\n            \r\n        </div>\r\n     \r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPostPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}