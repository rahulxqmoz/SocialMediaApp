{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\VideoTrimmer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport videojs from 'video.js';\nimport { FFmpeg } from '@ffmpeg/ffmpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoTrimmer = ({\n  videoUrl,\n  onSave,\n  onClose\n}) => {\n  _s();\n  const playerRef = useRef(null);\n  const [videoPlayer, setVideoPlayer] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [ffmpeg] = useState(FFmpeg({\n    log: true\n  })); // Create FFmpeg instance\n\n  useEffect(() => {\n    if (playerRef.current && !videoPlayer) {\n      const player = videojs(playerRef.current, {\n        controls: true,\n        autoplay: false,\n        preload: 'auto'\n      });\n      setVideoPlayer(player);\n    }\n    return () => {\n      if (videoPlayer) {\n        videoPlayer.dispose();\n      }\n    };\n  }, [playerRef, videoPlayer]);\n\n  // Function to handle video trimming\n  const handleSave = async () => {\n    setIsProcessing(true);\n    try {\n      await ffmpeg.load(); // Load FFmpeg if not already loaded\n\n      const {\n        start,\n        end\n      } = {\n        start: '00:00:00',\n        end: '00:01:00'\n      }; // Example trim values\n      const response = await fetch(videoUrl);\n      const fileData = await response.arrayBuffer(); // Use arrayBuffer to get video data\n      ffmpeg.FS('writeFile', 'input.mp4', new Uint8Array(fileData));\n\n      // Run FFmpeg command to trim the video\n      await ffmpeg.run('-i', 'input.mp4', '-ss', start, '-to', end, '-c', 'copy', 'output.mp4');\n      const data = ffmpeg.FS('readFile', 'output.mp4');\n      const trimmedVideoBlob = new Blob([data.buffer], {\n        type: 'video/mp4'\n      });\n      const trimmedVideoUrl = URL.createObjectURL(trimmedVideoBlob);\n      onSave(trimmedVideoUrl); // Pass trimmed video URL to parent component\n    } catch (error) {\n      console.error('Error trimming video:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: playerRef,\n      className: \"video-js\",\n      src: videoUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      disabled: isProcessing,\n      className: \"absolute bottom-4 right-4 bg-blue-500 text-white px-4 py-2 rounded-md shadow-lg hover:bg-blue-600\",\n      children: isProcessing ? 'Processing...' : 'Save'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: \"absolute top-4 right-4 bg-gray-500 text-white px-4 py-2 rounded-md shadow-lg hover:bg-gray-600\",\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoTrimmer, \"DuKWffNdUndtypHWsxM8t0QthdI=\");\n_c = VideoTrimmer;\nexport default VideoTrimmer;\nvar _c;\n$RefreshReg$(_c, \"VideoTrimmer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","videojs","FFmpeg","jsxDEV","_jsxDEV","VideoTrimmer","videoUrl","onSave","onClose","_s","playerRef","videoPlayer","setVideoPlayer","isProcessing","setIsProcessing","ffmpeg","log","current","player","controls","autoplay","preload","dispose","handleSave","load","start","end","response","fetch","fileData","arrayBuffer","FS","Uint8Array","run","data","trimmedVideoBlob","Blob","buffer","type","trimmedVideoUrl","URL","createObjectURL","error","console","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/VideoTrimmer.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport videojs from 'video.js';\r\nimport { FFmpeg  } from '@ffmpeg/ffmpeg';\r\n\r\nconst VideoTrimmer = ({ videoUrl, onSave, onClose }) => {\r\n  const playerRef = useRef(null);\r\n  const [videoPlayer, setVideoPlayer] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [ffmpeg] = useState(FFmpeg({ log: true })); // Create FFmpeg instance\r\n\r\n  useEffect(() => {\r\n    if (playerRef.current && !videoPlayer) {\r\n      const player = videojs(playerRef.current, {\r\n        controls: true,\r\n        autoplay: false,\r\n        preload: 'auto',\r\n      });\r\n      setVideoPlayer(player);\r\n    }\r\n    return () => {\r\n      if (videoPlayer) {\r\n        videoPlayer.dispose();\r\n      }\r\n    };\r\n  }, [playerRef, videoPlayer]);\r\n\r\n  // Function to handle video trimming\r\n  const handleSave = async () => {\r\n    setIsProcessing(true);\r\n    try {\r\n      await ffmpeg.load(); // Load FFmpeg if not already loaded\r\n\r\n      const { start, end } = { start: '00:00:00', end: '00:01:00' }; // Example trim values\r\n      const response = await fetch(videoUrl);\r\n      const fileData = await response.arrayBuffer(); // Use arrayBuffer to get video data\r\n      ffmpeg.FS('writeFile', 'input.mp4', new Uint8Array(fileData));\r\n\r\n      // Run FFmpeg command to trim the video\r\n      await ffmpeg.run(\r\n        '-i', 'input.mp4',\r\n        '-ss', start,\r\n        '-to', end,\r\n        '-c', 'copy',\r\n        'output.mp4'\r\n      );\r\n\r\n      const data = ffmpeg.FS('readFile', 'output.mp4');\r\n      const trimmedVideoBlob = new Blob([data.buffer], { type: 'video/mp4' });\r\n      const trimmedVideoUrl = URL.createObjectURL(trimmedVideoBlob);\r\n\r\n      onSave(trimmedVideoUrl); // Pass trimmed video URL to parent component\r\n    } catch (error) {\r\n      console.error('Error trimming video:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <video ref={playerRef} className=\"video-js\" src={videoUrl} />\r\n      <button\r\n        onClick={handleSave}\r\n        disabled={isProcessing}\r\n        className=\"absolute bottom-4 right-4 bg-blue-500 text-white px-4 py-2 rounded-md shadow-lg hover:bg-blue-600\"\r\n      >\r\n        {isProcessing ? 'Processing...' : 'Save'}\r\n      </button>\r\n      <button\r\n        onClick={onClose}\r\n        className=\"absolute top-4 right-4 bg-gray-500 text-white px-4 py-2 rounded-md shadow-lg hover:bg-gray-600\"\r\n      >\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoTrimmer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}