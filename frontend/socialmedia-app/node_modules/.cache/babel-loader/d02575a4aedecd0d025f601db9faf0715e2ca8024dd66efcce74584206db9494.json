{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\PostBoxComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { FaSmile, FaImage, FaVideo, FaTimes } from 'react-icons/fa';\nimport EmojiPicker from 'emoji-picker-react';\nimport ImageCropper from './Cropper';\nimport VideoTrimmer from './VideoTrimmer'; // Import the VideoTrimmer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostBox = ({\n  onPostSubmit\n}) => {\n  _s();\n  const [postContent, setPostContent] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null); // For image preview\n  const [croppedImage, setCroppedImage] = useState(null); // Cropped image data\n  const [selectedVideo, setSelectedVideo] = useState(null); // For video preview\n  const [trimmedVideo, setTrimmedVideo] = useState(null); // Trimmed video data\n  const [error, setError] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [showCropper, setShowCropper] = useState(false); // To show cropper\n  const [showTrimmer, setShowTrimmer] = useState(false); // To show video trimmer\n\n  const cropperRef = useRef(null); // Ref for the cropper\n  const imageInputRef = useRef(null); // Ref for clearing image input\n\n  // Handle text area content change\n  const handleContentChange = e => {\n    setPostContent(e.target.value);\n  };\n\n  // Handle emoji click event to add emoji to textarea\n  const handleEmojiClick = emojiObject => {\n    setPostContent(prevContent => prevContent + emojiObject.emoji);\n    setShowEmojiPicker(false); // Hide emoji picker after selection\n  };\n\n  // Handle file selection (image/video)\n  const handleFileChange = (event, type) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const validImageTypes = ['image/jpeg', 'image/png', 'image/jpg'];\n    const validVideoTypes = ['video/mp4', 'video/webm', 'video/ogg'];\n    if (type === 'image' && validImageTypes.includes(file.type)) {\n      setSelectedImage(URL.createObjectURL(file));\n      setSelectedVideo(null); // Clear video if image is selected\n      setShowCropper(true); // Show the cropper when image is selected\n    } else if (type === 'video' && validVideoTypes.includes(file.type)) {\n      setSelectedVideo(URL.createObjectURL(file));\n      setSelectedImage(null); // Clear image if video is selected\n      setShowTrimmer(true); // Show the trimmer when video is selected\n      setVideoDuration(file.duration);\n    } else {\n      setError('Please select a valid image or video file.');\n    }\n\n    // Clear the file input after selection\n    if (imageInputRef.current) {\n      imageInputRef.current.value = '';\n    }\n    if (videoInputRef.current) {\n      videoInputRef.current.value = '';\n    }\n  };\n\n  // Handle saving the cropped image\n  const handleSaveCrop = () => {\n    const cropper = cropperRef.current.cropper; // Get the cropper instance\n    const croppedImageUrl = cropper.getCroppedCanvas().toDataURL(); // Get the cropped image data URL\n    setCroppedImage(croppedImageUrl); // Save cropped image\n    setShowCropper(false); // Hide cropper after saving\n    setSelectedImage(null); // Clear selected image\n  };\n\n  // Handle saving the trimmed video\n  const handleSaveTrim = videoUrl => {\n    setTrimmedVideo(videoUrl); // Save trimmed video\n    setShowTrimmer(false); // Hide trimmer after saving\n    setSelectedVideo(null); // Clear selected video\n  };\n\n  // Handle removing the selected image or video\n  const handleRemoveImage = () => {\n    setSelectedImage(null);\n    setCroppedImage(null);\n    setShowCropper(false);\n  };\n  const handleRemoveVideo = () => {\n    setSelectedVideo(null);\n    setTrimmedVideo(null);\n    setShowTrimmer(false);\n    if (videoInputRef.current) {\n      videoInputRef.current.value = '';\n    }\n  };\n  const videoInputRef = useRef(null);\n  // Handle post submission\n  const handlePost = () => {\n    if (!postContent.trim() && !croppedImage && !trimmedVideo) {\n      setError('Post content or media is required.');\n      return;\n    }\n    onPostSubmit({\n      content: postContent,\n      image: croppedImage,\n      video: trimmedVideo\n    });\n    setPostContent('');\n    setSelectedImage(null);\n    setCroppedImage(null);\n    setSelectedVideo(null);\n    setTrimmedVideo(null);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border p-4 rounded-md shadow-sm relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 border border-gray-300 rounded-md mb-2\",\n      placeholder: \"What's on your mind?\",\n      value: postContent,\n      onChange: handleContentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"flex items-center space-x-1 relative\",\n        onClick: () => setShowEmojiPicker(!showEmojiPicker),\n        children: /*#__PURE__*/_jsxDEV(FaSmile, {\n          className: \"text-xl text-gray-500 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute z-10 bottom-12 left-0\",\n        children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image-upload\",\n        className: \"cursor-pointer flex items-center space-x-1\",\n        children: [/*#__PURE__*/_jsxDEV(FaImage, {\n          className: \"text-xl text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image-upload\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => handleFileChange(e, 'image'),\n          className: \"hidden\",\n          ref: imageInputRef // Ref for image input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"video-upload\",\n        className: \"cursor-pointer flex items-center space-x-1\",\n        children: [/*#__PURE__*/_jsxDEV(FaVideo, {\n          className: \"text-xl text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"video-upload\",\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: e => handleFileChange(e, 'video'),\n          className: \"hidden\",\n          ref: videoInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), showCropper && selectedImage && /*#__PURE__*/_jsxDEV(ImageCropper, {\n      ref: cropperRef,\n      modalImage: selectedImage,\n      onSave: handleSaveCrop,\n      onClose: () => setShowCropper(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: croppedImage,\n        alt: \"Cropped\",\n        className: \"max-w-full h-auto rounded-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\",\n        onClick: handleRemoveImage,\n        children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), showTrimmer && selectedVideo && /*#__PURE__*/_jsxDEV(VideoTrimmer, {\n      videoUrl: selectedVideo,\n      videoDuration: videoDuration,\n      onSave: handleSaveTrim,\n      onClose: handleRemoveVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)\n    //     <VideoTrimmerAlternative\n    //     videoUrl={selectedVideo}\n    //     onSave={handleSaveTrim}\n    //     onClose={handleRemoveVideo}\n    //   />\n    , trimmedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        src: trimmedVideo,\n        className: \"max-w-full h-auto rounded-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\",\n        onClick: handleRemoveVideo,\n        children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white px-4 py-2 rounded-md shadow hover:bg-blue-600\",\n      onClick: handlePost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(PostBox, \"bfFPUbD30Qx5IACQZzPKvqCiFM4=\");\n_c = PostBox;\nexport default PostBox;\nvar _c;\n$RefreshReg$(_c, \"PostBox\");","map":{"version":3,"names":["React","useState","useRef","FaSmile","FaImage","FaVideo","FaTimes","EmojiPicker","ImageCropper","VideoTrimmer","jsxDEV","_jsxDEV","PostBox","onPostSubmit","_s","postContent","setPostContent","selectedImage","setSelectedImage","croppedImage","setCroppedImage","selectedVideo","setSelectedVideo","trimmedVideo","setTrimmedVideo","error","setError","showEmojiPicker","setShowEmojiPicker","showCropper","setShowCropper","showTrimmer","setShowTrimmer","cropperRef","imageInputRef","handleContentChange","e","target","value","handleEmojiClick","emojiObject","prevContent","emoji","handleFileChange","event","type","file","files","validImageTypes","validVideoTypes","includes","URL","createObjectURL","setVideoDuration","duration","current","videoInputRef","handleSaveCrop","cropper","croppedImageUrl","getCroppedCanvas","toDataURL","handleSaveTrim","videoUrl","handleRemoveImage","handleRemoveVideo","handlePost","trim","content","image","video","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onEmojiClick","htmlFor","id","accept","ref","modalImage","onSave","onClose","src","alt","videoDuration","controls","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/PostBoxComponent.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { FaSmile, FaImage, FaVideo, FaTimes } from 'react-icons/fa';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport ImageCropper from './Cropper';\r\nimport VideoTrimmer from './VideoTrimmer'; // Import the VideoTrimmer\r\n\r\nconst PostBox = ({ onPostSubmit }) => {\r\n  const [postContent, setPostContent] = useState('');\r\n  const [selectedImage, setSelectedImage] = useState(null); // For image preview\r\n  const [croppedImage, setCroppedImage] = useState(null); // Cropped image data\r\n  const [selectedVideo, setSelectedVideo] = useState(null); // For video preview\r\n  const [trimmedVideo, setTrimmedVideo] = useState(null); // Trimmed video data\r\n  const [error, setError] = useState(null);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [showCropper, setShowCropper] = useState(false); // To show cropper\r\n  const [showTrimmer, setShowTrimmer] = useState(false); // To show video trimmer\r\n\r\n  const cropperRef = useRef(null); // Ref for the cropper\r\n  const imageInputRef = useRef(null); // Ref for clearing image input\r\n\r\n  // Handle text area content change\r\n  const handleContentChange = (e) => {\r\n    setPostContent(e.target.value);\r\n  };\r\n\r\n  // Handle emoji click event to add emoji to textarea\r\n  const handleEmojiClick = (emojiObject) => {\r\n    setPostContent((prevContent) => prevContent + emojiObject.emoji);\r\n    setShowEmojiPicker(false); // Hide emoji picker after selection\r\n  };\r\n\r\n  // Handle file selection (image/video)\r\n  const handleFileChange = (event, type) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const validImageTypes = ['image/jpeg', 'image/png', 'image/jpg'];\r\n    const validVideoTypes = ['video/mp4', 'video/webm', 'video/ogg'];\r\n\r\n    if (type === 'image' && validImageTypes.includes(file.type)) {\r\n      setSelectedImage(URL.createObjectURL(file));\r\n      setSelectedVideo(null); // Clear video if image is selected\r\n      setShowCropper(true); // Show the cropper when image is selected\r\n    } else if (type === 'video' && validVideoTypes.includes(file.type)) {\r\n      setSelectedVideo(URL.createObjectURL(file));\r\n      setSelectedImage(null); // Clear image if video is selected\r\n      setShowTrimmer(true); // Show the trimmer when video is selected\r\n      setVideoDuration(file.duration); \r\n    } else {\r\n      setError('Please select a valid image or video file.');\r\n    }\r\n\r\n    // Clear the file input after selection\r\n    if (imageInputRef.current) {\r\n      imageInputRef.current.value = '';\r\n    }\r\n    if (videoInputRef.current) {\r\n      videoInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  // Handle saving the cropped image\r\n  const handleSaveCrop = () => {\r\n    const cropper = cropperRef.current.cropper; // Get the cropper instance\r\n    const croppedImageUrl = cropper.getCroppedCanvas().toDataURL(); // Get the cropped image data URL\r\n    setCroppedImage(croppedImageUrl); // Save cropped image\r\n    setShowCropper(false); // Hide cropper after saving\r\n    setSelectedImage(null); // Clear selected image\r\n  };\r\n\r\n  // Handle saving the trimmed video\r\n  const handleSaveTrim = (videoUrl) => {\r\n    setTrimmedVideo(videoUrl); // Save trimmed video\r\n    setShowTrimmer(false); // Hide trimmer after saving\r\n    setSelectedVideo(null); // Clear selected video\r\n  };\r\n\r\n  // Handle removing the selected image or video\r\n  const handleRemoveImage = () => {\r\n    setSelectedImage(null);\r\n    setCroppedImage(null);\r\n    setShowCropper(false);\r\n  };\r\n\r\n  const handleRemoveVideo = () => {\r\n    setSelectedVideo(null);\r\n    setTrimmedVideo(null);\r\n    setShowTrimmer(false);\r\n\r\n    if (videoInputRef.current) {\r\n        videoInputRef.current.value = '';\r\n      }\r\n  };\r\n  const videoInputRef = useRef(null);\r\n  // Handle post submission\r\n  const handlePost = () => {\r\n    if (!postContent.trim() && !croppedImage && !trimmedVideo) {\r\n      setError('Post content or media is required.');\r\n      return;\r\n    }\r\n\r\n    onPostSubmit({ content: postContent, image: croppedImage, video: trimmedVideo });\r\n    setPostContent('');\r\n    setSelectedImage(null);\r\n    setCroppedImage(null);\r\n    setSelectedVideo(null);\r\n    setTrimmedVideo(null);\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"border p-4 rounded-md shadow-sm relative\">\r\n      <textarea\r\n        className=\"w-full p-2 border border-gray-300 rounded-md mb-2\"\r\n        placeholder=\"What's on your mind?\"\r\n        value={postContent}\r\n        onChange={handleContentChange}\r\n      />\r\n\r\n      <div className=\"flex items-center space-x-4 mb-4\">\r\n        {/* Emoji button */}\r\n        <button\r\n          type=\"button\"\r\n          className=\"flex items-center space-x-1 relative\"\r\n          onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n        >\r\n          <FaSmile className=\"text-xl text-gray-500 cursor-pointer\" />\r\n        </button>\r\n\r\n        {/* Show emoji picker */}\r\n        {showEmojiPicker && (\r\n          <div className=\"absolute z-10 bottom-12 left-0\">\r\n            <EmojiPicker onEmojiClick={handleEmojiClick} />\r\n          </div>\r\n        )}\r\n\r\n        {/* Image upload */}\r\n        <label htmlFor=\"image-upload\" className=\"cursor-pointer flex items-center space-x-1\">\r\n          <FaImage className=\"text-xl text-gray-500\" />\r\n          <input\r\n            id=\"image-upload\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => handleFileChange(e, 'image')}\r\n            className=\"hidden\"\r\n            ref={imageInputRef} // Ref for image input\r\n          />\r\n        </label>\r\n\r\n        {/* Video upload */}\r\n        <label htmlFor=\"video-upload\" className=\"cursor-pointer flex items-center space-x-1\">\r\n          <FaVideo className=\"text-xl text-gray-500\" />\r\n          <input\r\n            id=\"video-upload\"\r\n            type=\"file\"\r\n            accept=\"video/*\"\r\n            onChange={(e) => handleFileChange(e, 'video')}\r\n            className=\"hidden\"\r\n            ref={videoInputRef}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Image Cropper */}\r\n      {showCropper && selectedImage && (\r\n        <ImageCropper\r\n          ref={cropperRef}\r\n          modalImage={selectedImage}\r\n          onSave={handleSaveCrop}\r\n          onClose={() => setShowCropper(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Cropped Image Preview */}\r\n      {croppedImage && (\r\n        <div className=\"mb-2 relative\">\r\n          <img src={croppedImage} alt=\"Cropped\" className=\"max-w-full h-auto rounded-md\" />\r\n          <button\r\n            className=\"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\"\r\n            onClick={handleRemoveImage}\r\n          >\r\n            <FaTimes />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Video Trimmer */}\r\n      {showTrimmer && selectedVideo && (\r\n        <VideoTrimmer\r\n          videoUrl={selectedVideo}\r\n          videoDuration={videoDuration}\r\n          onSave={handleSaveTrim}\r\n          onClose={handleRemoveVideo}\r\n        />\r\n    //     <VideoTrimmerAlternative\r\n    //     videoUrl={selectedVideo}\r\n    //     onSave={handleSaveTrim}\r\n    //     onClose={handleRemoveVideo}\r\n    //   />\r\n      )}\r\n\r\n      {/* Trimmed Video Preview */}\r\n      {trimmedVideo && (\r\n        <div className=\"mb-2 relative\">\r\n          <video controls src={trimmedVideo} className=\"max-w-full h-auto rounded-md\" />\r\n          <button\r\n            className=\"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\"\r\n            onClick={handleRemoveVideo}\r\n          >\r\n            <FaTimes />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error message */}\r\n      {error && <p className=\"text-red-500 text-sm\">{error}</p>}\r\n\r\n      {/* Post button */}\r\n      <button\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded-md shadow hover:bg-blue-600\"\r\n        onClick={handlePost}\r\n      >\r\n        Post\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}