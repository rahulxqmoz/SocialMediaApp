{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\Notification.js\",\n  _s = $RefreshSig$();\n// NotificationList.js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchNotifications, markNotificationAsRead } from '../features/auth/notificationSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationList = ({\n  notifications,\n  onClose\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const navigate = useNavigate();\n  useEffect(() => {\n    dispatch(fetchNotifications({\n      token\n    }));\n  }, [dispatch, token]);\n  const handleNotificationClick = notificationId => {\n    dispatch(markNotificationAsRead({\n      notificationId,\n      token\n    }));\n    onClose(); // Close the notification list after clicking\n  };\n  const handleViewAllNotifications = () => {\n    navigate('/notifications');\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-bold mb-4\",\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.slice(0, 10).map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `p-4 border-b text-gray-800 cursor-pointer ${notification.is_read ? 'bg-gray-100' : 'bg-white'}`,\n        onClick: () => handleNotificationClick(notification.id),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: notification.sender_username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [notification.notification_type, \" your post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), notifications.length > 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-full p-4 text-center text-blue-600 hover:bg-gray-200\",\n      onClick: handleViewAllNotifications,\n      children: \"View All Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationList, \"PMUDn0neD/VmGxghI4eI07o5cvs=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchNotifications","markNotificationAsRead","useNavigate","jsxDEV","_jsxDEV","NotificationList","notifications","onClose","_s","dispatch","token","state","auth","navigate","handleNotificationClick","notificationId","handleViewAllNotifications","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","notification","is_read","onClick","id","sender_username","notification_type","length","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/Notification.js"],"sourcesContent":["// NotificationList.js\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchNotifications, markNotificationAsRead } from '../features/auth/notificationSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NotificationList = ({ notifications, onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNotifications({ token }));\r\n  }, [dispatch, token]);\r\n\r\n  const handleNotificationClick = (notificationId) => {\r\n    dispatch(markNotificationAsRead({ notificationId, token }));\r\n    onClose(); // Close the notification list after clicking\r\n  };\r\n\r\n  const handleViewAllNotifications = () => {\r\n    navigate('/notifications');\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col p-4\">\r\n      <h2 className=\"text-lg font-bold mb-4\">Notifications</h2>\r\n      <ul>\r\n        {notifications.slice(0, 10).map((notification) => (\r\n          <li\r\n            key={notification.id}\r\n            className={`p-4 border-b text-gray-800 cursor-pointer ${\r\n              notification.is_read ? 'bg-gray-100' : 'bg-white'\r\n            }`}\r\n            onClick={() => handleNotificationClick(notification.id)}\r\n          >\r\n            <p className=\"font-semibold\">{notification.sender_username}</p>\r\n            <p>{notification.notification_type} your post</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {notifications.length > 10 && (\r\n        <button\r\n          className=\"w-full p-4 text-center text-blue-600 hover:bg-gray-200\"\r\n          onClick={handleViewAllNotifications}\r\n        >\r\n          View All Notifications\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationList;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,EAAEC,sBAAsB,QAAQ,oCAAoC;AAC/F,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,KAAK,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EACtD,MAAMG,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACT,kBAAkB,CAAC;MAAEU;IAAM,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,CAACD,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAErB,MAAMI,uBAAuB,GAAIC,cAAc,IAAK;IAClDN,QAAQ,CAACR,sBAAsB,CAAC;MAAEc,cAAc;MAAEL;IAAM,CAAC,CAAC,CAAC;IAC3DH,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC;EAED,MAAMS,0BAA0B,GAAGA,CAAA,KAAM;IACvCH,QAAQ,CAAC,gBAAgB,CAAC;IAC1BN,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEH,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCd,OAAA;MAAIa,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDlB,OAAA;MAAAc,QAAA,EACGZ,aAAa,CAACiB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAEC,YAAY,iBAC3CrB,OAAA;QAEEa,SAAS,EAAE,6CACTQ,YAAY,CAACC,OAAO,GAAG,aAAa,GAAG,UAAU,EAChD;QACHC,OAAO,EAAEA,CAAA,KAAMb,uBAAuB,CAACW,YAAY,CAACG,EAAE,CAAE;QAAAV,QAAA,gBAExDd,OAAA;UAAGa,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEO,YAAY,CAACI;QAAe;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/DlB,OAAA;UAAAc,QAAA,GAAIO,YAAY,CAACK,iBAAiB,EAAC,YAAU;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAP5CG,YAAY,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQlB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACJhB,aAAa,CAACyB,MAAM,GAAG,EAAE,iBACxB3B,OAAA;MACEa,SAAS,EAAC,wDAAwD;MAClEU,OAAO,EAAEX,0BAA2B;MAAAE,QAAA,EACrC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CA9CIH,gBAAgB;EAAA,QACHP,WAAW,EACdC,WAAW,EACRG,WAAW;AAAA;AAAA8B,EAAA,GAHxB3B,gBAAgB;AAgDtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}