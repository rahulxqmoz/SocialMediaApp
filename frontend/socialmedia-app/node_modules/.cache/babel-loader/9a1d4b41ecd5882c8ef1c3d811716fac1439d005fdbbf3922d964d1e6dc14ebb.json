{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\pages\\\\BookmarksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport CommentItem from '../components/CommentItem';\nimport { showErrorToast } from '../components/ErroToast';\nimport { showSuccessToast } from '../components/CustomToast';\nimport { FaSmile, FaTimes } from 'react-icons/fa';\nimport Picker from '@emoji-mart/react';\nimport data from '@emoji-mart/data';\nimport { BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookmarksPage = () => {\n  _s();\n  const [profile, setProfile] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [likedPosts, setLikedPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const [newComment, setNewComment] = useState('');\n  const [openCommentId, setOpenCommentId] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [replyingToCommentId, setReplyingToCommentId] = useState(null);\n  const token = useSelector(state => state.auth.token);\n  const user = useSelector(state => state.user.user);\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [followerCount, setFollowerCount] = useState(0);\n  const [followingCount, setFollowingCount] = useState(0);\n  const [bookmarks, setBookmarks] = useState([]);\n  const [bookmarkPosts, setbookmarkPosts] = useState({});\n  const fetchBookmarks = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/bookmarks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const formattedPosts = response.data.map(bookmark => {\n        return {\n          postId: bookmark.post.id,\n          content: bookmark.post.content,\n          image: bookmark.post.image,\n          video: bookmark.post.video,\n          created_at: bookmark.post.created_at,\n          totalLikes: bookmark.post.total_likes,\n          totalComments: bookmark.post.total_comments,\n          user: {\n            userId: bookmark.post.user.id,\n            // Access user data from bookmark.post.user\n            username: bookmark.post.user.username,\n            bio: bookmark.post.user.bio,\n            profile_pic: bookmark.post.user.profile_pic,\n            cover_pic: bookmark.post.user.cover_pic\n          }\n        };\n      });\n\n      // Set the formatted posts to state\n      setPosts(formattedPosts);\n      console.log(formattedPosts);\n    } catch (error) {\n      console.error('Error fetching bookmarks:', error);\n    }\n  };\n  const fetchComments = async postId => {\n    try {\n      console.log(`calling feetchcomments:${postId}`);\n      const response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(`getting comment resposne:${response.data}`);\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: response.data\n      }));\n    } catch (error) {\n      console.log(\"Error fetching comments\");\n    }\n  };\n  useEffect(() => {\n    if (user && token) {\n      fetchBookmarks();\n    }\n  }, [user, token]);\n  useEffect(() => {\n    if (posts.length > 0) {\n      posts.forEach(post => {\n        console.log(`Correct post id: ${post.id}`);\n        fetchComments(post.id);\n      });\n    }\n  }, [posts]);\n  const handleToggleComments = postId => {\n    if (openCommentId === postId) {\n      setOpenCommentId(null);\n    } else {\n      setOpenCommentId(postId);\n      fetchComments(postId);\n    }\n  };\n  const handleSubmitComment = async (postId, commentText, parentId = null) => {\n    if (!commentText.trim()) {\n      showErrorToast('Empty Comment Box');\n      return;\n    }\n    console.log(postId, commentText, user.id, parentId, token);\n    try {\n      const response = await axios.post(`${BASE_URL}/api/comments/`, {\n        post: postId,\n        content: commentText,\n        user: user.id,\n        parent: parentId // Include parentId here\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newCommentData = response.data;\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData]\n      }));\n      setNewComment(\"\");\n      setReplyingToCommentId(null);\n      showSuccessToast(\"Comment submitted successfully\");\n    } catch (error) {\n      showErrorToast(\"Error submitting comment\");\n    }\n  };\n  const handleAddEmoji = emoji => {\n    setCommentText(prev => prev + emoji.native); // Append the selected emoji to the comment text\n  };\n  const handleBookmark = async postId => {\n    try {\n      if (bookmarkPosts[postId]) {\n        // If already bookmarked, unbookmark the post\n        await axios.delete(`${BASE_URL}/api/bookmarks/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setbookmarkPosts(prevState => ({\n          ...prevState,\n          [postId]: false\n        }));\n        showErrorToast('Post removed from Bookmarks');\n      } else {\n        // If not bookmarked, bookmark the post\n        await axios.post(`${BASE_URL}/api/bookmarks/`, {\n          post: postId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setbookmarkPosts(prevState => ({\n          ...prevState,\n          [postId]: true\n        }));\n        showSuccessToast('Added to Bookmarks');\n      }\n    } catch (error) {\n      console.error('Error updating bookmark:', error);\n    }\n  };\n  const handleLike = async postId => {\n    try {\n      const response = await fetch(`${BASE_URL}/api/likes/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          post: postId\n        })\n      });\n      if (response.status === 201) {\n        setLikedPosts(prev => ({\n          ...prev,\n          [postId]: true\n        }));\n        showSuccessToast('Post liked');\n      } else if (response.status === 204) {\n        setLikedPosts(prev => ({\n          ...prev,\n          [postId]: false\n        }));\n        showSuccessToast('Post unliked');\n      }\n    } catch (error) {\n      showErrorToast('Error liking/unliking post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full md:max-w-2xl lg:max-w-4xl mt-6\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-gray-300 rounded-lg shadow-md mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.user.profile_pic || 'https://via.placeholder.com/40',\n              alt: \"Profile\",\n              className: \"w-10 h-10 rounded-full object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-semibold text-gray-800\",\n                children: post.user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: [\"Posted \", new Date(post.created_at).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4\",\n            children: [post.content && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 mb-3\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 32\n            }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.image,\n              alt: \"Post\",\n              className: \"rounded-lg mt-2 w-full h-auto object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), post.video && /*#__PURE__*/_jsxDEV(\"video\", {\n              src: post.video,\n              controls: true,\n              className: \"rounded-lg mt-2 w-full h-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center px-4 py-2 border-t border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `flex items-center ${likedPosts[post.id] ? 'text-red-500' : 'text-gray-600'} hover:text-red-500`,\n                onClick: () => handleLike(post.id) // Like/unlike post on click\n                ,\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  fill: likedPosts[post.id] ? 'red' : 'none' // Fill heart if liked\n                  ,\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  className: \"w-6 h-6 mr-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), post.total_likes === 0 ? 'Like' : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: post.total_likes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex items-center text-gray-600 hover:text-blue-500\",\n                onClick: () => handleToggleComments(post.id) // Toggle comments on click\n                ,\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  fill: \"none\",\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  className: \"w-6 h-6 mr-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    d: \"M7 8h10M7 12h7m-7 4h10m0 6v-6h4v8.59a1.5 1.5 0 01-2.29 1.25L18 21H6a1 1 0 01-1-1V4a1 1 0 011-1h12v2H6v16h10z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), post.total_comments === 0 ? 'Comment' : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: post.total_comments\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-gray-600 hover:text-blue-500\",\n              onClick: () => handleBookmark(post.id) // Call the bookmark handler\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-6 h-6\",\n                fill: bookmarkPosts[post.id] ? 'currentColor' : 'none' // Conditional fill\n                ,\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                viewBox: \"0 0 24 24\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M5 5v15l7-5 7 5V5z\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), openCommentId === post.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-t border-gray-200\",\n            children: [comments[post.id] && comments[post.id].length > 0 ? comments[post.id].map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n              comment: comment,\n              postId: post.id,\n              handleSubmitComment: handleSubmitComment,\n              replyingToCommentId: replyingToCommentId,\n              setReplyingToCommentId: setReplyingToCommentId\n            }, comment.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500\",\n              children: \"No comments yet. Be the first to comment!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                e.preventDefault();\n                if (commentText.trim()) {\n                  handleSubmitComment(post.id, commentText); // No parentId means it's a top-level comment\n                  setCommentText(''); // Clear the input field after submitting\n                }\n              },\n              className: \"relative\" // Added for positioning the emoji button\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"comment\",\n                value: commentText,\n                onChange: e => setCommentText(e.target.value) // Update commentText on input change\n                ,\n                placeholder: \"Write a comment...\",\n                className: \"w-full p-2 pr-10 border border-gray-300 rounded-lg focus:outline-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowEmojiPicker(!showEmojiPicker),\n                className: \"absolute right-2 top-2 text-gray-500 hover:text-gray-800\",\n                children: showEmojiPicker ? /*#__PURE__*/_jsxDEV(FaTimes, {\n                  size: 20,\n                  className: \"text-red-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(FaSmile, {\n                  size: 20,\n                  className: \"text-gray-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 25\n              }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute mt-12 right-0\",\n                children: /*#__PURE__*/_jsxDEV(Picker, {\n                  data: data,\n                  onEmojiSelect: handleAddEmoji\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-blue-500 text-white mt-2 px-4 py-2 rounded-lg\",\n                children: \"Post Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(BookmarksPage, \"dVRdUxeKkX8gvxbttPZmrQVzXyg=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = BookmarksPage;\nexport default BookmarksPage;\nvar _c;\n$RefreshReg$(_c, \"BookmarksPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","axios","CommentItem","showErrorToast","showSuccessToast","FaSmile","FaTimes","Picker","data","BASE_URL","jsxDEV","_jsxDEV","BookmarksPage","_s","profile","setProfile","posts","setPosts","likedPosts","setLikedPosts","comments","setComments","newComment","setNewComment","openCommentId","setOpenCommentId","showEmojiPicker","setShowEmojiPicker","commentText","setCommentText","replyingToCommentId","setReplyingToCommentId","token","state","auth","user","isFollowing","setIsFollowing","followerCount","setFollowerCount","followingCount","setFollowingCount","bookmarks","setBookmarks","bookmarkPosts","setbookmarkPosts","fetchBookmarks","response","get","headers","Authorization","formattedPosts","map","bookmark","postId","post","id","content","image","video","created_at","totalLikes","total_likes","totalComments","total_comments","userId","username","bio","profile_pic","cover_pic","console","log","error","fetchComments","prevComments","length","forEach","handleToggleComments","handleSubmitComment","parentId","trim","parent","newCommentData","handleAddEmoji","emoji","prev","native","handleBookmark","delete","prevState","handleLike","fetch","method","body","JSON","stringify","status","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","controls","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","comment","onSubmit","e","preventDefault","type","name","value","onChange","target","placeholder","size","onEmojiSelect","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/pages/BookmarksPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport CommentItem from '../components/CommentItem';\r\nimport { showErrorToast } from '../components/ErroToast';\r\nimport { showSuccessToast } from '../components/CustomToast';\r\nimport { FaSmile, FaTimes } from 'react-icons/fa';\r\nimport Picker from '@emoji-mart/react';\r\nimport data from '@emoji-mart/data';\r\nimport { BASE_URL } from '../config';\r\nconst BookmarksPage = () => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n  const [likedPosts, setLikedPosts] = useState({});\r\n  const [comments, setComments] = useState({});\r\n  const [newComment, setNewComment] = useState('');\r\n  const [openCommentId, setOpenCommentId] = useState(null);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [commentText, setCommentText] = useState('');\r\n  const [replyingToCommentId, setReplyingToCommentId] = useState(null); \r\n  const token = useSelector((state) => state.auth.token);\r\n  const user = useSelector((state) => state.user.user);\r\n  const [isFollowing, setIsFollowing] = useState(false); \r\n  const [followerCount, setFollowerCount] = useState(0); \r\n  const [followingCount, setFollowingCount] = useState(0);\r\n  const [bookmarks, setBookmarks] = useState([]);\r\n  const [bookmarkPosts, setbookmarkPosts] = useState({}); \r\n\r\n  const fetchBookmarks = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/bookmarks`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n      }); \r\n      const formattedPosts = response.data.map((bookmark) => {\r\n        return {\r\n          postId: bookmark.post.id,\r\n          content: bookmark.post.content,\r\n          image: bookmark.post.image,\r\n          video: bookmark.post.video,\r\n          created_at: bookmark.post.created_at,\r\n          totalLikes: bookmark.post.total_likes,\r\n          totalComments: bookmark.post.total_comments,\r\n          user: {\r\n            userId: bookmark.post.user.id,  // Access user data from bookmark.post.user\r\n            username: bookmark.post.user.username,\r\n            bio: bookmark.post.user.bio,\r\n            profile_pic: bookmark.post.user.profile_pic,\r\n            cover_pic: bookmark.post.user.cover_pic,\r\n          },\r\n        };\r\n      });\r\n      \r\n      // Set the formatted posts to state\r\n      setPosts(formattedPosts);\r\n      console.log(formattedPosts);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching bookmarks:', error);\r\n    }\r\n  };\r\n\r\n  const fetchComments = async (postId) => {\r\n    try {\r\n      console.log(`calling feetchcomments:${postId}`)\r\n      const response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      console.log(`getting comment resposne:${response.data}`)\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: response.data,\r\n        \r\n      }));\r\n    } catch (error) {\r\n      console.log(\"Error fetching comments\");\r\n    }\r\n  };\r\n\r\n \r\n  useEffect(()=>{\r\n    if (user && token) {\r\n        fetchBookmarks();\r\n      }\r\n  },[user,token])\r\n\r\n  useEffect(() => {\r\n    if (posts.length > 0) {\r\n      posts.forEach((post) => {\r\n        console.log(`Correct post id: ${post.id}`);\r\n        fetchComments(post.id);\r\n      });\r\n    }\r\n  }, [posts]);\r\n\r\n  const handleToggleComments = (postId) => {\r\n    if (openCommentId === postId) {\r\n      setOpenCommentId(null);\r\n    } else {\r\n      setOpenCommentId(postId);\r\n      fetchComments(postId);\r\n    }\r\n  };\r\n\r\n  const handleSubmitComment = async (postId, commentText, parentId = null) => {\r\n    if (!commentText.trim()) {\r\n      showErrorToast('Empty Comment Box');\r\n      return;\r\n    }\r\n    console.log(postId,commentText,user.id,parentId,token);\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/api/comments/`, {\r\n        post: postId,\r\n        content: commentText,\r\n        user: user.id,\r\n        parent: parentId, // Include parentId here\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      const newCommentData = response.data;\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: [...(prevComments[postId] || []), newCommentData],\r\n      }));\r\n  \r\n      setNewComment(\"\");\r\n      setReplyingToCommentId(null);\r\n     \r\n      showSuccessToast(\"Comment submitted successfully\");\r\n     \r\n    } catch (error) {\r\n      showErrorToast(\"Error submitting comment\");\r\n    }\r\n  };\r\n\r\n  const handleAddEmoji = (emoji) => {\r\n    setCommentText((prev) => prev + emoji.native); // Append the selected emoji to the comment text\r\n  };\r\n  const handleBookmark = async (postId) => {\r\n    try {\r\n      \r\n      if (bookmarkPosts[postId]) {\r\n        // If already bookmarked, unbookmark the post\r\n        await axios.delete(`${BASE_URL}/api/bookmarks/${postId}`,{\r\n          headers: {\r\n              Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setbookmarkPosts((prevState) => ({\r\n          ...prevState,\r\n          [postId]: false,\r\n        }));\r\n        showErrorToast('Post removed from Bookmarks');\r\n      } else {\r\n        // If not bookmarked, bookmark the post\r\n        await axios.post(`${BASE_URL}/api/bookmarks/`, { post: postId }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setbookmarkPosts((prevState) => ({\r\n          ...prevState,\r\n          [postId]: true,\r\n        }));\r\n        showSuccessToast('Added to Bookmarks');\r\n      }\r\n     \r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error);\r\n    }\r\n  };\r\n  const handleLike = async (postId) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/api/likes/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ post: postId }),\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        setLikedPosts((prev) => ({ ...prev, [postId]: true }));\r\n        showSuccessToast('Post liked');\r\n      } else if (response.status === 204) {\r\n        setLikedPosts((prev) => ({ ...prev, [postId]: false }));\r\n        showSuccessToast('Post unliked');\r\n      }\r\n     \r\n    } catch (error) {\r\n      showErrorToast('Error liking/unliking post');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"flex justify-center\">\r\n      <div className=\"w-full md:max-w-2xl lg:max-w-4xl mt-6\">\r\n        {posts.map((post) => (\r\n          <div key={post.id} className=\"bg-white border border-gray-300 rounded-lg shadow-md mb-6\">\r\n            {/* Post Header: Profile picture and Username */}\r\n            <div className=\"flex items-center p-4\">\r\n              <img\r\n                src={post.user.profile_pic || 'https://via.placeholder.com/40'}\r\n                alt=\"Profile\"\r\n                className=\"w-10 h-10 rounded-full object-cover\"\r\n              />\r\n              <div className=\"ml-3\">\r\n                <p className=\"font-semibold text-gray-800\">{post.user.username}</p>\r\n                <p className=\"text-sm text-gray-500\">Posted {new Date(post.created_at).toLocaleDateString()}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Post Content */}\r\n            <div className=\"px-4\">\r\n              {post.content && <p className=\"text-gray-800 mb-3\">{post.content}</p>}\r\n              {post.image && (\r\n                <img\r\n                  src={post.image}\r\n                  alt=\"Post\"\r\n                  className=\"rounded-lg mt-2 w-full h-auto object-cover\"\r\n                />\r\n              )}\r\n              {post.video && (\r\n                <video\r\n                  src={post.video}\r\n                  controls\r\n                  className=\"rounded-lg mt-2 w-full h-auto\"\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* Post Footer: Like, Comment, Bookmark */}\r\n            <div className=\"flex justify-between items-center px-4 py-2 border-t border-gray-200\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                {/* Like Button */}\r\n                <button\r\n                  className={`flex items-center ${likedPosts[post.id] ? 'text-red-500' : 'text-gray-600'} hover:text-red-500`}\r\n                  onClick={() => handleLike(post.id)} // Like/unlike post on click\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill={likedPosts[post.id] ? 'red' : 'none'} // Fill heart if liked\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    className=\"w-6 h-6 mr-1\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\r\n                    />\r\n                  </svg>\r\n                  {post.total_likes === 0 ? 'Like' : <span>{post.total_likes}</span>}\r\n                </button>\r\n\r\n                {/* Comment Button */}\r\n                <button\r\n                  className=\"flex items-center text-gray-600 hover:text-blue-500\"\r\n                  onClick={() => handleToggleComments(post.id)} // Toggle comments on click\r\n                >\r\n                     \r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    className=\"w-6 h-6 mr-1\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M7 8h10M7 12h7m-7 4h10m0 6v-6h4v8.59a1.5 1.5 0 01-2.29 1.25L18 21H6a1 1 0 01-1-1V4a1 1 0 011-1h12v2H6v16h10z\"\r\n                    />\r\n                  </svg>\r\n                  {post.total_comments === 0 ? 'Comment' : <span>{post.total_comments}</span>}\r\n                  \r\n                </button>\r\n              </div>\r\n\r\n              {/* Bookmark Button */}\r\n              <button\r\n                className=\"text-gray-600 hover:text-blue-500\"\r\n                onClick={() => handleBookmark(post.id)} // Call the bookmark handler\r\n              >\r\n                <svg\r\n                  className=\"w-6 h-6\"\r\n                  fill={bookmarkPosts[post.id] ? 'currentColor' : 'none'} // Conditional fill\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M5 5v15l7-5 7 5V5z\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n            \r\n        {/* Comment Section */}\r\n        {openCommentId === post.id && (\r\n                <div className=\"p-4 border-t border-gray-200\">\r\n                    {/* List Existing Comments */}\r\n                    {comments[post.id] && comments[post.id].length > 0 ? (\r\n                        comments[post.id].map((comment) => (\r\n                            <CommentItem\r\n                                key={comment.id}\r\n                                comment={comment}\r\n                                postId={post.id}\r\n                                handleSubmitComment={handleSubmitComment}\r\n                                replyingToCommentId={replyingToCommentId}\r\n                                setReplyingToCommentId={setReplyingToCommentId}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-gray-500\">No comments yet. Be the first to comment!</p>\r\n                    )}\r\n\r\n                    {/* Comment Form for the post */}\r\n                    <form\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            if (commentText.trim()) {\r\n                                handleSubmitComment(post.id, commentText); // No parentId means it's a top-level comment\r\n                                setCommentText(''); // Clear the input field after submitting\r\n                            }\r\n                        }}\r\n                        className=\"relative\" // Added for positioning the emoji button\r\n                    >\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"comment\"\r\n                            value={commentText}\r\n                            onChange={(e) => setCommentText(e.target.value)} // Update commentText on input change\r\n                            placeholder=\"Write a comment...\"\r\n                            className=\"w-full p-2 pr-10 border border-gray-300 rounded-lg focus:outline-none\"\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                            className=\"absolute right-2 top-2 text-gray-500 hover:text-gray-800\"\r\n                        >\r\n                            {showEmojiPicker ? (\r\n                                <FaTimes size={20} className=\"text-red-500\" />\r\n                            ) : (\r\n                                <FaSmile size={20} className=\"text-gray-500\" />\r\n                            )}\r\n                        </button>\r\n\r\n                        {showEmojiPicker && (\r\n                            <div className=\"absolute mt-12 right-0\">\r\n                                <Picker data={data} onEmojiSelect={handleAddEmoji} />\r\n                            </div>\r\n                        )}\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-blue-500 text-white mt-2 px-4 py-2 rounded-lg\"\r\n                        >\r\n                            Post Comment\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n\r\n\r\n                </div>\r\n                ))}\r\n            </div>\r\n            </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookmarksPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}