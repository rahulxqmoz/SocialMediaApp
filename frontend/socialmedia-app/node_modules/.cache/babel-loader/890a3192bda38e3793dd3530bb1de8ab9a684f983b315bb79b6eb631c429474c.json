{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\ChatDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages, fetchUnreadCounts, sendMessage } from '../features/auth/chatSlice';\nimport { FaSmile, FaTimes, FaPaperclip, FaVideo } from 'react-icons/fa'; // Emoji toggle icons\nimport Picker from '@emoji-mart/react'; // Emoji picker component\nimport data from '@emoji-mart/data';\nimport MessageComponent from './MessageComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDialog = ({\n  roomName,\n  user\n}) => {\n  _s();\n  //console.log(`roomName: ${roomName}`);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const messages = useSelector(state => state.chat.messages);\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const socketRef = useRef(null); // Using useRef for socket\n  const chatRooms = useSelector(state => state.chat.rooms);\n  const currentUser = useSelector(state => state.user.user);\n  const room = useSelector(state => state.chat.rooms);\n  const messagesEndRef = useRef(null);\n  const [file, setFile] = useState(null);\n  const [messageType, setMessageType] = useState('text');\n  const [filePreview, setFilePreview] = useState(null);\n  const followers = useSelector(state => state.followers.followers);\n  const markMessagesAsReads = messageId => {\n    const message = messages.find(msg => msg.id === messageId);\n    if (message && !message.read_by.includes(currentUser.id)) {\n      //message.read_by.push(currentUser.id);\n      if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n        socketRef.current.send(JSON.stringify({\n          type: 'message_read',\n          message_id: messageId,\n          user_id: currentUser.id\n        }));\n      }\n    }\n  };\n  useEffect(() => {\n    if (roomName && token) {\n      dispatch({\n        type: 'chat/resetMessages'\n      });\n      // Step 1: Fetch all chat rooms to check if the room exists\n      dispatch(fetchChatRooms({\n        token\n      })).then(action => {\n        const roomExists = chatRooms.some(room => room.name === roomName);\n        if (roomExists) {\n          // Room exists, fetch messages for this room\n          dispatch(fetchMessages({\n            roomName,\n            token\n          }));\n        } else {\n          // Room doesn't exist, create it first\n          dispatch(createChatRoom({\n            roomName,\n            participants: [user.id, currentUser.id],\n            token\n          })).then(() => {\n            // After creating the room, fetch the messages\n            dispatch(fetchMessages({\n              roomName,\n              token\n            }));\n          });\n        }\n      });\n    }\n    // WebSocket connection setup\n    socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\n    socketRef.current.onopen = () => {\n      console.log(\"WebSocket connection opened\");\n    };\n    socketRef.current.onmessage = async e => {\n      const data = JSON.parse(e.data);\n      console.log(\"WebSocket data received:\", data);\n      console.log(\"Current messages in state:\", messages);\n      if (data.type === 'message_read') {\n        console.log(`messgae read entered:${data.message_id}`);\n        console.log(\"Current messages in state message_read:\", messages);\n        // Update the specific message's read_by list\n        const updatedMessages = messages.map(msg => {\n          if (msg.id === data.message_id) {\n            return {\n              ...msg,\n              // Directly use the updated 'read_by' array from the WebSocket event\n              read_by: data.read_by\n            };\n          }\n          return msg;\n        });\n\n        // Dispatch the action to update the messages array in the Redux store\n        dispatch({\n          type: 'chat/updateMessages',\n          payload: {\n            message_id: data.message_id,\n            // Identify the specific message\n            read_by: data.read_by // Provide the updated read_by array\n          }\n        });\n        dispatch(fetchUnreadCounts({\n          token\n        }));\n      } else if (data.message && data.sender) {\n        const existingMessage = messages.find(msg => msg.id === data.message_id);\n        if (!existingMessage) {\n          dispatch(addMessage({\n            sender: data.sender,\n            message: data.message,\n            message_type: data.message_type,\n            file: data.file,\n            timestamp: data.timestamp || new Date().toISOString(),\n            id: data.message_id,\n            // Include the message ID\n            read_by: data.read_by || []\n          }));\n          dispatch(fetchUnreadCounts({\n            token\n          }));\n        }\n      } else if (data.file && data.sender) {\n        const existingMessage = messages.find(msg => msg.id === data.message_id);\n        if (!existingMessage) {\n          dispatch(addMessage({\n            sender: data.sender,\n            message: data.message,\n            message_type: data.message_type,\n            file: data.file,\n            timestamp: data.timestamp || new Date().toISOString(),\n            id: data.message_id,\n            // Include the message ID\n            read_by: data.read_by || []\n          }));\n        }\n      }\n    };\n    socketRef.current.onclose = event => {\n      console.log('WebSocket closed. Attempting to reconnect...');\n      console.error(\"WebSocket closed unexpectedly:\", event.reason);\n    };\n    return () => {\n      socketRef.current.close();\n    };\n  }, [roomName, token, dispatch]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    messages.forEach(msg => {\n      if (msg.sender !== currentUser.id && !msg.read_by.includes(currentUser.id)) {\n        console.log(`entered markMeaa`);\n        markMessagesAsReads(msg.id);\n        dispatch(fetchUnreadCounts({\n          token\n        }));\n      }\n    });\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      try {\n        const result = await dispatch(sendMessage({\n          roomName,\n          message: messageInput,\n          messageType,\n          file,\n          token\n        })).unwrap();\n        console.log(`result:${result}`);\n        console.log(`result id:${result.id}`);\n        socketRef.current.send(JSON.stringify({\n          type: 'message_sent',\n          sender: currentUser.id,\n          recipient_id: user.id,\n          message_id: result.id,\n          timestamp: new Date().toISOString()\n        }));\n        dispatch(fetchUnreadCounts({\n          token\n        }));\n        setMessageInput('');\n        setFile(null);\n        setMessageType('text');\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n\n    // Format the date (day/month/year)\n    const formattedDate = date.toLocaleDateString([], {\n      day: '2-digit',\n      month: 'short',\n      // e.g., 'Jan', 'Feb'\n      year: 'numeric'\n    });\n\n    // Format the time (hour:minute AM/PM)\n    const formattedTime = date.toLocaleTimeString([], {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n    return `${formattedDate}, ${formattedTime}`;\n  };\n  const handleAddEmoji = emoji => {\n    setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\n  };\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      const fileType = selectedFile.type;\n      const maxVideoSize = 100 * 1024 * 1024;\n      // Set message type based on the file type\n      if (fileType.startsWith('image/')) {\n        setMessageType('image');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the image\n      } else if (fileType === 'image/gif') {\n        setMessageType('gif');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the GIF\n      } else if (fileType.startsWith('video/')) {\n        if (selectedFile.size > maxVideoSize) {\n          alert('Video file size must be smaller than 100MB.');\n          return;\n        }\n        setMessageType('video');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the video\n      } else {\n        setMessageType('file');\n        setFilePreview(null); // No preview for other file types\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic || 'https://via.placeholder.com/800x500',\n        alt: user.username,\n        className: \"w-10 h-10 rounded-full mr-3 object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg font-semibold\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-sm\",\n        children: user.is_online ? 'Online' : 'Offline'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startVideoCall,\n        className: \"ml-auto text-white bg-green-500 rounded-full p-2\",\n        children: /*#__PURE__*/_jsxDEV(FaVideo, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), filePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center p-4 border-b\",\n      children: [messageType === 'image' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: filePreview,\n        alt: \"Preview\",\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }, this), messageType === 'video' && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: filePreview,\n        controls: true,\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }, this), messageType === 'gif' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: filePreview,\n        alt: \"Preview\",\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setFile(null);\n          setFilePreview(null);\n          setMessageType('');\n        },\n        className: \"ml-2 bg-red-600 text-white rounded-full p-1 shadow-lg hover:bg-red-700 transition duration-200\",\n        \"aria-label\": \"Close Preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MessageComponent, {\n      messages: messages,\n      currentUser: currentUser,\n      user: user,\n      formatTimestamp: formatTimestamp,\n      messagesEndRef: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-2 border-t bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEmojiPicker(!showEmojiPicker),\n        className: \"text-gray-500 hover:text-gray-800 mr-2\",\n        children: showEmojiPicker ? /*#__PURE__*/_jsxDEV(FaTimes, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(FaSmile, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 16\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-12 left-0 z-10\",\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          data: data,\n          onEmojiSelect: handleAddEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ml-2\",\n        children: [/*#__PURE__*/_jsxDEV(FaPaperclip, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"hidden\",\n          accept: \"image/*,video/*,.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatDialog, \"5V1wnLiHLCu5gH6fpITRCAujRqw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ChatDialog;\nexport default ChatDialog;\nvar _c;\n$RefreshReg$(_c, \"ChatDialog\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useDispatch","useSelector","addMessage","createChatRoom","fetchChatRooms","fetchMessages","fetchUnreadCounts","sendMessage","FaSmile","FaTimes","FaPaperclip","FaVideo","Picker","data","MessageComponent","jsxDEV","_jsxDEV","ChatDialog","roomName","user","_s","dispatch","token","state","auth","messages","chat","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","socketRef","chatRooms","rooms","currentUser","room","messagesEndRef","file","setFile","messageType","setMessageType","filePreview","setFilePreview","followers","markMessagesAsReads","messageId","message","find","msg","id","read_by","includes","current","readyState","WebSocket","OPEN","send","JSON","stringify","type","message_id","user_id","then","action","roomExists","some","name","participants","onopen","console","log","onmessage","e","parse","updatedMessages","map","payload","sender","existingMessage","message_type","timestamp","Date","toISOString","onclose","event","error","reason","close","_messagesEndRef$curre","scrollIntoView","behavior","forEach","handleSendMessage","result","unwrap","recipient_id","err","formatTimestamp","date","formattedDate","toLocaleDateString","day","month","year","formattedTime","toLocaleTimeString","hour","minute","hour12","handleAddEmoji","emoji","prevInput","native","handleFileChange","selectedFile","target","files","fileType","maxVideoSize","startsWith","URL","createObjectURL","size","alert","className","children","src","profile_pic","alt","username","fileName","_jsxFileName","lineNumber","columnNumber","is_online","onClick","startVideoCall","controls","onEmojiSelect","value","onChange","onKeyPress","key","placeholder","accept","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/ChatDialog.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages,fetchUnreadCounts,sendMessage } from '../features/auth/chatSlice';\r\nimport { FaSmile, FaTimes,FaPaperclip,FaVideo  } from 'react-icons/fa'; // Emoji toggle icons\r\nimport Picker from '@emoji-mart/react'; // Emoji picker component\r\nimport data from '@emoji-mart/data';\r\nimport MessageComponent from './MessageComponent';\r\nconst ChatDialog = ({ roomName, user }) => {\r\n    //console.log(`roomName: ${roomName}`);\r\n    const dispatch = useDispatch();\r\n    const token = useSelector((state) => state.auth.token);\r\n    const messages = useSelector((state) => state.chat.messages);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const socketRef = useRef(null); // Using useRef for socket\r\n    const chatRooms = useSelector((state) => state.chat.rooms);\r\n    const currentUser = useSelector((state) => state.user.user);\r\n    const room = useSelector((state)=>state.chat.rooms)\r\n    const messagesEndRef = useRef(null);\r\n    const [file, setFile] = useState(null);\r\n    const [messageType, setMessageType] = useState('text');\r\n    const [filePreview, setFilePreview] = useState(null);\r\n    const followers = useSelector((state) => state.followers.followers);\r\n \r\n\r\n  const markMessagesAsReads = (messageId) => {\r\n\r\n    const message = messages.find(msg => msg.id === messageId);\r\n    if (message && !message.read_by.includes(currentUser.id)) {\r\n        //message.read_by.push(currentUser.id);\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n            socketRef.current.send(JSON.stringify({\r\n                type: 'message_read',\r\n                message_id: messageId,\r\n                user_id: currentUser.id,\r\n            }));\r\n          \r\n        }\r\n    }\r\n};\r\n\r\n    useEffect(() => {\r\n        if (roomName && token) {\r\n\r\n            dispatch({ type: 'chat/resetMessages' });\r\n            // Step 1: Fetch all chat rooms to check if the room exists\r\n            dispatch(fetchChatRooms({ token })).then((action) => {\r\n                const roomExists = chatRooms.some(room => room.name === roomName);\r\n\r\n                if (roomExists) {\r\n                    // Room exists, fetch messages for this room\r\n                    dispatch(fetchMessages({ roomName, token }));\r\n                    \r\n                } else {\r\n                    // Room doesn't exist, create it first\r\n                    dispatch(createChatRoom({ roomName,participants:[user.id,currentUser.id], token }))\r\n                        .then(() => {\r\n                            // After creating the room, fetch the messages\r\n                            dispatch(fetchMessages({ roomName, token }));\r\n                        });\r\n                }\r\n            });\r\n        }\r\n       // WebSocket connection setup\r\n        socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\r\n\r\n        socketRef.current.onopen = () => {\r\n            console.log(\"WebSocket connection opened\");\r\n        };\r\n        \r\n      \r\n        socketRef.current.onmessage = async (e) => {\r\n          const data = JSON.parse(e.data);\r\n          console.log(\"WebSocket data received:\", data);\r\n          console.log(\"Current messages in state:\", messages);\r\n\r\n         \r\n\r\n        if (data.type === 'message_read') {\r\n                console.log(`messgae read entered:${data.message_id}`)\r\n                console.log(\"Current messages in state message_read:\", messages);\r\n                // Update the specific message's read_by list\r\n                const updatedMessages = messages.map((msg) => {\r\n                    if (msg.id === data.message_id) {\r\n                        return {\r\n                            ...msg,\r\n                            // Directly use the updated 'read_by' array from the WebSocket event\r\n                            read_by: data.read_by, \r\n                        };\r\n                    }\r\n                    return msg;\r\n                });\r\n            \r\n                // Dispatch the action to update the messages array in the Redux store\r\n                dispatch({\r\n                    type: 'chat/updateMessages',\r\n                    payload: {\r\n                        message_id: data.message_id,  // Identify the specific message\r\n                        read_by: data.read_by,        // Provide the updated read_by array\r\n                    },\r\n                });\r\n                dispatch(fetchUnreadCounts({ token }));\r\n                \r\n            } else if (data.message && data.sender) {\r\n                const existingMessage = messages.find(msg => msg.id === data.message_id);\r\n                if (!existingMessage) {\r\n              dispatch(addMessage({\r\n                  sender: data.sender,\r\n                  message: data.message,\r\n                  message_type: data.message_type,\r\n                  file: data.file,\r\n                  timestamp: data.timestamp || new Date().toISOString(),\r\n                  id: data.message_id,  // Include the message ID\r\n                  read_by: data.read_by || []\r\n              }));\r\n              dispatch(fetchUnreadCounts({token}))\r\n            }\r\n          }else if (data.file && data.sender) {\r\n            const existingMessage = messages.find(msg => msg.id === data.message_id);\r\n            if (!existingMessage) {\r\n            dispatch(addMessage({\r\n                sender: data.sender,\r\n                message: data.message,\r\n                message_type: data.message_type,\r\n                file: data.file,\r\n                timestamp: data.timestamp || new Date().toISOString(),\r\n                id: data.message_id,  // Include the message ID\r\n                read_by: data.read_by || []\r\n            }));\r\n        }\r\n        }\r\n      };\r\n\r\n        \r\n        socketRef.current.onclose = (event) => {\r\n            console.log('WebSocket closed. Attempting to reconnect...');\r\n            console.error(\"WebSocket closed unexpectedly:\", event.reason);\r\n        };\r\n        \r\n\r\n        return () => {\r\n            socketRef.current.close();\r\n        };\r\n    }, [roomName, token, dispatch]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        messages.forEach(msg => {\r\n            if (msg.sender !== currentUser.id && !msg.read_by.includes(currentUser.id)) {\r\n                console.log(`entered markMeaa`)\r\n                markMessagesAsReads(msg.id);\r\n                dispatch(fetchUnreadCounts({token}))\r\n                \r\n            }\r\n        });\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = async  () => {\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n        try {\r\n            const result = await dispatch(sendMessage({ roomName, message:messageInput, messageType, file, token })).unwrap();\r\n            console.log(`result:${result}`)\r\n            console.log(`result id:${result.id}`)\r\n            socketRef.current.send(JSON.stringify({\r\n                type: 'message_sent',\r\n                sender: currentUser.id,\r\n                recipient_id: user.id, \r\n                message_id: result.id, \r\n                timestamp: new Date().toISOString(),\r\n              }));\r\n            dispatch(fetchUnreadCounts({token}))\r\n            setMessageInput('');\r\n            setFile(null);\r\n            setMessageType('text'); \r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        }\r\n     \r\n    };\r\n\r\n    const formatTimestamp = (timestamp) => { \r\n        const date = new Date(timestamp);\r\n        \r\n        // Format the date (day/month/year)\r\n        const formattedDate = date.toLocaleDateString([], {\r\n            day: '2-digit', \r\n            month: 'short',  // e.g., 'Jan', 'Feb'\r\n            year: 'numeric'\r\n        });\r\n    \r\n        // Format the time (hour:minute AM/PM)\r\n        const formattedTime = date.toLocaleTimeString([], {\r\n            hour: 'numeric', \r\n            minute: '2-digit', \r\n            hour12: true\r\n        });\r\n    \r\n        return `${formattedDate}, ${formattedTime}`;\r\n    };\r\n    \r\n\r\n    const handleAddEmoji = (emoji) => {\r\n      setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\r\n  };\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n        setFile(selectedFile);\r\n        const fileType = selectedFile.type;\r\n        const maxVideoSize = 100 * 1024 * 1024; \r\n        // Set message type based on the file type\r\n        if (fileType.startsWith('image/')) {\r\n            setMessageType('image');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the image\r\n        } else if (fileType === 'image/gif') {\r\n            setMessageType('gif');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the GIF\r\n        } else if (fileType.startsWith('video/')) {\r\n            if (selectedFile.size > maxVideoSize) {\r\n                alert('Video file size must be smaller than 100MB.');\r\n                return; \r\n            }\r\n            setMessageType('video');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the video\r\n        } else {\r\n            setMessageType('file');\r\n            setFilePreview(null); // No preview for other file types\r\n        }\r\n    }\r\n};\r\n  \r\n    return (\r\n        <div className=\"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \">\r\n        {/* Header */}\r\n        <div className=\"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 rounded-md\">\r\n          <img\r\n            src={user.profile_pic || 'https://via.placeholder.com/800x500'}\r\n            alt={user.username}\r\n            className=\"w-10 h-10 rounded-full mr-3 object-cover\"\r\n          />\r\n          <span className=\"text-lg font-semibold\">{user.username}</span>\r\n          <div className={`ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`}></div>\r\n                <span className=\"ml-1 text-sm\">\r\n                    {user.is_online ? 'Online' : 'Offline'}\r\n                </span>\r\n                <button \r\n                  onClick={startVideoCall} \r\n                  className=\"ml-auto text-white bg-green-500 rounded-full p-2\"\r\n                >\r\n                 <FaVideo size={20}></FaVideo   >\r\n                </button>\r\n        </div>\r\n\r\n            {/* File Preview Section */}\r\n            {filePreview && (\r\n                <div className=\"flex items-center justify-center p-4 border-b\">\r\n                  \r\n                    {messageType === 'image' && (\r\n                        <img src={filePreview} alt=\"Preview\" className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                    {messageType === 'video' && (\r\n                        <video src={filePreview} controls className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                    {messageType === 'gif' && (\r\n                        <img src={filePreview} alt=\"Preview\" className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                    <button\r\n                        onClick={() => {\r\n                            setFile(null);\r\n                            setFilePreview(null);\r\n                            setMessageType('');\r\n                        }}\r\n                        className=\"ml-2 bg-red-600 text-white rounded-full p-1 shadow-lg hover:bg-red-700 transition duration-200\"\r\n                        aria-label=\"Close Preview\"\r\n                    >\r\n                        <span className=\"text-lg\">✕</span> {/* Larger icon for visibility */}\r\n                    </button>\r\n                </div>\r\n            )}\r\n        <MessageComponent messages={messages} currentUser={currentUser} user={user} formatTimestamp={formatTimestamp} messagesEndRef={messagesEndRef} />\r\n        {/* Message input */}\r\n        <div className=\"flex items-center p-2 border-t bg-white\">\r\n               {/* Emoji Picker Button */}\r\n               <button\r\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                    className=\"text-gray-500 hover:text-gray-800 mr-2\"\r\n                >\r\n                    {showEmojiPicker ? <FaTimes size={20} /> : <FaSmile size={20} />}\r\n                </button>\r\n\r\n                {showEmojiPicker && (\r\n                    <div className=\"absolute bottom-12 left-0 z-10\">\r\n                        <Picker data={data} onEmojiSelect={handleAddEmoji} />\r\n                    </div>\r\n                )}\r\n                \r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            value={messageInput}\r\n            onChange={(e) => setMessageInput(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <label className=\"ml-2\">\r\n                    <FaPaperclip size={20} />\r\n                    <input type=\"file\" onChange={handleFileChange} className=\"hidden\" accept=\"image/*,video/*,.gif\" />\r\n            </label>\r\n            \r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n\r\n      \r\n\r\n      </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default ChatDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}