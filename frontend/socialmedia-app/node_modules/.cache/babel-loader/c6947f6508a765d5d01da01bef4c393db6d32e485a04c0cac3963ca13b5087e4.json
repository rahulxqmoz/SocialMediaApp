{"ast":null,"code":"// axiosSetup.js\nimport axios from 'axios';\nimport { showErrorToast } from '../../components/ErroToast';\n\n// Create an Axios instance\nconst api = axios.create();\n\n// Function to configure interceptors with dispatch and navigate\nexport const configureAxiosInterceptors = (dispatch, navigate) => {\n  // Request Interceptor\n  api.interceptors.request.use(config => {\n    // Automatically add the Authorization header if the token is available\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // Response Interceptor\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      showErrorToast('Session expired. Please login again.');\n      dispatch(logout()); // Perform logout action\n      navigate('/login'); // Redirect to login page\n    }\n    return Promise.reject(error);\n  });\n};\nexport default api;","map":{"version":3,"names":["axios","showErrorToast","api","create","configureAxiosInterceptors","dispatch","navigate","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","logout"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/features/axios/axiosSetUp.js"],"sourcesContent":["// axiosSetup.js\r\nimport axios from 'axios';\r\nimport { showErrorToast } from '../../components/ErroToast';\r\n\r\n// Create an Axios instance\r\nconst api = axios.create();\r\n\r\n// Function to configure interceptors with dispatch and navigate\r\nexport const configureAxiosInterceptors = (dispatch, navigate) => {\r\n  // Request Interceptor\r\n  api.interceptors.request.use(\r\n    (config) => {\r\n      // Automatically add the Authorization header if the token is available\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // Response Interceptor\r\n  api.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response?.status === 401) {\r\n        showErrorToast('Session expired. Please login again.');\r\n        dispatch(logout()); // Perform logout action\r\n        navigate('/login'); // Redirect to login page\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,4BAA4B;;AAE3D;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC;;AAE1B;AACA,OAAO,MAAMC,0BAA0B,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAChE;EACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;IACV;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;IAClD;IACA,OAAOD,MAAM;EACf,CAAC,EACAM,KAAK,IAAK;IACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;;EAED;EACAd,GAAG,CAACK,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;IAAA,IAAAI,eAAA;IACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;MAClCpB,cAAc,CAAC,sCAAsC,CAAC;MACtDI,QAAQ,CAACiB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MACpBhB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB;IACA,OAAOW,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;AACH,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}