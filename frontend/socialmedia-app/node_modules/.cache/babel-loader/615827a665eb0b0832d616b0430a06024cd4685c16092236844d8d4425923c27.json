{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../../config';\nimport { showErrorToast } from '../../components/ErrorToast';\n\n// Thunk to fetch posts\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async ({\n  userId,\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/api/posts/?user_id=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response;\n    showErrorToast('Error fetching posts');\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n  }\n});\n\n// Thunk to fetch bookmarks\nexport const fetchBookmarks = createAsyncThunk('posts/fetchBookmarks', async ({\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/api/bookmarks`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.map(bookmark => bookmark.post);\n  } catch (err) {\n    var _err$response2;\n    showErrorToast('Error fetching bookmarks');\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n  }\n});\n\n// Posts slice to manage posts and bookmarks state\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    posts: [],\n    bookmarks: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.posts = action.payload;\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchBookmarks.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchBookmarks.fulfilled, (state, action) => {\n      state.loading = false;\n      state.bookmarks = action.payload;\n    }).addCase(fetchBookmarks.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","BASE_URL","showErrorToast","fetchPosts","userId","token","rejectWithValue","response","get","headers","Authorization","data","err","_err$response","message","fetchBookmarks","map","bookmark","post","_err$response2","postsSlice","name","initialState","posts","bookmarks","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/features/auth/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../config';\r\nimport { showErrorToast } from '../../components/ErrorToast';\r\n\r\n// Thunk to fetch posts\r\nexport const fetchPosts = createAsyncThunk(\r\n  'posts/fetchPosts',\r\n  async ({ userId, token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/posts/?user_id=${userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      showErrorToast('Error fetching posts');\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Thunk to fetch bookmarks\r\nexport const fetchBookmarks = createAsyncThunk(\r\n  'posts/fetchBookmarks',\r\n  async ({ token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/bookmarks`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data.map(bookmark => bookmark.post);\r\n    } catch (err) {\r\n      showErrorToast('Error fetching bookmarks');\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Posts slice to manage posts and bookmarks state\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    posts: [],\r\n    bookmarks: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPosts.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.posts = action.payload;\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchBookmarks.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchBookmarks.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.bookmarks = action.payload;\r\n      })\r\n      .addCase(fetchBookmarks.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,cAAc,QAAQ,6BAA6B;;AAE5D;AACA,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACxC,kBAAkB,EAClB,OAAO;EAAEK,MAAM;EAAEC;AAAM,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ,uBAAuBG,MAAM,EAAE,EAAE;MAC3EK,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZX,cAAc,CAAC,sBAAsB,CAAC;IACtC,OAAOI,eAAe,CAAC,EAAAO,aAAA,GAAAD,GAAG,CAACL,QAAQ,cAAAM,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAIC,GAAG,CAACE,OAAO,CAAC;EAC3D;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGhB,gBAAgB,CAC5C,sBAAsB,EACtB,OAAO;EAAEM;AAAM,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ,gBAAgB,EAAE;MAC5DQ,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACI,IAAI,CAACK,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACrD,CAAC,CAAC,OAAON,GAAG,EAAE;IAAA,IAAAO,cAAA;IACZjB,cAAc,CAAC,0BAA0B,CAAC;IAC1C,OAAOI,eAAe,CAAC,EAAAa,cAAA,GAAAP,GAAG,CAACL,QAAQ,cAAAY,cAAA,uBAAZA,cAAA,CAAcR,IAAI,KAAIC,GAAG,CAACE,OAAO,CAAC;EAC3D;AACF,CACF,CAAC;;AAED;AACA,MAAMM,UAAU,GAAGtB,WAAW,CAAC;EAC7BuB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC3B,UAAU,CAAC4B,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDI,OAAO,CAAC3B,UAAU,CAAC8B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAAC3B,UAAU,CAACiC,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACf,cAAc,CAACgB,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDI,OAAO,CAACf,cAAc,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,SAAS,GAAGU,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC,CACDL,OAAO,CAACf,cAAc,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAef,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}