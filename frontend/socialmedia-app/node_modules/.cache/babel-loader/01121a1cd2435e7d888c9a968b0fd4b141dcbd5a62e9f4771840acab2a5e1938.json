{"ast":null,"code":"import { setTimeout } from 'timers';\nconst connectWebSocket = token => {\n  const wsUrl = `ws://localhost:8000/ws/feed/?token=${token}`;\n  const wsOptions = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  let ws = null;\n  let reconnectTimeout = null;\n  const connect = () => {\n    ws = new WebSocket(wsUrl, wsOptions);\n    ws.onopen = () => {\n      console.log('WebSocket connection established');\n      clearTimeout(reconnectTimeout);\n    };\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log('Message received:', data);\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n      reconnect();\n    };\n    ws.onclose = event => {\n      console.log('WebSocket connection closed:', event);\n      reconnect();\n    };\n  };\n  const reconnect = () => {\n    reconnectTimeout = setTimeout(connect, 5000); // Reconnect after 5 seconds\n  };\n  connect();\n  return ws;\n};\nexport default connectWebSocket;","map":{"version":3,"names":["setTimeout","connectWebSocket","token","wsUrl","wsOptions","headers","Authorization","ws","reconnectTimeout","connect","WebSocket","onopen","console","log","clearTimeout","onmessage","event","data","JSON","parse","onerror","error","reconnect","onclose"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/websocket.js"],"sourcesContent":["import { setTimeout } from 'timers';\r\n\r\nconst connectWebSocket = (token) => {\r\n  const wsUrl = `ws://localhost:8000/ws/feed/?token=${token}`;\r\n  const wsOptions = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  let ws = null;\r\n  let reconnectTimeout = null;\r\n\r\n  const connect = () => {\r\n    ws = new WebSocket(wsUrl, wsOptions);\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket connection established');\r\n      clearTimeout(reconnectTimeout);\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      console.log('Message received:', data);\r\n    };\r\n\r\n    ws.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n      reconnect();\r\n    };\r\n\r\n    ws.onclose = (event) => {\r\n      console.log('WebSocket connection closed:', event);\r\n      reconnect();\r\n    };\r\n  };\r\n\r\n  const reconnect = () => {\r\n    reconnectTimeout = setTimeout(connect, 5000); // Reconnect after 5 seconds\r\n  };\r\n\r\n  connect();\r\n\r\n  return ws;\r\n};\r\n\r\nexport default connectWebSocket;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,QAAQ;AAEnC,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAClC,MAAMC,KAAK,GAAG,sCAAsCD,KAAK,EAAE;EAC3D,MAAME,SAAS,GAAG;IAChBC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUJ,KAAK;IAChC;EACF,CAAC;EAED,IAAIK,EAAE,GAAG,IAAI;EACb,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBF,EAAE,GAAG,IAAIG,SAAS,CAACP,KAAK,EAAEC,SAAS,CAAC;IAEpCG,EAAE,CAACI,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CC,YAAY,CAACN,gBAAgB,CAAC;IAChC,CAAC;IAEDD,EAAE,CAACQ,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,IAAI,CAAC;IACxC,CAAC;IAEDV,EAAE,CAACa,OAAO,GAAIC,KAAK,IAAK;MACtBT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCC,SAAS,CAAC,CAAC;IACb,CAAC;IAEDf,EAAE,CAACgB,OAAO,GAAIP,KAAK,IAAK;MACtBJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEG,KAAK,CAAC;MAClDM,SAAS,CAAC,CAAC;IACb,CAAC;EACH,CAAC;EAED,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACtBd,gBAAgB,GAAGR,UAAU,CAACS,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;EAChD,CAAC;EAEDA,OAAO,CAAC,CAAC;EAET,OAAOF,EAAE;AACX,CAAC;AAED,eAAeN,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}