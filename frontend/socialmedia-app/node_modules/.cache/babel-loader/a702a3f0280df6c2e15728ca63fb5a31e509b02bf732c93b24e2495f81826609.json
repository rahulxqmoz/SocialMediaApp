{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst useNotifications = onMessage => {\n  _s();\n  useEffect(() => {\n    const socket = new WebSocket('ws://127.0.0.1:8000/ws/notifications/');\n    socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    socket.onmessage = event => {\n      const notification = JSON.parse(event.data);\n      onMessage(notification);\n      console.log(notification);\n    };\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    socket.onclose = event => {\n      console.log('WebSocket connection closed:', event);\n      // Optionally, handle reconnection logic here\n    };\n\n    // Cleanup on component unmount\n    return () => {\n      socket.close();\n    };\n  }, [onMessage]); // Add onMessage to the dependency array\n};\n_s(useNotifications, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useNotifications;","map":{"version":3,"names":["useEffect","useNotifications","onMessage","_s","socket","WebSocket","onopen","console","log","onmessage","event","notification","JSON","parse","data","onerror","error","onclose","close"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/NotificationService.js"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\nconst useNotifications = (onMessage) => {\r\n  useEffect(() => {\r\n    const socket = new WebSocket('ws://127.0.0.1:8000/ws/notifications/');\r\n\r\n    socket.onopen = () => {\r\n      console.log('WebSocket connection established');\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      const notification = JSON.parse(event.data);\r\n      onMessage(notification);\r\n      console.log(notification);\r\n    };\r\n\r\n    socket.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n\r\n    socket.onclose = (event) => {\r\n      console.log('WebSocket connection closed:', event);\r\n      // Optionally, handle reconnection logic here\r\n    };\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, [onMessage]); // Add onMessage to the dependency array\r\n};\r\n\r\nexport default useNotifications;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;EAAAC,EAAA;EACtCH,SAAS,CAAC,MAAM;IACd,MAAMI,MAAM,GAAG,IAAIC,SAAS,CAAC,uCAAuC,CAAC;IAErED,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAC3CZ,SAAS,CAACS,YAAY,CAAC;MACvBJ,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;IAC3B,CAAC;IAEDP,MAAM,CAACW,OAAO,GAAIC,KAAK,IAAK;MAC1BT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAEDZ,MAAM,CAACa,OAAO,GAAIP,KAAK,IAAK;MAC1BH,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEE,KAAK,CAAC;MAClD;IACF,CAAC;;IAED;IACA,OAAO,MAAM;MACXN,MAAM,CAACc,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAAChB,SAAS,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC;AAACC,EAAA,CA5BIF,gBAAgB;AA8BtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}