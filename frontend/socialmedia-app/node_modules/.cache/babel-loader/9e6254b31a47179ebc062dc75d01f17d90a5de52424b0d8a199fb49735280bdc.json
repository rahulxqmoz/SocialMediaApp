{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\pages\\\\ProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { BASE_URL } from '../config';\nimport Modal from 'react-modal';\nimport 'cropperjs/dist/cropper.css';\nimport { logout, updateUserProfileImage } from '../features/auth/userSlice';\nimport { showErrorToast } from '../components/ErroToast';\nimport ImageCropper from '../components/Cropper';\nimport 'react-quill/dist/quill.snow.css';\nimport PostBox from '../components/ProfilePageComponents/PostBoxComponent';\nimport { showSuccessToast } from '../components/CustomToast';\nimport ProfileHeader from '../components/ProfilePageComponents/ProfileHeader';\nimport ProfileSection from '../components/ProfilePageComponents/ProfileSection';\nimport PostListComponent from '../components/ProfilePageComponents/PostListComponent';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchProfile, fetchPosts, fetchBookmarks, updateLikeStatus } from '../features/posts/profileSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst ProfilePage = () => {\n  _s();\n  //const [profile, setProfile] = useState(null);\n  //const [error, setError] = useState(null);\n  //const [posts, setPosts] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalImage, setModalImage] = useState('');\n  const [openCommentId, setOpenCommentId] = useState(null);\n  const [imageType, setImageType] = useState(''); // 'cover' or 'profile'\n  const cropperRef = useRef(null);\n  //const [likedPosts, setLikedPosts] = useState({});   \n  const [comments, setComments] = useState({});\n  const [newComment, setNewComment] = useState(\"\");\n  const [replyingToCommentId, setReplyingToCommentId] = useState(null);\n  const user = useSelector(state => state.user.user);\n  const token = useSelector(state => state.auth.token);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [followerCount, setFollowerCount] = useState(0);\n  const [followingCount, setFollowingCount] = useState(0);\n  //const [bookmarks, setBookmarks] = useState([]);\n  const [bookmarkPosts, setbookmarkPosts] = useState({});\n  //const [loading, setLoading] = useState(false);\n\n  const {\n    profile,\n    posts,\n    bookmarks,\n    likedPosts,\n    loading,\n    error\n  } = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // const fetchBookmarks = async () => {\n  //   try {\n  //     const response = await axios.get(`${BASE_URL}/api/bookmarks`, {\n  //       headers: {\n  //           Authorization: `Bearer ${token}`,\n  //       },\n  //     });  // Fetch user's bookmarks\n  //     setBookmarks(response.data.map(bookmark => bookmark.post));\n  //   } catch (error) {\n  //     console.error('Error fetching bookmarks:', error);\n  //   }\n  // };\n  const fetchComments = async postId => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: response.data\n      }));\n    } catch (error) {\n      console.log(\"Error fetching comments\");\n    }\n  };\n\n  // const fetchPosts = async () => {\n  //   try {\n  //     const response = await axios.get(`${BASE_URL}/api/posts/?user_id=${user.id}`, {\n  //    headers: {\n  //        Authorization: `Bearer ${token}`,\n  //    },\n  //  });\n  //    setPosts(response.data); \n  //    console.log(response.data)// Set the fetched posts\n  //  } catch (err) {\n  //    console.log(\"Error fetching posts\");\n  //  }\n  // };\n\n  useEffect(() => {\n    if (user && token) {\n      dispatch(fetchProfile({\n        userId: user.id,\n        token\n      }));\n      dispatch(fetchPosts({\n        userId: user.id,\n        token\n      }));\n      dispatch(fetchBookmarks(token));\n    }\n  }, [user, token, dispatch]);\n  // useEffect(() => {\n  //   // const fetchProfile = async () => {\n  //   //   try {\n  //   //     const response = await axios.get(`${BASE_URL}/api/users/profile/${user?.id}/`, {\n  //   //       headers: {\n  //   //         Authorization: `Bearer ${token}`,\n  //   //       },\n  //   //     });\n\n  //   //     setProfile(response.data);\n  //   //     setFollowerCount(response.data.followers);\n  //   //     setFollowingCount(response.data.following);\n  //   //   } catch (err) {\n  //   //     console.log(`errorstatus:${err.response.status}`)\n  //   //     if (err.response?.status === 401) {\n  //   //       showErrorToast(\"Session timed out!.Please login agian.\")\n  //   //       setTimeout(() => {\n  //   //         handleLogout(); \n  //   //       }, 1000);\n  //   //     } else {\n\n  //   //       setError(err.response?.data?.detail || 'An error occurred while fetching the profile.');\n  //   //     }\n  //   //   }\n  //   // };\n\n  //   if (user && token) {\n  //     fetchProfile();\n  //     fetchPosts();\n  //     fetchBookmarks();\n  //   }\n  // }, [user, token]);\n\n  useEffect(() => {\n    if (posts.length > 0) {\n      posts.forEach(post => {\n        console.log(`Correct post id: ${post.id}`);\n        fetchComments(post.id);\n      });\n    }\n  }, [posts]);\n  useEffect(() => {\n    const fetchLikeStatus = async () => {\n      try {\n        const likeStatuses = {};\n        for (let post of posts) {\n          const response = await fetch(`${BASE_URL}/api/posts/${post.id}/check_liked/`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const result = await response.json();\n            likeStatuses[post.id] = result.liked; // Assume the response contains { liked: true/false }\n            console.log('check liked');\n            console.log(result);\n          }\n        }\n        setLikedPosts(likeStatuses);\n      } catch (error) {\n        console.error('Error fetching like status:', error);\n      }\n    };\n    const fetchBookmarkStatus = async () => {\n      try {\n        const bookmarkPosts = {};\n        for (let post of posts) {\n          const response = await fetch(`${BASE_URL}/api/posts/${post.id}/check_bookmarked/`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const result = await response.json();\n            bookmarkPosts[post.id] = result.bookmarked; // Assume the response contains { liked: true/false }\n          }\n        }\n        setbookmarkPosts(bookmarkPosts);\n      } catch (error) {\n        console.error('Error fetching like status:', error);\n      }\n    };\n    fetchLikeStatus();\n    fetchBookmarkStatus();\n  }, [posts, token, user]);\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate('/login');\n  };\n  const handleFileChange = (event, type) => {\n    const fileInput = event.target;\n    const file = event.target.files[0];\n    if (file) {\n      const validImageTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n      if (!validImageTypes.includes(file.type)) {\n        // setError('Please select a valid image file (JPEG, JPG, or PNG).');\n        showErrorToast('Please select a valid image file (JPEG, JPG, or PNG).');\n        fileInput.value = null;\n        return;\n      }\n    }\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setModalImage(reader.result);\n        setImageType(type);\n        setModalIsOpen(true);\n        fileInput.value = null;\n      };\n      reader.readAsDataURL(file);\n    } else {\n      console.error('No file selected.');\n    }\n  };\n  const handleImageUpload = async () => {\n    if (!cropperRef.current) return;\n    const cropper = cropperRef.current.cropper;\n    const canvas = cropper.getCroppedCanvas();\n    canvas.toBlob(async blob => {\n      const formData = new FormData();\n      formData.append(imageType === 'cover' ? 'cover_pic' : 'profile_pic', blob, 'cropped-image.jpg');\n      try {\n        await axios.patch(`${BASE_URL}/api/users/profile/update/`, formData, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        const updatedImageURL = URL.createObjectURL(blob);\n        setProfile(prevProfile => ({\n          ...prevProfile,\n          [imageType === 'cover' ? 'cover_pic' : 'profile_pic']: updatedImageURL\n        }));\n\n        // Dispatch the action to update the Redux store\n        if (imageType === 'profile') {\n          dispatch(updateUserProfileImage(updatedImageURL));\n        }\n        closeModal();\n      } catch (err) {\n        setError('An error occurred while uploading the image.');\n      }\n    }, 'image/jpeg');\n  };\n  const openModal = type => {\n    setImageType(type);\n    document.getElementById(`${type}-upload`).click(); // Trigger the file input click\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setModalImage('');\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 text-center mt-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 12\n    }, this);\n  }\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  }\n  const handleNewPost = async postData => {\n    const userId = user.id;\n    setLoading(true);\n    if (!postData.content || postData.content.trim() === '') {\n      showErrorToast(\"Content cannot be empty.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('content', postData.content);\n      formData.append('user', user.id);\n      if (postData.image) {\n        const imageBlob = await fetch(postData.image).then(res => res.blob());\n        formData.append('image', imageBlob, 'post.jpg');\n      }\n      console.log(`video:${postData.video}`);\n      if (postData.video) {\n        const videoBlob = await fetch(postData.video).then(res => res.blob());\n        const videoSizeMB = videoBlob.size / (1024 * 1024);\n        if (videoSizeMB > 100) {\n          showErrorToast(\"Video size exceeds 100MB. Please upload a smaller file.\");\n          setLoading(false);\n          return;\n        }\n        formData.append('video', videoBlob, 'post.mp4');\n      }\n      formData.append('is_approved', true);\n      for (const [key, value] of formData.entries()) {\n        console.log(`${key}:`, value);\n      }\n      const response = await axios.post(`${BASE_URL}/api/posts/`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n      showSuccessToast(\"Post successfully submitted\");\n    } catch (err) {\n      showErrorToast(\"Error while submitting!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLike = async postId => {\n    try {\n      const response = await fetch(`${BASE_URL}/api/likes/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          post: postId\n        })\n      });\n      if (response.status === 201) {\n        console.log('Post liked');\n        setLikedPosts(prev => ({\n          ...prev,\n          [postId]: true\n        }));\n      } else if (response.status === 204) {\n        console.log('Post unliked');\n        setLikedPosts(prev => ({\n          ...prev,\n          [postId]: false\n        }));\n      } else {\n        console.log('Error:', await response.json());\n      }\n      fetchPosts();\n    } catch (error) {\n      console.error('Error liking/unliking post:', error);\n    }\n  };\n  const handleSubmitComment = async (postId, commentText, parentId = null) => {\n    if (!commentText.trim()) {\n      showErrorToast('Empty Comment Box');\n      return;\n    }\n    console.log(postId, commentText, user.id, parentId, token);\n    try {\n      const response = await axios.post(`${BASE_URL}/api/comments/`, {\n        post: postId,\n        content: commentText,\n        user: user.id,\n        parent: parentId // Include parentId here\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newCommentData = response.data;\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData]\n      }));\n      setNewComment(\"\");\n      setReplyingToCommentId(null);\n      showSuccessToast(\"Comment submitted successfully\");\n      fetchPosts();\n    } catch (error) {\n      showErrorToast(\"Error submitting comment\");\n    }\n  };\n  const handleToggleComments = postId => {\n    if (openCommentId === postId) {\n      setOpenCommentId(null); // Close the comments section if it's already open\n    } else {\n      setOpenCommentId(postId); // Open the comments section for the specific post\n    }\n  };\n  const handleAddEmoji = emoji => {\n    setCommentText(prev => prev + emoji.native); // Append the selected emoji to the comment text\n  };\n  const handleBookmark = async postId => {\n    try {\n      if (bookmarkPosts[postId]) {\n        // If already bookmarked, unbookmark the post\n        await axios.delete(`${BASE_URL}/api/bookmarks/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setbookmarkPosts(prevState => ({\n          ...prevState,\n          [postId]: false\n        }));\n        showErrorToast('Post removed from Bookmarks');\n      } else {\n        // If not bookmarked, bookmark the post\n        await axios.post(`${BASE_URL}/api/bookmarks/`, {\n          post: postId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setbookmarkPosts(prevState => ({\n          ...prevState,\n          [postId]: true\n        }));\n        showSuccessToast('Added to Bookmarks');\n      }\n    } catch (error) {\n      console.error('Error updating bookmark:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto bg-white shadow-md rounded-md overflow-hidden mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n      profile: profile,\n      handleFileChange: handleFileChange,\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 sm:p-6\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileSection, {\n        user: user,\n        profile: profile,\n        followerCount: followerCount,\n        followingCount: followingCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 5\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PostBox, {\n        onPostSubmit: handleNewPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PostListComponent, {\n        posts: posts,\n        user: user,\n        likedPosts: likedPosts,\n        handleLike: handleLike,\n        handleToggleComments: handleToggleComments,\n        handleBookmark: handleBookmark,\n        bookmarkPosts: bookmarkPosts,\n        openCommentId: openCommentId,\n        handleSubmitComment: handleSubmitComment,\n        replyingToCommentId: replyingToCommentId,\n        setReplyingToCommentId: setReplyingToCommentId,\n        setCommentText: setCommentText,\n        setShowEmojiPicker: setShowEmojiPicker,\n        showEmojiPicker: showEmojiPicker,\n        handleAddEmoji: handleAddEmoji,\n        comments: comments,\n        commentText: commentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"w-full max-w-2xl mx-auto mt-16\",\n      children: /*#__PURE__*/_jsxDEV(ImageCropper, {\n        modalImage: modalImage,\n        onSave: handleImageUpload,\n        onClose: closeModal,\n        ref: cropperRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"ZHiW/RJ9ck6EhqcSKKff+J3j2TY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useDispatch","useSelector","axios","BASE_URL","Modal","logout","updateUserProfileImage","showErrorToast","ImageCropper","PostBox","showSuccessToast","ProfileHeader","ProfileSection","PostListComponent","useNavigate","fetchProfile","fetchPosts","fetchBookmarks","updateLikeStatus","jsxDEV","_jsxDEV","setAppElement","ProfilePage","_s","modalIsOpen","setModalIsOpen","modalImage","setModalImage","openCommentId","setOpenCommentId","imageType","setImageType","cropperRef","comments","setComments","newComment","setNewComment","replyingToCommentId","setReplyingToCommentId","user","state","token","auth","showEmojiPicker","setShowEmojiPicker","commentText","setCommentText","followerCount","setFollowerCount","followingCount","setFollowingCount","bookmarkPosts","setbookmarkPosts","profile","posts","bookmarks","likedPosts","loading","error","dispatch","navigate","fetchComments","postId","response","get","headers","Authorization","prevComments","data","console","log","userId","id","length","forEach","post","fetchLikeStatus","likeStatuses","fetch","method","ok","result","json","liked","setLikedPosts","fetchBookmarkStatus","bookmarked","handleLogout","handleFileChange","event","type","fileInput","target","file","files","validImageTypes","includes","value","reader","FileReader","onloadend","readAsDataURL","handleImageUpload","current","cropper","canvas","getCroppedCanvas","toBlob","blob","formData","FormData","append","patch","updatedImageURL","URL","createObjectURL","setProfile","prevProfile","closeModal","err","setError","openModal","document","getElementById","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleNewPost","postData","setLoading","content","trim","image","imageBlob","then","res","video","videoBlob","videoSizeMB","size","key","entries","setPosts","prevPosts","handleLike","body","JSON","stringify","status","prev","handleSubmitComment","parentId","parent","newCommentData","handleToggleComments","handleAddEmoji","emoji","native","handleBookmark","delete","prevState","onPostSubmit","isOpen","onRequestClose","onSave","onClose","ref","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/pages/ProfilePage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../config';\r\nimport Modal from 'react-modal';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport { logout, updateUserProfileImage } from '../features/auth/userSlice';\r\nimport { showErrorToast } from '../components/ErroToast';\r\nimport ImageCropper from '../components/Cropper';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport PostBox from '../components/ProfilePageComponents/PostBoxComponent';\r\nimport { showSuccessToast } from '../components/CustomToast';\r\nimport ProfileHeader from '../components/ProfilePageComponents/ProfileHeader';\r\nimport ProfileSection from '../components/ProfilePageComponents/ProfileSection';\r\nimport PostListComponent from '../components/ProfilePageComponents/PostListComponent';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchProfile, fetchPosts, fetchBookmarks, updateLikeStatus } from '../features/posts/profileSlice';\r\nModal.setAppElement('#root');\r\n\r\nconst ProfilePage = () => {\r\n  //const [profile, setProfile] = useState(null);\r\n  //const [error, setError] = useState(null);\r\n  //const [posts, setPosts] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [modalImage, setModalImage] = useState('');\r\n  const [openCommentId, setOpenCommentId] = useState(null); \r\n  const [imageType, setImageType] = useState(''); // 'cover' or 'profile'\r\n  const cropperRef = useRef(null);\r\n  //const [likedPosts, setLikedPosts] = useState({});   \r\n  const [comments, setComments] = useState({}); \r\n  const [newComment, setNewComment] = useState(\"\"); \r\n  const [replyingToCommentId, setReplyingToCommentId] = useState(null); \r\n  const user = useSelector((state) => state.user.user);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [commentText, setCommentText] = useState('');\r\n  const [followerCount, setFollowerCount] = useState(0);\r\n  const [followingCount, setFollowingCount] = useState(0);\r\n  //const [bookmarks, setBookmarks] = useState([]);\r\n  const [bookmarkPosts, setbookmarkPosts] = useState({});  \r\n  //const [loading, setLoading] = useState(false);\r\n\r\n  const { profile, posts, bookmarks, likedPosts, loading, error } = useSelector((state) => state.profile);\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate=useNavigate();\r\n\r\n  // const fetchBookmarks = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(`${BASE_URL}/api/bookmarks`, {\r\n  //       headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //       },\r\n  //     });  // Fetch user's bookmarks\r\n  //     setBookmarks(response.data.map(bookmark => bookmark.post));\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching bookmarks:', error);\r\n  //   }\r\n  // };\r\n  const fetchComments = async (postId) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: response.data,\r\n        \r\n      }));\r\n    } catch (error) {\r\n      console.log(\"Error fetching comments\");\r\n    }\r\n  };\r\n\r\n  // const fetchPosts = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(`${BASE_URL}/api/posts/?user_id=${user.id}`, {\r\n  //    headers: {\r\n  //        Authorization: `Bearer ${token}`,\r\n  //    },\r\n  //  });\r\n  //    setPosts(response.data); \r\n  //    console.log(response.data)// Set the fetched posts\r\n  //  } catch (err) {\r\n  //    console.log(\"Error fetching posts\");\r\n  //  }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (user && token) {\r\n      dispatch(fetchProfile({ userId: user.id, token }));\r\n      dispatch(fetchPosts({ userId: user.id, token }));\r\n      dispatch(fetchBookmarks(token));\r\n    }\r\n  }, [user, token, dispatch]);\r\n  // useEffect(() => {\r\n  //   // const fetchProfile = async () => {\r\n  //   //   try {\r\n  //   //     const response = await axios.get(`${BASE_URL}/api/users/profile/${user?.id}/`, {\r\n  //   //       headers: {\r\n  //   //         Authorization: `Bearer ${token}`,\r\n  //   //       },\r\n  //   //     });\r\n       \r\n  //   //     setProfile(response.data);\r\n  //   //     setFollowerCount(response.data.followers);\r\n  //   //     setFollowingCount(response.data.following);\r\n  //   //   } catch (err) {\r\n  //   //     console.log(`errorstatus:${err.response.status}`)\r\n  //   //     if (err.response?.status === 401) {\r\n  //   //       showErrorToast(\"Session timed out!.Please login agian.\")\r\n  //   //       setTimeout(() => {\r\n  //   //         handleLogout(); \r\n  //   //       }, 1000);\r\n  //   //     } else {\r\n          \r\n  //   //       setError(err.response?.data?.detail || 'An error occurred while fetching the profile.');\r\n  //   //     }\r\n  //   //   }\r\n  //   // };\r\n\r\n  //   if (user && token) {\r\n  //     fetchProfile();\r\n  //     fetchPosts();\r\n  //     fetchBookmarks();\r\n  //   }\r\n  // }, [user, token]);\r\n\r\n  useEffect(() => {\r\n    if (posts.length > 0) {\r\n      posts.forEach((post) => {\r\n        console.log(`Correct post id: ${post.id}`);\r\n        fetchComments(post.id);\r\n      });\r\n    }\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    const fetchLikeStatus = async () => {\r\n      try {\r\n        const likeStatuses = {};\r\n        for (let post of posts) {\r\n          const response = await fetch(`${BASE_URL}/api/posts/${post.id}/check_liked/`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (response.ok) {\r\n            const result = await response.json();\r\n            likeStatuses[post.id] = result.liked; // Assume the response contains { liked: true/false }\r\n            console.log('check liked');\r\n            console.log(result);\r\n          }\r\n        }\r\n        setLikedPosts(likeStatuses);\r\n      } catch (error) {\r\n        console.error('Error fetching like status:', error);\r\n      }\r\n    };\r\n\r\n    const fetchBookmarkStatus = async () => {\r\n      try {\r\n        const bookmarkPosts = {};\r\n        for (let post of posts) {\r\n          const response = await fetch(`${BASE_URL}/api/posts/${post.id}/check_bookmarked/`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (response.ok) {\r\n            const result = await response.json();\r\n            bookmarkPosts[post.id] = result.bookmarked; // Assume the response contains { liked: true/false }\r\n           \r\n          }\r\n        }\r\n        setbookmarkPosts(bookmarkPosts);\r\n      } catch (error) {\r\n        console.error('Error fetching like status:', error);\r\n      }\r\n    };\r\n\r\n    fetchLikeStatus();\r\n    fetchBookmarkStatus();\r\n  }, [posts, token,user]);\r\n\r\n  const handleLogout=()=>{\r\n    dispatch(logout());\r\n    navigate('/login')\r\n  }\r\n\r\n\r\n  const handleFileChange = (event, type) => {\r\n    const fileInput = event.target;\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const validImageTypes = ['image/jpeg', 'image/jpg', 'image/png'];\r\n      if (!validImageTypes.includes(file.type)) {\r\n        // setError('Please select a valid image file (JPEG, JPG, or PNG).');\r\n        showErrorToast('Please select a valid image file (JPEG, JPG, or PNG).');\r\n        fileInput.value = null; \r\n        return;\r\n      }\r\n    }\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setModalImage(reader.result);\r\n        setImageType(type);\r\n        setModalIsOpen(true);\r\n        fileInput.value = null; \r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      console.error('No file selected.');\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = async () => {\r\n    if (!cropperRef.current) return;\r\n\r\n    const cropper = cropperRef.current.cropper;\r\n    const canvas = cropper.getCroppedCanvas();\r\n    canvas.toBlob(async (blob) => {\r\n      const formData = new FormData();\r\n      formData.append(imageType === 'cover' ? 'cover_pic' : 'profile_pic', blob, 'cropped-image.jpg');\r\n\r\n      try {\r\n        await axios.patch(`${BASE_URL}/api/users/profile/update/`, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n\r\n        const updatedImageURL = URL.createObjectURL(blob);\r\n        setProfile((prevProfile) => ({\r\n          ...prevProfile,\r\n          [imageType === 'cover' ? 'cover_pic' : 'profile_pic']: updatedImageURL,\r\n        }));\r\n\r\n        // Dispatch the action to update the Redux store\r\n        if (imageType === 'profile') {\r\n          dispatch(updateUserProfileImage(updatedImageURL));\r\n        }\r\n\r\n        closeModal();\r\n\r\n      } catch (err) {\r\n        setError('An error occurred while uploading the image.');\r\n      }\r\n    }, 'image/jpeg');\r\n  };\r\n\r\n\r\n  const openModal = (type) => {\r\n    setImageType(type);\r\n    document.getElementById(`${type}-upload`).click(); // Trigger the file input click\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n    setModalImage('');\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500 text-center mt-4\">{error}</div>;\r\n  }\r\n\r\n  if (!profile) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"></div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  const handleNewPost = async (postData) => {\r\n    const userId = user.id;\r\n    setLoading(true);  \r\n    if (!postData.content || postData.content.trim() === '') {\r\n      showErrorToast(\"Content cannot be empty.\");\r\n      setLoading(false); \r\n      return;\r\n    }\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('content', postData.content);\r\n      formData.append('user', user.id);\r\n\r\n      if (postData.image) {\r\n        const imageBlob = await fetch(postData.image).then((res) => res.blob());\r\n        formData.append('image', imageBlob, 'post.jpg');\r\n      }\r\n  \r\n      console.log(`video:${postData.video}`)\r\n      if (postData.video) {\r\n        const videoBlob = await fetch(postData.video).then((res) => res.blob());\r\n        const videoSizeMB = videoBlob.size / (1024 * 1024);\r\n        if (videoSizeMB > 100) {\r\n          showErrorToast(\"Video size exceeds 100MB. Please upload a smaller file.\");\r\n          setLoading(false); \r\n          return; \r\n        }\r\n        formData.append('video', videoBlob, 'post.mp4');\r\n      }\r\n      formData.append('is_approved', true);\r\n      for (const [key, value] of formData.entries()) {\r\n        console.log(`${key}:`, value);\r\n      }\r\n      const response = await axios.post(`${BASE_URL}/api/posts/`, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      \r\n      setPosts((prevPosts) => [response.data, ...prevPosts]);\r\n      showSuccessToast(\"Post successfully submitted\");\r\n    } catch (err) {\r\n       showErrorToast(\"Error while submitting!\")\r\n    }finally {\r\n      setLoading(false);  \r\n    }\r\n  };\r\n  const handleLike = async  (postId) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/api/likes/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ post: postId }),\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        console.log('Post liked');\r\n        setLikedPosts((prev) => ({ ...prev, [postId]: true }));\r\n      } else if (response.status === 204) {\r\n        console.log('Post unliked');\r\n        setLikedPosts((prev) => ({ ...prev, [postId]: false }));\r\n      } else {\r\n        console.log('Error:', await response.json());\r\n      }\r\n      fetchPosts();\r\n    } catch (error) {\r\n      console.error('Error liking/unliking post:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleSubmitComment = async (postId, commentText, parentId = null) => {\r\n    if (!commentText.trim()) {\r\n      showErrorToast('Empty Comment Box');\r\n      return;\r\n    }\r\n    console.log(postId,commentText,user.id,parentId,token);\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/api/comments/`, {\r\n        post: postId,\r\n        content: commentText,\r\n        user: user.id,\r\n        parent: parentId, // Include parentId here\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      const newCommentData = response.data;\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: [...(prevComments[postId] || []), newCommentData],\r\n      }));\r\n  \r\n      setNewComment(\"\");\r\n      setReplyingToCommentId(null);\r\n     \r\n      showSuccessToast(\"Comment submitted successfully\");\r\n      fetchPosts();\r\n    } catch (error) {\r\n      showErrorToast(\"Error submitting comment\");\r\n    }\r\n  };\r\n  const handleToggleComments = (postId) => {\r\n    if (openCommentId === postId) {\r\n      setOpenCommentId(null); // Close the comments section if it's already open\r\n    } else {\r\n      setOpenCommentId(postId); // Open the comments section for the specific post\r\n    }\r\n  };\r\n\r\n  const handleAddEmoji = (emoji) => {\r\n    setCommentText((prev) => prev + emoji.native); // Append the selected emoji to the comment text\r\n  };\r\n \r\n\r\n  const handleBookmark = async (postId) => {\r\n    try {\r\n      \r\n      if (bookmarkPosts[postId]) {\r\n        // If already bookmarked, unbookmark the post\r\n        await axios.delete(`${BASE_URL}/api/bookmarks/${postId}`,{\r\n          headers: {\r\n              Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setbookmarkPosts((prevState) => ({\r\n          ...prevState,\r\n          [postId]: false,\r\n        }));\r\n        showErrorToast('Post removed from Bookmarks');\r\n      } else {\r\n        // If not bookmarked, bookmark the post\r\n        await axios.post(`${BASE_URL}/api/bookmarks/`, { post: postId }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setbookmarkPosts((prevState) => ({\r\n          ...prevState,\r\n          [postId]: true,\r\n        }));\r\n        showSuccessToast('Added to Bookmarks');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto bg-white shadow-md rounded-md overflow-hidden mt-8\">\r\n      \r\n    {/* Profile Header */}\r\n  \r\n    <ProfileHeader profile={profile} handleFileChange={handleFileChange} openModal={openModal}/>\r\n    {/* Profile Details */}\r\n  <div className=\"p-4 sm:p-6\">\r\n    {/* Profile Section */}\r\n    <ProfileSection user={user} profile={profile} followerCount={followerCount} followingCount={followingCount}/>\r\n{loading && (\r\n      <div className=\"flex justify-center items-center mb-2\">\r\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"></div>\r\n      </div>\r\n    )}\r\n    {/* PostBox Section */}\r\n    <PostBox onPostSubmit={handleNewPost} />\r\n\r\n  \r\n   \r\n      <PostListComponent \r\n      posts={posts}\r\n      user={user}\r\n      likedPosts={likedPosts}\r\n      handleLike={handleLike}\r\n      handleToggleComments={handleToggleComments}\r\n      handleBookmark={handleBookmark}\r\n      bookmarkPosts={bookmarkPosts}\r\n      openCommentId={openCommentId}\r\n      handleSubmitComment={handleSubmitComment}\r\n      replyingToCommentId={replyingToCommentId}\r\n      setReplyingToCommentId={setReplyingToCommentId}\r\n      setCommentText={setCommentText}\r\n      setShowEmojiPicker={setShowEmojiPicker}\r\n      showEmojiPicker={showEmojiPicker}\r\n      handleAddEmoji={handleAddEmoji}\r\n      comments={comments}\r\n      commentText={commentText}\r\n      />\r\n   \r\n  </div>\r\n\r\n  {/* Cropper Modal */}\r\n  <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className=\"w-full max-w-2xl mx-auto mt-16\">\r\n    <ImageCropper modalImage={modalImage} onSave={handleImageUpload} onClose={closeModal} ref={cropperRef} />\r\n  </Modal>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}