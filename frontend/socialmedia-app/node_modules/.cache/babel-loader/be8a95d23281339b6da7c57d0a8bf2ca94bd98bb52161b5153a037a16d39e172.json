{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\PostBoxComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { FaSmile, FaImage, FaVideo, FaTimes } from 'react-icons/fa';\nimport EmojiPicker from 'emoji-picker-react';\nimport ImageCropper from './Cropper';\nimport VideoTrimmer from './VideoTrimmer'; // Import the VideoTrimmer\nimport VideoTrimmerAlternative from './VideoTrimmerAlternative';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostBox = ({\n  onPostSubmit\n}) => {\n  _s();\n  const [postContent, setPostContent] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null); // For image preview\n  const [croppedImage, setCroppedImage] = useState(null); // Cropped image data\n  const [selectedVideo, setSelectedVideo] = useState(null); // For video preview\n  const [trimmedVideo, setTrimmedVideo] = useState(null); // Trimmed video data\n  const [error, setError] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [showCropper, setShowCropper] = useState(false); // To show cropper\n  const [showTrimmer, setShowTrimmer] = useState(false); // To show video trimmer\n\n  const cropperRef = useRef(null); // Ref for the cropper\n  const imageInputRef = useRef(null); // Ref for clearing image input\n  const [trimmedVideoUrl, setTrimmedVideoUrl] = useState('');\n  // Handle text area content change\n  const handleContentChange = e => {\n    setPostContent(e.target.value);\n  };\n\n  // Handle emoji click event to add emoji to textarea\n  const handleEmojiClick = emojiObject => {\n    setPostContent(prevContent => prevContent + emojiObject.emoji);\n    setShowEmojiPicker(false); // Hide emoji picker after selection\n  };\n\n  // Handle file selection (image/video)\n  const handleFileChange = (event, type) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const validImageTypes = ['image/jpeg', 'image/png', 'image/jpg'];\n    const validVideoTypes = ['video/mp4', 'video/webm', 'video/ogg'];\n\n    // if (type === 'image' && validImageTypes.includes(file.type)) {\n    //   setSelectedImage(URL.createObjectURL(file));\n    //   setSelectedVideo(null); // Clear video if image is selected\n    //   setShowCropper(true); // Show the cropper when image is selected\n    // } else if (type === 'video' && validVideoTypes.includes(file.type)) {\n    //   setSelectedVideo(URL.createObjectURL(file));\n    //   setSelectedImage(null); // Clear image if video is selected\n    //   setShowTrimmer(true); // Show the trimmer when video is selected\n    // } else {\n    //   setError('Please select a valid image or video file.');\n    // }\n    if (type === 'video' && validVideoTypes.includes(file.type)) {\n      setSelectedVideo(URL.createObjectURL(file));\n      setSelectedImage(null); // Clear image if video is selected\n      setShowTrimmer(true); // Show the trimmer when video is selected\n    }\n\n    // Clear the file input after selection\n    if (imageInputRef.current) {\n      imageInputRef.current.value = '';\n    }\n  };\n\n  // Handle saving the cropped image\n  const handleSaveCrop = () => {\n    const cropper = cropperRef.current.cropper; // Get the cropper instance\n    const croppedImageUrl = cropper.getCroppedCanvas().toDataURL(); // Get the cropped image data URL\n    setCroppedImage(croppedImageUrl); // Save cropped image\n    setShowCropper(false); // Hide cropper after saving\n    setSelectedImage(null); // Clear selected image\n  };\n\n  // Handle saving the trimmed video\n  const handleSaveTrim = videoUrl => {\n    setTrimmedVideo(videoUrl); // Save trimmed video\n    setShowTrimmer(false); // Hide trimmer after saving\n    setSelectedVideo(null); // Clear selected video\n  };\n\n  // Handle removing the selected image or video\n  const handleRemoveImage = () => {\n    setSelectedImage(null);\n    setCroppedImage(null);\n    setShowCropper(false);\n  };\n  const handleRemoveVideo = () => {\n    setSelectedVideo(null);\n    setTrimmedVideo(null);\n    setShowTrimmer(false);\n    if (videoInputRef.current) {\n      videoInputRef.current.value = '';\n    }\n  };\n  const videoInputRef = useRef(null);\n  // Handle post submission\n  const handlePost = () => {\n    if (!postContent.trim() && !croppedImage && !trimmedVideo) {\n      setError('Post content or media is required.');\n      return;\n    }\n    onPostSubmit({\n      content: postContent,\n      image: croppedImage,\n      video: trimmedVideo\n    });\n    setPostContent('');\n    setSelectedImage(null);\n    setCroppedImage(null);\n    setSelectedVideo(null);\n    setTrimmedVideo(null);\n    setError(null);\n  };\n  const handleTrimComplete = url => {\n    setTrimmedVideoUrl(url);\n  };\n  const handleSubmit = () => {\n    if (trimmedVideoUrl) {\n      // Add logic to post the trimmed video\n      console.log('Trimmed video ready to be posted:', trimmedVideoUrl);\n    } else {\n      console.log('No trimmed video available.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border p-4 rounded-md shadow-sm relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 border border-gray-300 rounded-md mb-2\",\n      placeholder: \"What's on your mind?\",\n      value: postContent,\n      onChange: handleContentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"flex items-center space-x-1 relative\",\n        onClick: () => setShowEmojiPicker(!showEmojiPicker),\n        children: /*#__PURE__*/_jsxDEV(FaSmile, {\n          className: \"text-xl text-gray-500 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute z-10 bottom-12 left-0\",\n        children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image-upload\",\n        className: \"cursor-pointer flex items-center space-x-1\",\n        children: [/*#__PURE__*/_jsxDEV(FaImage, {\n          className: \"text-xl text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image-upload\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => handleFileChange(e, 'image'),\n          className: \"hidden\",\n          ref: imageInputRef // Ref for image input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"video-upload\",\n        className: \"cursor-pointer flex items-center space-x-1\",\n        children: [/*#__PURE__*/_jsxDEV(FaVideo, {\n          className: \"text-xl text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"video-upload\",\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: e => handleFileChange(e, 'video'),\n          className: \"hidden\",\n          ref: videoInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), showCropper && selectedImage && /*#__PURE__*/_jsxDEV(ImageCropper, {\n      ref: cropperRef,\n      modalImage: selectedImage,\n      onSave: handleSaveCrop,\n      onClose: () => setShowCropper(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: croppedImage,\n        alt: \"Cropped\",\n        className: \"max-w-full h-auto rounded-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\",\n        onClick: handleRemoveImage,\n        children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), showTrimmer && selectedVideo &&\n    /*#__PURE__*/\n    // <VideoTrimmer\n    //   videoUrl={selectedVideo}\n    //   onSave={handleSaveTrim}\n    //   onClose={handleRemoveVideo}\n    // />\n    //     <VideoTrimmerAlternative\n    //     videoUrl={selectedVideo}\n    //     onSave={handleSaveTrim}\n    //     onClose={handleRemoveVideo}\n    //   />\n    _jsxDEV(\"div\", {\n      className: \"post-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(VideoTrimmer, {\n        onTrimComplete: handleTrimComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }, this), trimmedVideoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Preview Trimmed Video:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          src: trimmedVideoUrl,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }, this), trimmedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        src: trimmedVideo,\n        className: \"max-w-full h-auto rounded-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\",\n        onClick: handleRemoveVideo,\n        children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white px-4 py-2 rounded-md shadow hover:bg-blue-600\",\n      onClick: handlePost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(PostBox, \"LSXuFTu/YTXT9nMOcVqqR9fq/Gg=\");\n_c = PostBox;\nexport default PostBox;\nvar _c;\n$RefreshReg$(_c, \"PostBox\");","map":{"version":3,"names":["React","useState","useRef","FaSmile","FaImage","FaVideo","FaTimes","EmojiPicker","ImageCropper","VideoTrimmer","VideoTrimmerAlternative","jsxDEV","_jsxDEV","PostBox","onPostSubmit","_s","postContent","setPostContent","selectedImage","setSelectedImage","croppedImage","setCroppedImage","selectedVideo","setSelectedVideo","trimmedVideo","setTrimmedVideo","error","setError","showEmojiPicker","setShowEmojiPicker","showCropper","setShowCropper","showTrimmer","setShowTrimmer","cropperRef","imageInputRef","trimmedVideoUrl","setTrimmedVideoUrl","handleContentChange","e","target","value","handleEmojiClick","emojiObject","prevContent","emoji","handleFileChange","event","type","file","files","validImageTypes","validVideoTypes","includes","URL","createObjectURL","current","handleSaveCrop","cropper","croppedImageUrl","getCroppedCanvas","toDataURL","handleSaveTrim","videoUrl","handleRemoveImage","handleRemoveVideo","videoInputRef","handlePost","trim","content","image","video","handleTrimComplete","url","handleSubmit","console","log","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onEmojiClick","htmlFor","id","accept","ref","modalImage","onSave","onClose","src","alt","onTrimComplete","controls","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/PostBoxComponent.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { FaSmile, FaImage, FaVideo, FaTimes } from 'react-icons/fa';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport ImageCropper from './Cropper';\r\nimport VideoTrimmer from './VideoTrimmer'; // Import the VideoTrimmer\r\nimport VideoTrimmerAlternative from './VideoTrimmerAlternative';\r\n\r\nconst PostBox = ({ onPostSubmit }) => {\r\n  const [postContent, setPostContent] = useState('');\r\n  const [selectedImage, setSelectedImage] = useState(null); // For image preview\r\n  const [croppedImage, setCroppedImage] = useState(null); // Cropped image data\r\n  const [selectedVideo, setSelectedVideo] = useState(null); // For video preview\r\n  const [trimmedVideo, setTrimmedVideo] = useState(null); // Trimmed video data\r\n  const [error, setError] = useState(null);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [showCropper, setShowCropper] = useState(false); // To show cropper\r\n  const [showTrimmer, setShowTrimmer] = useState(false); // To show video trimmer\r\n\r\n  const cropperRef = useRef(null); // Ref for the cropper\r\n  const imageInputRef = useRef(null); // Ref for clearing image input\r\n  const [trimmedVideoUrl, setTrimmedVideoUrl] = useState('');\r\n  // Handle text area content change\r\n  const handleContentChange = (e) => {\r\n    setPostContent(e.target.value);\r\n  };\r\n\r\n  // Handle emoji click event to add emoji to textarea\r\n  const handleEmojiClick = (emojiObject) => {\r\n    setPostContent((prevContent) => prevContent + emojiObject.emoji);\r\n    setShowEmojiPicker(false); // Hide emoji picker after selection\r\n  };\r\n\r\n  // Handle file selection (image/video)\r\n  const handleFileChange = (event, type) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const validImageTypes = ['image/jpeg', 'image/png', 'image/jpg'];\r\n    const validVideoTypes = ['video/mp4', 'video/webm', 'video/ogg'];\r\n\r\n    // if (type === 'image' && validImageTypes.includes(file.type)) {\r\n    //   setSelectedImage(URL.createObjectURL(file));\r\n    //   setSelectedVideo(null); // Clear video if image is selected\r\n    //   setShowCropper(true); // Show the cropper when image is selected\r\n    // } else if (type === 'video' && validVideoTypes.includes(file.type)) {\r\n    //   setSelectedVideo(URL.createObjectURL(file));\r\n    //   setSelectedImage(null); // Clear image if video is selected\r\n    //   setShowTrimmer(true); // Show the trimmer when video is selected\r\n    // } else {\r\n    //   setError('Please select a valid image or video file.');\r\n    // }\r\n    if (type === 'video' && validVideoTypes.includes(file.type)) {\r\n        setSelectedVideo(URL.createObjectURL(file));\r\n        setSelectedImage(null); // Clear image if video is selected\r\n        setShowTrimmer(true); // Show the trimmer when video is selected\r\n      }\r\n\r\n    // Clear the file input after selection\r\n    if (imageInputRef.current) {\r\n      imageInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  // Handle saving the cropped image\r\n  const handleSaveCrop = () => {\r\n    const cropper = cropperRef.current.cropper; // Get the cropper instance\r\n    const croppedImageUrl = cropper.getCroppedCanvas().toDataURL(); // Get the cropped image data URL\r\n    setCroppedImage(croppedImageUrl); // Save cropped image\r\n    setShowCropper(false); // Hide cropper after saving\r\n    setSelectedImage(null); // Clear selected image\r\n  };\r\n\r\n  // Handle saving the trimmed video\r\n  const handleSaveTrim = (videoUrl) => {\r\n    setTrimmedVideo(videoUrl); // Save trimmed video\r\n    setShowTrimmer(false); // Hide trimmer after saving\r\n    setSelectedVideo(null); // Clear selected video\r\n  };\r\n\r\n  // Handle removing the selected image or video\r\n  const handleRemoveImage = () => {\r\n    setSelectedImage(null);\r\n    setCroppedImage(null);\r\n    setShowCropper(false);\r\n  };\r\n\r\n  const handleRemoveVideo = () => {\r\n    setSelectedVideo(null);\r\n    setTrimmedVideo(null);\r\n    setShowTrimmer(false);\r\n\r\n    if (videoInputRef.current) {\r\n        videoInputRef.current.value = '';\r\n      }\r\n  };\r\n  const videoInputRef = useRef(null);\r\n  // Handle post submission\r\n  const handlePost = () => {\r\n    if (!postContent.trim() && !croppedImage && !trimmedVideo) {\r\n      setError('Post content or media is required.');\r\n      return;\r\n    }\r\n\r\n    onPostSubmit({ content: postContent, image: croppedImage, video: trimmedVideo });\r\n    setPostContent('');\r\n    setSelectedImage(null);\r\n    setCroppedImage(null);\r\n    setSelectedVideo(null);\r\n    setTrimmedVideo(null);\r\n    setError(null);\r\n  };\r\n  const handleTrimComplete = (url) => {\r\n    setTrimmedVideoUrl(url);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (trimmedVideoUrl) {\r\n      // Add logic to post the trimmed video\r\n      console.log('Trimmed video ready to be posted:', trimmedVideoUrl);\r\n    } else {\r\n      console.log('No trimmed video available.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border p-4 rounded-md shadow-sm relative\">\r\n      <textarea\r\n        className=\"w-full p-2 border border-gray-300 rounded-md mb-2\"\r\n        placeholder=\"What's on your mind?\"\r\n        value={postContent}\r\n        onChange={handleContentChange}\r\n      />\r\n\r\n      <div className=\"flex items-center space-x-4 mb-4\">\r\n        {/* Emoji button */}\r\n        <button\r\n          type=\"button\"\r\n          className=\"flex items-center space-x-1 relative\"\r\n          onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n        >\r\n          <FaSmile className=\"text-xl text-gray-500 cursor-pointer\" />\r\n        </button>\r\n\r\n        {/* Show emoji picker */}\r\n        {showEmojiPicker && (\r\n          <div className=\"absolute z-10 bottom-12 left-0\">\r\n            <EmojiPicker onEmojiClick={handleEmojiClick} />\r\n          </div>\r\n        )}\r\n\r\n        {/* Image upload */}\r\n        <label htmlFor=\"image-upload\" className=\"cursor-pointer flex items-center space-x-1\">\r\n          <FaImage className=\"text-xl text-gray-500\" />\r\n          <input\r\n            id=\"image-upload\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => handleFileChange(e, 'image')}\r\n            className=\"hidden\"\r\n            ref={imageInputRef} // Ref for image input\r\n          />\r\n        </label>\r\n\r\n        {/* Video upload */}\r\n        <label htmlFor=\"video-upload\" className=\"cursor-pointer flex items-center space-x-1\">\r\n          <FaVideo className=\"text-xl text-gray-500\" />\r\n          <input\r\n            id=\"video-upload\"\r\n            type=\"file\"\r\n            accept=\"video/*\"\r\n            onChange={(e) => handleFileChange(e, 'video')}\r\n            className=\"hidden\"\r\n            ref={videoInputRef}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Image Cropper */}\r\n      {showCropper && selectedImage && (\r\n        <ImageCropper\r\n          ref={cropperRef}\r\n          modalImage={selectedImage}\r\n          onSave={handleSaveCrop}\r\n          onClose={() => setShowCropper(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Cropped Image Preview */}\r\n      {croppedImage && (\r\n        <div className=\"mb-2 relative\">\r\n          <img src={croppedImage} alt=\"Cropped\" className=\"max-w-full h-auto rounded-md\" />\r\n          <button\r\n            className=\"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\"\r\n            onClick={handleRemoveImage}\r\n          >\r\n            <FaTimes />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Video Trimmer */}\r\n      {showTrimmer && selectedVideo && (\r\n        // <VideoTrimmer\r\n        //   videoUrl={selectedVideo}\r\n        //   onSave={handleSaveTrim}\r\n        //   onClose={handleRemoveVideo}\r\n        // />\r\n    //     <VideoTrimmerAlternative\r\n    //     videoUrl={selectedVideo}\r\n    //     onSave={handleSaveTrim}\r\n    //     onClose={handleRemoveVideo}\r\n    //   />\r\n    <div className=\"post-box\">\r\n    <h3>Create Post</h3>\r\n    <VideoTrimmer onTrimComplete={handleTrimComplete} />\r\n    <button onClick={handleSubmit}>Submit Post</button>\r\n    {trimmedVideoUrl && (\r\n      <div>\r\n        <h4>Preview Trimmed Video:</h4>\r\n        <video src={trimmedVideoUrl} controls />\r\n      </div>\r\n    )}\r\n  </div>\r\n      )}\r\n\r\n      {/* Trimmed Video Preview */}\r\n      {trimmedVideo && (\r\n        <div className=\"mb-2 relative\">\r\n          <video controls src={trimmedVideo} className=\"max-w-full h-auto rounded-md\" />\r\n          <button\r\n            className=\"absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full\"\r\n            onClick={handleRemoveVideo}\r\n          >\r\n            <FaTimes />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error message */}\r\n      {error && <p className=\"text-red-500 text-sm\">{error}</p>}\r\n\r\n      {/* Post button */}\r\n      <button\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded-md shadow hover:bg-blue-600\"\r\n        onClick={handlePost}\r\n      >\r\n        Post\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}