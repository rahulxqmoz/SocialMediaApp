{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\ChatDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages, sendMessage } from '../features/auth/chatSlice';\nimport { FaSmile, FaTimes, FaPaperclip, FaVideo } from 'react-icons/fa'; // Emoji toggle icons\nimport Picker from '@emoji-mart/react'; // Emoji picker component\nimport data from '@emoji-mart/data';\nimport MessageComponent from './MessageComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDialog = ({\n  roomName,\n  user\n}) => {\n  _s();\n  //console.log(`roomName: ${roomName}`);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const messages = useSelector(state => state.chat.messages);\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const socketRef = useRef(null); // Using useRef for socket\n  const chatRooms = useSelector(state => state.chat.rooms);\n  const currentUser = useSelector(state => state.user.user);\n  const room = useSelector(state => state.chat.rooms);\n  const messagesEndRef = useRef(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const peerConnectionRef = useRef(null);\n  const [inCall, setInCall] = useState(false);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [incomingCallerName, setIncomingCallerName] = useState(null);\n  const [offerdata, setOfferdata] = useState(null);\n  const [file, setFile] = useState(null);\n  const [messageType, setMessageType] = useState('text');\n  const [filePreview, setFilePreview] = useState(null);\n  const followers = useSelector(state => state.followers.followers);\n  const [mute, setMute] = useState(false);\n  let iceCandidatesBuffer = [];\n  // console.log(`roomsssss${room}`)\n  // console.log(messages)\n  // console.log(user.id,currentUser.id)\n\n  const startVideoCall = async () => {\n    if (inCall) {\n      console.log(\"Already in a call\");\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setLocalStream(stream);\n      setInCall(true);\n      if (!peerConnectionRef.current) {\n        peerConnectionRef.current = new RTCPeerConnection({\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        });\n\n        // Add local stream tracks to peer connection\n        stream.getTracks().forEach(track => {\n          peerConnectionRef.current.addTrack(track, stream);\n        });\n        peerConnectionRef.current.onicecandidate = event => {\n          if (event.candidate) {\n            socketRef.current.send(JSON.stringify({\n              candidate: event.candidate\n            }));\n          }\n        };\n        peerConnectionRef.current.ontrack = event => {\n          const [remoteStream] = event.streams;\n          setRemoteStream(remoteStream);\n        };\n      }\n      const offer = await peerConnectionRef.current.createOffer();\n      await peerConnectionRef.current.setLocalDescription(offer);\n      // Send offer to the other user\n      socketRef.current.send(JSON.stringify({\n        type: 'video-call-offer',\n        from: currentUser.id,\n        to: user.id !== currentUser.id ? user.id : currentUser.id,\n        offer: offer\n      }));\n      console.log(`Initiating call from: ${currentUser.id} to: ${user.id}`);\n    } catch (error) {\n      console.error('Error accessing media devices.', error);\n    }\n  };\n  const markMessagesAsReads = messageId => {\n    const message = messages.find(msg => msg.id === messageId);\n    if (message && !message.read_by.includes(currentUser.id)) {\n      //message.read_by.push(currentUser.id);\n      if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n        socketRef.current.send(JSON.stringify({\n          type: 'message_read',\n          message_id: messageId,\n          user_id: currentUser.id\n        }));\n      }\n    }\n  };\n  const toggleMute = () => {\n    setMute(!mute);\n    if (localStream) {\n      localStream.getAudioTracks()[0].enabled = !mute;\n    }\n  };\n  const acceptCall = async data => {\n    //setIncomingCallerName(data.to);\n    console.log(`datafrom:${data.from}`);\n    console.log(`data.offer:${data.offer.sdp}`);\n    console.log(`incomingCallerName:${incomingCallerName}`);\n    setIncomingCall(false);\n    try {\n      // await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\n      //   type: 'offer',\n      //   sdp: data.offer.sdp, // Use the received offer's sdp\n      //   }));\n      //   const answer = await peerConnectionRef.current.createAnswer();\n      //   await peerConnectionRef.current.setLocalDescription(answer);\n\n      // Send answer back to the caller\n      if (!peerConnectionRef.current) {\n        peerConnectionRef.current = new RTCPeerConnection({\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        });\n\n        // Add local stream tracks to peer connection\n        if (localStream) {\n          localStream.getTracks().forEach(track => {\n            peerConnectionRef.current.addTrack(track, localStream);\n          });\n        }\n        peerConnectionRef.current.onicecandidate = event => {\n          if (event.candidate) {\n            socketRef.current.send(JSON.stringify({\n              candidate: event.candidate\n            }));\n          }\n        };\n        peerConnectionRef.current.ontrack = event => {\n          const [remoteStream] = event.streams;\n          setRemoteStream(remoteStream);\n        };\n      }\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n      const answer = await peerConnectionRef.current.createAnswer();\n      await peerConnectionRef.current.setLocalDescription(answer);\n      socketRef.current.send(JSON.stringify({\n        type: 'video-call-answer',\n        answer: answer,\n        offer: data.offer,\n        to: data.to\n      }));\n    } catch (error) {\n      console.error(\"Error accepting call:\", error);\n    }\n  };\n  const rejectCall = from => {\n    setIncomingCall(false);\n    socketRef.current.send(JSON.stringify({\n      type: 'video-call-rejected',\n      from: currentUser.id,\n      to: from\n    }));\n  };\n  const endCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (peerConnectionRef.current) {\n      peerConnectionRef.current.close();\n      peerConnectionRef.current = null;\n    }\n    setLocalStream(null);\n    setRemoteStream(null);\n    setInCall(false);\n  };\n  useEffect(() => {\n    if (roomName && token) {\n      dispatch({\n        type: 'chat/resetMessages'\n      });\n      // Step 1: Fetch all chat rooms to check if the room exists\n      dispatch(fetchChatRooms({\n        token\n      })).then(action => {\n        const roomExists = chatRooms.some(room => room.name === roomName);\n        if (roomExists) {\n          // Room exists, fetch messages for this room\n          dispatch(fetchMessages({\n            roomName,\n            token\n          }));\n        } else {\n          // Room doesn't exist, create it first\n          dispatch(createChatRoom({\n            roomName,\n            participants: [user.id, currentUser.id],\n            token\n          })).then(() => {\n            // After creating the room, fetch the messages\n            dispatch(fetchMessages({\n              roomName,\n              token\n            }));\n          });\n        }\n      });\n    }\n    // WebSocket connection setup\n    socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\n    socketRef.current.onopen = () => {\n      console.log(\"WebSocket connection opened\");\n    };\n    let iceCandidatesBuffer = [];\n    socketRef.current.onmessage = async e => {\n      const data = JSON.parse(e.data);\n      console.log(\"WebSocket data received:\", data);\n      console.log(\"Current messages in state:\", messages);\n      if (!peerConnectionRef.current) {\n        peerConnectionRef.current = new RTCPeerConnection();\n        if (localStream) {\n          localStream.getTracks().forEach(track => {\n            peerConnectionRef.current.addTrack(track, localStream);\n          });\n        }\n      }\n      if (data.type === 'video-call-offer') {\n        if (data.to === currentUser.id) {\n          setOfferdata(data);\n          setIncomingCall(true);\n          console.log(`data:${data}`);\n          console.log(`IncomingCallerName:${data.from}`);\n          console.log(`to:${data.to}`);\n          setIncomingCallerName(data.from);\n          console.log(`Incoming call from: ${data.from}`);\n        }\n      } else if (data.type === 'video-call-answer') {\n        //     if (peerConnectionRef.current.signalingState === 'stable') {\n        //       await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\n        //           type: 'answer',\n        //           sdp: data.answer.sdp,\n        //       }));\n        //   } else {\n        //       console.log('Peer connection is not in a stable state. Cannot set remote description.');\n        //   }\n        //   // Process buffered ICE candidates\n        //   iceCandidatesBuffer.forEach(candidate => {\n        //       peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(candidate)).catch(error => {\n        //           console.error('Error adding received ICE candidate', error);\n        //       });\n        //   });\n        //   iceCandidatesBuffer = [];  // Clear buffer after processing\n        await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n      } else if (data.candidate) {\n        if (incomingCall && peerConnectionRef.current.remoteDescription) {\n          await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate)).catch(error => {\n            console.error('Error adding received ICE candidate', error);\n          });\n        } else {\n          iceCandidatesBuffer.push(data.candidate); // Buffer candidate until remote description is set\n        }\n      } else if (data.type === 'message_read') {\n        console.log(`messgae read entered:${data.message_id}`);\n        console.log(\"Current messages in state message_read:\", messages);\n        // Update the specific message's read_by list\n        const updatedMessages = messages.map(msg => {\n          if (msg.id === data.message_id) {\n            return {\n              ...msg,\n              // Directly use the updated 'read_by' array from the WebSocket event\n              read_by: data.read_by\n            };\n          }\n          return msg;\n        });\n\n        // Dispatch the action to update the messages array in the Redux store\n        dispatch({\n          type: 'chat/updateMessages',\n          payload: {\n            message_id: data.message_id,\n            // Identify the specific message\n            read_by: data.read_by // Provide the updated read_by array\n          }\n        });\n      } else if (data.message && data.sender) {\n        const existingMessage = messages.find(msg => msg.id === data.message_id);\n        if (!existingMessage) {\n          dispatch(addMessage({\n            sender: data.sender,\n            message: data.message,\n            message_type: data.message_type,\n            file: data.file,\n            timestamp: data.timestamp || new Date().toISOString(),\n            id: data.message_id,\n            // Include the message ID\n            read_by: data.read_by || []\n          }));\n        }\n      } else if (data.file && data.sender) {\n        const existingMessage = messages.find(msg => msg.id === data.message_id);\n        if (!existingMessage) {\n          dispatch(addMessage({\n            sender: data.sender,\n            message: data.message,\n            message_type: data.message_type,\n            file: data.file,\n            timestamp: data.timestamp || new Date().toISOString(),\n            id: data.message_id,\n            // Include the message ID\n            read_by: data.read_by || []\n          }));\n        }\n      }\n    };\n    socketRef.current.onclose = event => {\n      console.log('WebSocket closed. Attempting to reconnect...');\n      console.error(\"WebSocket closed unexpectedly:\", event.reason);\n    };\n    return () => {\n      socketRef.current.close();\n    };\n  }, [roomName, token, dispatch]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    messages.forEach(msg => {\n      if (msg.sender !== currentUser.id && !msg.read_by.includes(currentUser.id)) {\n        console.log(`entered markMeaa`);\n        markMessagesAsReads(msg.id);\n      }\n    });\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      try {\n        const result = await dispatch(sendMessage({\n          roomName,\n          message: messageInput,\n          messageType,\n          file,\n          token\n        })).unwrap();\n        console.log(`result:${result}`);\n        console.log(`result id:${result.id}`);\n        socketRef.current.send(JSON.stringify({\n          type: 'message_sent',\n          sender: currentUser.id,\n          recipient_id: user.id,\n          message_id: result.id,\n          timestamp: new Date().toISOString()\n        }));\n        setMessageInput('');\n        setFile(null);\n        setMessageType('text');\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n\n    // Format the date (day/month/year)\n    const formattedDate = date.toLocaleDateString([], {\n      day: '2-digit',\n      month: 'short',\n      // e.g., 'Jan', 'Feb'\n      year: 'numeric'\n    });\n\n    // Format the time (hour:minute AM/PM)\n    const formattedTime = date.toLocaleTimeString([], {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n    return `${formattedDate}, ${formattedTime}`;\n  };\n\n  // const formatTimestamp = (timestamp) => {\n  //     const date = new Date(timestamp);\n  //     return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true });\n  // };\n  const handleAddEmoji = emoji => {\n    setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\n  };\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      const fileType = selectedFile.type;\n      const maxVideoSize = 100 * 1024 * 1024;\n      // Set message type based on the file type\n      if (fileType.startsWith('image/')) {\n        setMessageType('image');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the image\n      } else if (fileType === 'image/gif') {\n        setMessageType('gif');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the GIF\n      } else if (fileType.startsWith('video/')) {\n        if (selectedFile.size > maxVideoSize) {\n          alert('Video file size must be smaller than 100MB.');\n          return;\n        }\n        setMessageType('video');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the video\n      } else {\n        setMessageType('file');\n        setFilePreview(null); // No preview for other file types\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic || 'https://via.placeholder.com/800x500',\n        alt: user.username,\n        className: \"w-10 h-10 rounded-full mr-3 object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg font-semibold\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-sm\",\n        children: user.is_online ? 'Online' : 'Offline'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startVideoCall,\n        className: \"ml-auto text-white bg-green-500 rounded-full p-2\",\n        children: /*#__PURE__*/_jsxDEV(FaVideo, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this), filePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center p-4 border-b\",\n      children: [messageType === 'image' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: filePreview,\n        alt: \"Preview\",\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 25\n      }, this), messageType === 'video' && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: filePreview,\n        controls: true,\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 25\n      }, this), messageType === 'gif' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: filePreview,\n        alt: \"Preview\",\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MessageComponent, {\n      messages: messages,\n      currentUser: currentUser,\n      user: user,\n      formatTimestamp: formatTimestamp,\n      messagesEndRef: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-2 border-t bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEmojiPicker(!showEmojiPicker),\n        className: \"text-gray-500 hover:text-gray-800 mr-2\",\n        children: showEmojiPicker ? /*#__PURE__*/_jsxDEV(FaTimes, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(FaSmile, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 16\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-12 left-0 z-10\",\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          data: data,\n          onEmojiSelect: handleAddEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ml-2\",\n        children: [/*#__PURE__*/_jsxDEV(FaPaperclip, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"hidden\",\n          accept: \"image/*,video/*,.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this), incomingCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [incomingCallerName, \" is calling...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => acceptCall(offerdata),\n        className: \"bg-green-500 p-2 rounded-lg\",\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIncomingCall(false),\n        className: \"bg-red-500 p-2 rounded-lg\",\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 17\n    }, this), inCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-call\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Call in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: video => {\n          if (video) video.srcObject = localStream;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: video => {\n          if (video) video.srcObject = remoteStream;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endCall,\n        children: \"End Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 17\n    }, this), inCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"call-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleMute(),\n        children: \"Mute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endCall,\n        children: \"Hang Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatDialog, \"BaHmtnxRLCQylwUVGDa4JYrLbvA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ChatDialog;\nexport default ChatDialog;\nvar _c;\n$RefreshReg$(_c, \"ChatDialog\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useDispatch","useSelector","addMessage","createChatRoom","fetchChatRooms","fetchMessages","sendMessage","FaSmile","FaTimes","FaPaperclip","FaVideo","Picker","data","MessageComponent","jsxDEV","_jsxDEV","ChatDialog","roomName","user","_s","dispatch","token","state","auth","messages","chat","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","socketRef","chatRooms","rooms","currentUser","room","messagesEndRef","localStream","setLocalStream","remoteStream","setRemoteStream","peerConnectionRef","inCall","setInCall","incomingCall","setIncomingCall","incomingCallerName","setIncomingCallerName","offerdata","setOfferdata","file","setFile","messageType","setMessageType","filePreview","setFilePreview","followers","mute","setMute","iceCandidatesBuffer","startVideoCall","console","log","stream","navigator","mediaDevices","getUserMedia","video","audio","current","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","send","JSON","stringify","ontrack","streams","offer","createOffer","setLocalDescription","type","from","id","to","error","markMessagesAsReads","messageId","message","find","msg","read_by","includes","readyState","WebSocket","OPEN","message_id","user_id","toggleMute","getAudioTracks","enabled","acceptCall","sdp","setRemoteDescription","RTCSessionDescription","answer","createAnswer","rejectCall","endCall","stop","close","then","action","roomExists","some","name","participants","onopen","onmessage","e","parse","remoteDescription","addIceCandidate","RTCIceCandidate","catch","push","updatedMessages","map","payload","sender","existingMessage","message_type","timestamp","Date","toISOString","onclose","reason","_messagesEndRef$curre","scrollIntoView","behavior","handleSendMessage","result","unwrap","recipient_id","err","formatTimestamp","date","formattedDate","toLocaleDateString","day","month","year","formattedTime","toLocaleTimeString","hour","minute","hour12","handleAddEmoji","emoji","prevInput","native","handleFileChange","selectedFile","target","files","fileType","maxVideoSize","startsWith","URL","createObjectURL","size","alert","className","children","src","profile_pic","alt","username","fileName","_jsxFileName","lineNumber","columnNumber","is_online","onClick","controls","onEmojiSelect","value","onChange","onKeyPress","key","placeholder","accept","autoPlay","playsInline","ref","srcObject","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/ChatDialog.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages,sendMessage } from '../features/auth/chatSlice';\r\nimport { FaSmile, FaTimes,FaPaperclip,FaVideo  } from 'react-icons/fa'; // Emoji toggle icons\r\nimport Picker from '@emoji-mart/react'; // Emoji picker component\r\nimport data from '@emoji-mart/data';\r\nimport MessageComponent from './MessageComponent';\r\nconst ChatDialog = ({ roomName, user }) => {\r\n    //console.log(`roomName: ${roomName}`);\r\n    const dispatch = useDispatch();\r\n    const token = useSelector((state) => state.auth.token);\r\n    const messages = useSelector((state) => state.chat.messages);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const socketRef = useRef(null); // Using useRef for socket\r\n    const chatRooms = useSelector((state) => state.chat.rooms);\r\n    const currentUser = useSelector((state) => state.user.user);\r\n    const room = useSelector((state)=>state.chat.rooms)\r\n    const messagesEndRef = useRef(null);\r\n    const [localStream, setLocalStream] = useState(null);\r\n    const [remoteStream, setRemoteStream] = useState(null);\r\n    const peerConnectionRef = useRef(null);\r\n    const [inCall, setInCall] = useState(false);\r\n    const [incomingCall, setIncomingCall] = useState(false);\r\n    const [incomingCallerName, setIncomingCallerName] = useState(null);\r\n    const [offerdata, setOfferdata] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n    const [messageType, setMessageType] = useState('text');\r\n    const [filePreview, setFilePreview] = useState(null);\r\n    const followers = useSelector((state) => state.followers.followers);\r\n    const [mute, setMute] = useState(false);\r\n    let iceCandidatesBuffer = [];\r\n    // console.log(`roomsssss${room}`)\r\n    // console.log(messages)\r\n    // console.log(user.id,currentUser.id)\r\n\r\n    const startVideoCall = async () => {\r\n      if (inCall) {\r\n          console.log(\"Already in a call\");\r\n          return;\r\n      }\r\n\r\n      try {\r\n          const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n          setLocalStream(stream);\r\n          setInCall(true);\r\n          if (!peerConnectionRef.current){\r\n          peerConnectionRef.current = new RTCPeerConnection({\r\n            iceServers: [\r\n                {\r\n                    urls: 'stun:stun.l.google.com:19302',\r\n                },\r\n            ],\r\n        });\r\n\r\n          // Add local stream tracks to peer connection\r\n          stream.getTracks().forEach(track => {\r\n              peerConnectionRef.current.addTrack(track, stream);\r\n          });\r\n\r\n          peerConnectionRef.current.onicecandidate = (event) => {\r\n            if (event.candidate) {\r\n                socketRef.current.send(JSON.stringify({ candidate: event.candidate }));\r\n            }\r\n        };\r\n\r\n          peerConnectionRef.current.ontrack = (event) => {\r\n              const [remoteStream] = event.streams;\r\n              setRemoteStream(remoteStream);\r\n          };\r\n\r\n         \r\n\r\n          \r\n        }\r\n          const offer = await peerConnectionRef.current.createOffer();\r\n          await peerConnectionRef.current.setLocalDescription(offer);\r\n          // Send offer to the other user\r\n          socketRef.current.send(JSON.stringify({\r\n              type: 'video-call-offer',\r\n              from: currentUser.id,\r\n              to: user.id !== currentUser.id ? user.id : currentUser.id,\r\n              offer: offer,\r\n          }));\r\n          console.log(`Initiating call from: ${currentUser.id} to: ${user.id}`);\r\n\r\n\r\n         \r\n       \r\n      } catch (error) {\r\n          console.error('Error accessing media devices.', error);\r\n      }\r\n  };\r\n  const markMessagesAsReads = (messageId) => {\r\n\r\n    const message = messages.find(msg => msg.id === messageId);\r\n    if (message && !message.read_by.includes(currentUser.id)) {\r\n        //message.read_by.push(currentUser.id);\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n            socketRef.current.send(JSON.stringify({\r\n                type: 'message_read',\r\n                message_id: messageId,\r\n                user_id: currentUser.id,\r\n            }));\r\n          \r\n        }\r\n    }\r\n};\r\nconst toggleMute = () => {\r\n    setMute(!mute);\r\n    if (localStream) {\r\n        localStream.getAudioTracks()[0].enabled = !mute;\r\n    }\r\n};\r\n  const acceptCall = async (data) => {\r\n    //setIncomingCallerName(data.to);\r\n    console.log(`datafrom:${data.from}`)\r\n    console.log(`data.offer:${data.offer.sdp}`)\r\n    console.log(`incomingCallerName:${incomingCallerName}`)\r\n    setIncomingCall(false);\r\n    try {\r\n        \r\n        // await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\r\n        //   type: 'offer',\r\n        //   sdp: data.offer.sdp, // Use the received offer's sdp\r\n        //   }));\r\n        //   const answer = await peerConnectionRef.current.createAnswer();\r\n        //   await peerConnectionRef.current.setLocalDescription(answer);\r\n\r\n          // Send answer back to the caller\r\n          if (!peerConnectionRef.current) {\r\n            peerConnectionRef.current = new RTCPeerConnection({\r\n                iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\r\n            });\r\n\r\n            // Add local stream tracks to peer connection\r\n            if (localStream) {\r\n                localStream.getTracks().forEach(track => {\r\n                    peerConnectionRef.current.addTrack(track, localStream);\r\n                });\r\n            }\r\n\r\n            peerConnectionRef.current.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socketRef.current.send(JSON.stringify({ candidate: event.candidate }));\r\n                }\r\n            };\r\n\r\n            peerConnectionRef.current.ontrack = (event) => {\r\n                const [remoteStream] = event.streams;\r\n                setRemoteStream(remoteStream);\r\n            };\r\n        }\r\n        await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n        const answer = await peerConnectionRef.current.createAnswer();\r\n        await peerConnectionRef.current.setLocalDescription(answer);\r\n\r\n          socketRef.current.send(JSON.stringify({\r\n              type: 'video-call-answer',\r\n              answer: answer,\r\n              offer:data.offer,\r\n              to: data.to\r\n          }));\r\n       \r\n          } catch (error) {\r\n              console.error(\"Error accepting call:\", error);\r\n          }\r\n};\r\n\r\n  \r\n    const rejectCall = (from) => {\r\n      setIncomingCall(false);\r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'video-call-rejected',\r\n        from: currentUser.id,\r\n        to: from,\r\n      }));\r\n    };\r\n  \r\n    \r\n    const endCall = () => {\r\n      if (localStream) {\r\n          localStream.getTracks().forEach(track => track.stop());\r\n      }\r\n\r\n      if (peerConnectionRef.current) {\r\n          peerConnectionRef.current.close();\r\n          peerConnectionRef.current = null;\r\n      }\r\n\r\n      setLocalStream(null);\r\n      setRemoteStream(null);\r\n      setInCall(false);\r\n      \r\n  };\r\n    useEffect(() => {\r\n        if (roomName && token) {\r\n\r\n            dispatch({ type: 'chat/resetMessages' });\r\n            // Step 1: Fetch all chat rooms to check if the room exists\r\n            dispatch(fetchChatRooms({ token })).then((action) => {\r\n                const roomExists = chatRooms.some(room => room.name === roomName);\r\n\r\n                if (roomExists) {\r\n                    // Room exists, fetch messages for this room\r\n                    dispatch(fetchMessages({ roomName, token }));\r\n                } else {\r\n                    // Room doesn't exist, create it first\r\n                    dispatch(createChatRoom({ roomName,participants:[user.id,currentUser.id], token }))\r\n                        .then(() => {\r\n                            // After creating the room, fetch the messages\r\n                            dispatch(fetchMessages({ roomName, token }));\r\n                        });\r\n                }\r\n            });\r\n        }\r\n       // WebSocket connection setup\r\n        socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\r\n\r\n        socketRef.current.onopen = () => {\r\n            console.log(\"WebSocket connection opened\");\r\n        };\r\n        \r\n        let iceCandidatesBuffer = [];\r\n        socketRef.current.onmessage = async (e) => {\r\n          const data = JSON.parse(e.data);\r\n          console.log(\"WebSocket data received:\", data);\r\n          console.log(\"Current messages in state:\", messages);\r\n\r\n          if (!peerConnectionRef.current) {\r\n            peerConnectionRef.current = new RTCPeerConnection();\r\n\r\n            if (localStream) {\r\n                localStream.getTracks().forEach(track => {\r\n                    peerConnectionRef.current.addTrack(track, localStream);\r\n                });\r\n            }\r\n        }\r\n\r\n        if (data.type === 'video-call-offer') {\r\n          if (data.to === currentUser.id) {\r\n              setOfferdata(data);\r\n              setIncomingCall(true);\r\n              console.log(`data:${data}`)\r\n              console.log(`IncomingCallerName:${data.from}`)\r\n              console.log(`to:${data.to}`)\r\n              setIncomingCallerName(data.from);\r\n              console.log(`Incoming call from: ${data.from}`);\r\n          }\r\n        } else if (data.type === 'video-call-answer') {\r\n            //     if (peerConnectionRef.current.signalingState === 'stable') {\r\n            //       await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\r\n            //           type: 'answer',\r\n            //           sdp: data.answer.sdp,\r\n            //       }));\r\n            //   } else {\r\n            //       console.log('Peer connection is not in a stable state. Cannot set remote description.');\r\n            //   }\r\n            //   // Process buffered ICE candidates\r\n            //   iceCandidatesBuffer.forEach(candidate => {\r\n            //       peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(candidate)).catch(error => {\r\n            //           console.error('Error adding received ICE candidate', error);\r\n            //       });\r\n            //   });\r\n            //   iceCandidatesBuffer = [];  // Clear buffer after processing\r\n            await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n            } else if (data.candidate) {\r\n              if (incomingCall && peerConnectionRef.current.remoteDescription) {\r\n                await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate)).catch(error => {\r\n                    console.error('Error adding received ICE candidate', error);\r\n                });\r\n                } else {\r\n                    iceCandidatesBuffer.push(data.candidate); // Buffer candidate until remote description is set\r\n                }\r\n            }else if (data.type === 'message_read') {\r\n                console.log(`messgae read entered:${data.message_id}`)\r\n                console.log(\"Current messages in state message_read:\", messages);\r\n                // Update the specific message's read_by list\r\n                const updatedMessages = messages.map((msg) => {\r\n                    if (msg.id === data.message_id) {\r\n                        return {\r\n                            ...msg,\r\n                            // Directly use the updated 'read_by' array from the WebSocket event\r\n                            read_by: data.read_by, \r\n                        };\r\n                    }\r\n                    return msg;\r\n                });\r\n            \r\n                // Dispatch the action to update the messages array in the Redux store\r\n                dispatch({\r\n                    type: 'chat/updateMessages',\r\n                    payload: {\r\n                        message_id: data.message_id,  // Identify the specific message\r\n                        read_by: data.read_by,        // Provide the updated read_by array\r\n                    },\r\n                });\r\n                \r\n            } else if (data.message && data.sender) {\r\n                const existingMessage = messages.find(msg => msg.id === data.message_id);\r\n                if (!existingMessage) {\r\n              dispatch(addMessage({\r\n                  sender: data.sender,\r\n                  message: data.message,\r\n                  message_type: data.message_type,\r\n                  file: data.file,\r\n                  timestamp: data.timestamp || new Date().toISOString(),\r\n                  id: data.message_id,  // Include the message ID\r\n                  read_by: data.read_by || []\r\n              }));\r\n            }\r\n          }else if (data.file && data.sender) {\r\n            const existingMessage = messages.find(msg => msg.id === data.message_id);\r\n            if (!existingMessage) {\r\n            dispatch(addMessage({\r\n                sender: data.sender,\r\n                message: data.message,\r\n                message_type: data.message_type,\r\n                file: data.file,\r\n                timestamp: data.timestamp || new Date().toISOString(),\r\n                id: data.message_id,  // Include the message ID\r\n                read_by: data.read_by || []\r\n            }));\r\n        }\r\n        }\r\n      };\r\n\r\n        \r\n        socketRef.current.onclose = (event) => {\r\n            console.log('WebSocket closed. Attempting to reconnect...');\r\n            console.error(\"WebSocket closed unexpectedly:\", event.reason);\r\n        };\r\n        \r\n\r\n        return () => {\r\n            socketRef.current.close();\r\n        };\r\n    }, [roomName, token, dispatch]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        messages.forEach(msg => {\r\n            if (msg.sender !== currentUser.id && !msg.read_by.includes(currentUser.id)) {\r\n                console.log(`entered markMeaa`)\r\n                markMessagesAsReads(msg.id);\r\n                \r\n            }\r\n        });\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = async  () => {\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n        try {\r\n            const result = await dispatch(sendMessage({ roomName, message:messageInput, messageType, file, token })).unwrap();\r\n            console.log(`result:${result}`)\r\n            console.log(`result id:${result.id}`)\r\n            socketRef.current.send(JSON.stringify({\r\n                type: 'message_sent',\r\n                sender: currentUser.id,\r\n                recipient_id: user.id, \r\n                message_id: result.id, \r\n                timestamp: new Date().toISOString(),\r\n              }));\r\n            setMessageInput('');\r\n            setFile(null);\r\n            setMessageType('text'); \r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        }\r\n     \r\n    };\r\n\r\n    const formatTimestamp = (timestamp) => { \r\n        const date = new Date(timestamp);\r\n        \r\n        // Format the date (day/month/year)\r\n        const formattedDate = date.toLocaleDateString([], {\r\n            day: '2-digit', \r\n            month: 'short',  // e.g., 'Jan', 'Feb'\r\n            year: 'numeric'\r\n        });\r\n    \r\n        // Format the time (hour:minute AM/PM)\r\n        const formattedTime = date.toLocaleTimeString([], {\r\n            hour: 'numeric', \r\n            minute: '2-digit', \r\n            hour12: true\r\n        });\r\n    \r\n        return `${formattedDate}, ${formattedTime}`;\r\n    };\r\n    \r\n   \r\n    // const formatTimestamp = (timestamp) => {\r\n    //     const date = new Date(timestamp);\r\n    //     return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true });\r\n    // };\r\n    const handleAddEmoji = (emoji) => {\r\n      setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\r\n  };\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n        setFile(selectedFile);\r\n        const fileType = selectedFile.type;\r\n        const maxVideoSize = 100 * 1024 * 1024; \r\n        // Set message type based on the file type\r\n        if (fileType.startsWith('image/')) {\r\n            setMessageType('image');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the image\r\n        } else if (fileType === 'image/gif') {\r\n            setMessageType('gif');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the GIF\r\n        } else if (fileType.startsWith('video/')) {\r\n            if (selectedFile.size > maxVideoSize) {\r\n                alert('Video file size must be smaller than 100MB.');\r\n                return; \r\n            }\r\n            setMessageType('video');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the video\r\n        } else {\r\n            setMessageType('file');\r\n            setFilePreview(null); // No preview for other file types\r\n        }\r\n    }\r\n};\r\n  \r\n    return (\r\n        <div className=\"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \">\r\n        {/* Header */}\r\n        <div className=\"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 rounded-md\">\r\n          <img\r\n            src={user.profile_pic || 'https://via.placeholder.com/800x500'}\r\n            alt={user.username}\r\n            className=\"w-10 h-10 rounded-full mr-3 object-cover\"\r\n          />\r\n          <span className=\"text-lg font-semibold\">{user.username}</span>\r\n          <div className={`ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`}></div>\r\n                <span className=\"ml-1 text-sm\">\r\n                    {user.is_online ? 'Online' : 'Offline'}\r\n                </span>\r\n                <button \r\n                  onClick={startVideoCall} \r\n                  className=\"ml-auto text-white bg-green-500 rounded-full p-2\"\r\n                >\r\n                 <FaVideo size={20}></FaVideo   >\r\n                </button>\r\n        </div>\r\n\r\n            {/* File Preview Section */}\r\n            {filePreview && (\r\n                <div className=\"flex items-center justify-center p-4 border-b\">\r\n                    {messageType === 'image' && (\r\n                        <img src={filePreview} alt=\"Preview\" className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                    {messageType === 'video' && (\r\n                        <video src={filePreview} controls className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                    {messageType === 'gif' && (\r\n                        <img src={filePreview} alt=\"Preview\" className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                </div>\r\n            )}\r\n        <MessageComponent messages={messages} currentUser={currentUser} user={user} formatTimestamp={formatTimestamp} messagesEndRef={messagesEndRef} />\r\n        {/* Message input */}\r\n        <div className=\"flex items-center p-2 border-t bg-white\">\r\n               {/* Emoji Picker Button */}\r\n               <button\r\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                    className=\"text-gray-500 hover:text-gray-800 mr-2\"\r\n                >\r\n                    {showEmojiPicker ? <FaTimes size={20} /> : <FaSmile size={20} />}\r\n                </button>\r\n\r\n                {showEmojiPicker && (\r\n                    <div className=\"absolute bottom-12 left-0 z-10\">\r\n                        <Picker data={data} onEmojiSelect={handleAddEmoji} />\r\n                    </div>\r\n                )}\r\n                \r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            value={messageInput}\r\n            onChange={(e) => setMessageInput(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <label className=\"ml-2\">\r\n                    <FaPaperclip size={20} />\r\n                    <input type=\"file\" onChange={handleFileChange} className=\"hidden\" accept=\"image/*,video/*,.gif\" />\r\n            </label>\r\n            \r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n\r\n        {incomingCall && (\r\n                <div className=\"fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white p-4 rounded-lg\">\r\n                    <p>{incomingCallerName} is calling...</p>\r\n                    <button onClick={() => acceptCall(offerdata)} className=\"bg-green-500 p-2 rounded-lg\">Accept</button>\r\n                    <button onClick={() => setIncomingCall(false)} className=\"bg-red-500 p-2 rounded-lg\">Decline</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Video Call Stream */}\r\n            {inCall && (\r\n                <div className=\"video-call\">\r\n                    <h2>Video Call in Progress</h2>\r\n                    <video autoPlay playsInline ref={(video) => { if (video) video.srcObject = localStream; }} />\r\n                    <video autoPlay playsInline ref={(video) => { if (video) video.srcObject = remoteStream; }} />\r\n                    <button onClick={endCall}>End Call</button>\r\n                </div>\r\n            )}\r\n             {/* Call Controls */}\r\n        {inCall && (\r\n            <div className=\"call-controls\">\r\n                <button onClick={() => toggleMute()}>Mute</button>\r\n                <button onClick={endCall}>Hang Up</button>\r\n            </div>\r\n        )}\r\n        \r\n\r\n      </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default ChatDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}