{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\VideoTrimmer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport videojs from 'video.js';\nimport { FFmpeg } from '@ffmpeg/ffmpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ffmpeg = new FFmpeg();\nconst VideoTrimmer = ({\n  videoUrl,\n  onSave,\n  onClose\n}) => {\n  _s();\n  const playerRef = useRef(null);\n  const [videoPlayer, setVideoPlayer] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [trimmedVideoUrl, setTrimmedVideoUrl] = useState(null);\n  const [startTrim, setStartTrim] = useState(0);\n  const [endTrim, setEndTrim] = useState(0);\n  useEffect(() => {\n    if (playerRef.current && !videoPlayer) {\n      const player = videojs(playerRef.current, {\n        controls: true,\n        autoplay: false,\n        preload: 'auto'\n      });\n      setVideoPlayer(player);\n    }\n    return () => {\n      if (videoPlayer) {\n        videoPlayer.dispose();\n      }\n    };\n  }, [playerRef, videoPlayer]);\n  const handleTrim = async () => {\n    setIsProcessing(true);\n    try {\n      if (!ffmpeg.isLoaded()) {\n        await ffmpeg.load(); // Ensure FFmpeg is loaded\n      }\n\n      // Fetch the video file from URL\n      const response = await fetch(videoUrl);\n      const videoBuffer = await response.arrayBuffer();\n      ffmpeg.FS('writeFile', 'input.mp4', new Uint8Array(videoBuffer));\n\n      // Run FFmpeg command to trim the video using startTrim and endTrim\n      await ffmpeg.run('-i', 'input.mp4', '-ss', startTrim,\n      // Start time for trimming\n      '-to', endTrim,\n      // End time for trimming\n      '-c', 'copy',\n      // Copy codec to avoid re-encoding\n      'output.mp4');\n\n      // Retrieve the trimmed video file\n      const trimmedData = ffmpeg.FS('readFile', 'output.mp4');\n      const trimmedBlob = new Blob([trimmedData.buffer], {\n        type: 'video/mp4'\n      });\n      const trimmedUrl = URL.createObjectURL(trimmedBlob);\n      setTrimmedVideoUrl(trimmedUrl); // Set the trimmed video URL\n      onSave(trimmedUrl); // Pass the trimmed video URL to parent component\n    } catch (error) {\n      console.error('Error trimming video:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleSeek = event => {\n    const currentTime = event.target.currentTime;\n    setStartTrim(currentTime);\n  };\n  const handleEndSeek = event => {\n    const currentTime = event.target.currentTime;\n    setEndTrim(currentTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: playerRef,\n      className: \"video-js\",\n      src: trimmedVideoUrl || videoUrl,\n      controls: true,\n      onSeeked: handleSeek,\n      onEnded: handleEndSeek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTrim,\n      disabled: isProcessing,\n      className: \"absolute bottom-4 right-4 bg-blue-500 text-white px-4 py-2 rounded-md shadow-lg hover:bg-blue-600\",\n      children: isProcessing ? 'Processing...' : 'Trim Video'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: \"absolute top-4 right-4 bg-gray-500 text-white px-4 py-2 rounded-md shadow-lg hover:bg-gray-600\",\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoTrimmer, \"Cmdmn9vCtErd3GuN7dIe1SbWCMc=\");\n_c = VideoTrimmer;\nexport default VideoTrimmer;\nvar _c;\n$RefreshReg$(_c, \"VideoTrimmer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","videojs","FFmpeg","jsxDEV","_jsxDEV","ffmpeg","VideoTrimmer","videoUrl","onSave","onClose","_s","playerRef","videoPlayer","setVideoPlayer","isProcessing","setIsProcessing","trimmedVideoUrl","setTrimmedVideoUrl","startTrim","setStartTrim","endTrim","setEndTrim","current","player","controls","autoplay","preload","dispose","handleTrim","isLoaded","load","response","fetch","videoBuffer","arrayBuffer","FS","Uint8Array","run","trimmedData","trimmedBlob","Blob","buffer","type","trimmedUrl","URL","createObjectURL","error","console","handleSeek","event","currentTime","target","handleEndSeek","className","children","ref","src","onSeeked","onEnded","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/VideoTrimmer.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport videojs from 'video.js';\r\nimport { FFmpeg } from '@ffmpeg/ffmpeg';\r\n\r\nconst ffmpeg = new FFmpeg();\r\n\r\nconst VideoTrimmer = ({ videoUrl, onSave, onClose }) => {\r\n  const playerRef = useRef(null);\r\n  const [videoPlayer, setVideoPlayer] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [trimmedVideoUrl, setTrimmedVideoUrl] = useState(null);\r\n  const [startTrim, setStartTrim] = useState(0);\r\n  const [endTrim, setEndTrim] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (playerRef.current && !videoPlayer) {\r\n      const player = videojs(playerRef.current, {\r\n        controls: true,\r\n        autoplay: false,\r\n        preload: 'auto',\r\n      });\r\n      setVideoPlayer(player);\r\n    }\r\n\r\n    return () => {\r\n      if (videoPlayer) {\r\n        videoPlayer.dispose();\r\n      }\r\n    };\r\n  }, [playerRef, videoPlayer]);\r\n\r\n  const handleTrim = async () => {\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      if (!ffmpeg.isLoaded()) {\r\n        await ffmpeg.load(); // Ensure FFmpeg is loaded\r\n      }\r\n\r\n      // Fetch the video file from URL\r\n      const response = await fetch(videoUrl);\r\n      const videoBuffer = await response.arrayBuffer();\r\n      \r\n      ffmpeg.FS('writeFile', 'input.mp4', new Uint8Array(videoBuffer));\r\n\r\n      // Run FFmpeg command to trim the video using startTrim and endTrim\r\n      await ffmpeg.run(\r\n        '-i', 'input.mp4',\r\n        '-ss', startTrim,   // Start time for trimming\r\n        '-to', endTrim,     // End time for trimming\r\n        '-c', 'copy',       // Copy codec to avoid re-encoding\r\n        'output.mp4'\r\n      );\r\n\r\n      // Retrieve the trimmed video file\r\n      const trimmedData = ffmpeg.FS('readFile', 'output.mp4');\r\n      const trimmedBlob = new Blob([trimmedData.buffer], { type: 'video/mp4' });\r\n      const trimmedUrl = URL.createObjectURL(trimmedBlob);\r\n\r\n      setTrimmedVideoUrl(trimmedUrl); // Set the trimmed video URL\r\n      onSave(trimmedUrl); // Pass the trimmed video URL to parent component\r\n    } catch (error) {\r\n      console.error('Error trimming video:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleSeek = (event) => {\r\n    const currentTime = event.target.currentTime;\r\n    setStartTrim(currentTime);\r\n  };\r\n\r\n  const handleEndSeek = (event) => {\r\n    const currentTime = event.target.currentTime;\r\n    setEndTrim(currentTime);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <video\r\n        ref={playerRef}\r\n        className=\"video-js\"\r\n        src={trimmedVideoUrl || videoUrl}\r\n        controls\r\n        onSeeked={handleSeek}\r\n        onEnded={handleEndSeek}\r\n      />\r\n      <button\r\n        onClick={handleTrim}\r\n        disabled={isProcessing}\r\n        className=\"absolute bottom-4 right-4 bg-blue-500 text-white px-4 py-2 rounded-md shadow-lg hover:bg-blue-600\"\r\n      >\r\n        {isProcessing ? 'Processing...' : 'Trim Video'}\r\n      </button>\r\n      <button\r\n        onClick={onClose}\r\n        className=\"absolute top-4 right-4 bg-gray-500 text-white px-4 py-2 rounded-md shadow-lg hover:bg-gray-600\"\r\n      >\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoTrimmer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}