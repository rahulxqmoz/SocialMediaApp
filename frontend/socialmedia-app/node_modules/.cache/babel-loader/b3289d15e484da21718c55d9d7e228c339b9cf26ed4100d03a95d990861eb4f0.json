{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\pages\\\\ProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { BASE_URL } from '../config';\nimport Modal from 'react-modal';\nimport 'cropperjs/dist/cropper.css';\nimport { logout, updateUserProfileImage } from '../features/auth/userSlice';\nimport { showErrorToast } from '../components/ErroToast';\nimport ImageCropper from '../components/Cropper';\nimport 'react-quill/dist/quill.snow.css';\nimport PostBox from '../components/ProfilePageComponents/PostBoxComponent';\nimport { showSuccessToast } from '../components/CustomToast';\nimport ProfileHeader from '../components/ProfilePageComponents/ProfileHeader';\nimport ProfileSection from '../components/ProfilePageComponents/ProfileSection';\nimport PostListComponent from '../components/ProfilePageComponents/PostListComponent';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchProfile, uploadProfileImage } from '../features/auth/profileSlice';\nimport { createNewPost, fetchBookmarks, fetchPosts } from '../features/auth/postSlice';\nimport { fetchLikeStatus, handleLike } from '../features/auth/likeSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst ProfilePage = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalImage, setModalImage] = useState('');\n  const [openCommentId, setOpenCommentId] = useState(null);\n  const [imageType, setImageType] = useState(''); // 'cover' or 'profile'\n  const cropperRef = useRef(null);\n  const [comments, setComments] = useState({});\n  const [newComment, setNewComment] = useState(\"\");\n  const [replyingToCommentId, setReplyingToCommentId] = useState(null);\n  const user = useSelector(state => state.user.user);\n  const token = useSelector(state => state.auth.token);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  //const [bookmarks, setBookmarks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    profile,\n    isFollowing,\n    followerCount,\n    followingCount\n  } = useSelector(state => state.profile);\n  const {\n    posts,\n    bookmarks,\n    loading: postLoading,\n    error: postError\n  } = useSelector(state => state.posts);\n  const likedPosts = useSelector(state => state.likedPosts);\n  const bookmarkPosts = useSelector(state => state.bookmarkPosts);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const fetchComments = async postId => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: response.data\n      }));\n    } catch (error) {\n      console.log(\"Error fetching comments\");\n    }\n  };\n  useEffect(() => {\n    if (user && token) {\n      dispatch(fetchProfile({\n        userId: user.id,\n        token\n      }));\n      dispatch(fetchPosts({\n        userId: user.id,\n        token\n      }));\n      dispatch(fetchBookmarks({\n        token\n      }));\n    }\n  }, [user, token]);\n  useEffect(() => {\n    if (posts.length > 0) {\n      posts.forEach(post => {\n        console.log(`Correct post id: ${post.id}`);\n        fetchComments(post.id);\n      });\n    }\n  }, [posts]);\n  useEffect(() => {\n    // Fetch like statuses when posts change\n    if (posts.length) {\n      dispatch(fetchLikeStatus({\n        posts,\n        token\n      }));\n    }\n  }, [posts, dispatch, token]);\n  useEffect(() => {\n    const fetchBookmarkStatus = async () => {\n      try {\n        const bookmarkPosts = {};\n        for (let post of posts) {\n          const response = await fetch(`${BASE_URL}/api/posts/${post.id}/check_bookmarked/`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const result = await response.json();\n            bookmarkPosts[post.id] = result.bookmarked; // Assume the response contains { liked: true/false }\n          }\n        }\n        setbookmarkPosts(bookmarkPosts);\n      } catch (error) {\n        console.error('Error fetching like status:', error);\n      }\n    };\n    fetchBookmarkStatus();\n  }, [posts, token, user]);\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate('/login');\n  };\n  const handleFileChange = (event, type) => {\n    const fileInput = event.target;\n    const file = event.target.files[0];\n    if (file) {\n      const validImageTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n      if (!validImageTypes.includes(file.type)) {\n        // setError('Please select a valid image file (JPEG, JPG, or PNG).');\n        showErrorToast('Please select a valid image file (JPEG, JPG, or PNG).');\n        fileInput.value = null;\n        return;\n      }\n    }\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setModalImage(reader.result);\n        setImageType(type);\n        setModalIsOpen(true);\n        fileInput.value = null;\n      };\n      reader.readAsDataURL(file);\n    } else {\n      console.error('No file selected.');\n    }\n  };\n  const handleImageUpload = async () => {\n    if (!cropperRef.current) return;\n    const cropper = cropperRef.current.cropper;\n    const canvas = cropper.getCroppedCanvas();\n    canvas.toBlob(async blob => {\n      const formData = new FormData();\n      formData.append(imageType === 'cover' ? 'cover_pic' : 'profile_pic', blob, 'cropped-image.jpg');\n      try {\n        dispatch(uploadProfileImage({\n          imageBlob: blob,\n          imageType,\n          token,\n          userId: user.id\n        }));\n        closeModal();\n      } catch (err) {\n        setError('An error occurred while uploading the image.');\n      }\n    }, 'image/jpeg');\n  };\n  const openModal = type => {\n    setImageType(type);\n    document.getElementById(`${type}-upload`).click(); // Trigger the file input click\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setModalImage('');\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 text-center mt-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 12\n    }, this);\n  }\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  const handleNewPost = postData => {\n    const userId = user.id;\n    dispatch(createNewPost({\n      postData,\n      userId,\n      token\n    }));\n  };\n  const postLike = async postId => {\n    dispatch(handleLike({\n      postId,\n      token,\n      userId: user.id\n    }));\n  };\n  const handleSubmitComment = async (postId, commentText, parentId = null) => {\n    if (!commentText.trim()) {\n      showErrorToast('Empty Comment Box');\n      return;\n    }\n    console.log(postId, commentText, user.id, parentId, token);\n    try {\n      const response = await axios.post(`${BASE_URL}/api/comments/`, {\n        post: postId,\n        content: commentText,\n        user: user.id,\n        parent: parentId // Include parentId here\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newCommentData = response.data;\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData]\n      }));\n      setNewComment(\"\");\n      setReplyingToCommentId(null);\n      showSuccessToast(\"Comment submitted successfully\");\n      fetchPosts();\n    } catch (error) {\n      showErrorToast(\"Error submitting comment\");\n    }\n  };\n  const handleToggleComments = postId => {\n    if (openCommentId === postId) {\n      setOpenCommentId(null); // Close the comments section if it's already open\n    } else {\n      setOpenCommentId(postId); // Open the comments section for the specific post\n    }\n  };\n  const handleAddEmoji = emoji => {\n    setCommentText(prev => prev + emoji.native); // Append the selected emoji to the comment text\n  };\n  const handleBookmark = async postId => {\n    try {\n      if (bookmarkPosts[postId]) {\n        // If already bookmarked, unbookmark the post\n        await axios.delete(`${BASE_URL}/api/bookmarks/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setbookmarkPosts(prevState => ({\n          ...prevState,\n          [postId]: false\n        }));\n        showErrorToast('Post removed from Bookmarks');\n      } else {\n        // If not bookmarked, bookmark the post\n        await axios.post(`${BASE_URL}/api/bookmarks/`, {\n          post: postId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setbookmarkPosts(prevState => ({\n          ...prevState,\n          [postId]: true\n        }));\n        showSuccessToast('Added to Bookmarks');\n      }\n    } catch (error) {\n      console.error('Error updating bookmark:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto bg-white shadow-md rounded-md overflow-hidden mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n      profile: profile,\n      handleFileChange: handleFileChange,\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 sm:p-6\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileSection, {\n        user: user,\n        profile: profile,\n        followerCount: followerCount,\n        followingCount: followingCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 5\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }, this), postLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 22\n      }, this), postError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: postError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PostBox, {\n        onPostSubmit: handleNewPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PostListComponent, {\n        posts: posts,\n        user: user,\n        likedPosts: likedPosts,\n        handleLike: postLike,\n        handleToggleComments: handleToggleComments,\n        handleBookmark: handleBookmark,\n        bookmarkPosts: bookmarkPosts,\n        openCommentId: openCommentId,\n        handleSubmitComment: handleSubmitComment,\n        replyingToCommentId: replyingToCommentId,\n        setReplyingToCommentId: setReplyingToCommentId,\n        setCommentText: setCommentText,\n        setShowEmojiPicker: setShowEmojiPicker,\n        showEmojiPicker: showEmojiPicker,\n        handleAddEmoji: handleAddEmoji,\n        comments: comments,\n        commentText: commentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"w-full max-w-2xl mx-auto mt-16\",\n      children: /*#__PURE__*/_jsxDEV(ImageCropper, {\n        modalImage: modalImage,\n        onSave: handleImageUpload,\n        onClose: closeModal,\n        ref: cropperRef,\n        imageType: imageType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"9WAhYeKcapb5D34F+Rr5HdiumNc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useDispatch","useSelector","axios","BASE_URL","Modal","logout","updateUserProfileImage","showErrorToast","ImageCropper","PostBox","showSuccessToast","ProfileHeader","ProfileSection","PostListComponent","useNavigate","fetchProfile","uploadProfileImage","createNewPost","fetchBookmarks","fetchPosts","fetchLikeStatus","handleLike","jsxDEV","_jsxDEV","setAppElement","ProfilePage","_s","error","setError","modalIsOpen","setModalIsOpen","modalImage","setModalImage","openCommentId","setOpenCommentId","imageType","setImageType","cropperRef","comments","setComments","newComment","setNewComment","replyingToCommentId","setReplyingToCommentId","user","state","token","auth","showEmojiPicker","setShowEmojiPicker","commentText","setCommentText","loading","setLoading","profile","isFollowing","followerCount","followingCount","posts","bookmarks","postLoading","postError","likedPosts","bookmarkPosts","dispatch","navigate","fetchComments","postId","response","get","headers","Authorization","prevComments","data","console","log","userId","id","length","forEach","post","fetchBookmarkStatus","fetch","method","ok","result","json","bookmarked","setbookmarkPosts","handleLogout","handleFileChange","event","type","fileInput","target","file","files","validImageTypes","includes","value","reader","FileReader","onloadend","readAsDataURL","handleImageUpload","current","cropper","canvas","getCroppedCanvas","toBlob","blob","formData","FormData","append","imageBlob","closeModal","err","openModal","document","getElementById","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleNewPost","postData","postLike","handleSubmitComment","parentId","trim","content","parent","newCommentData","handleToggleComments","handleAddEmoji","emoji","prev","native","handleBookmark","delete","prevState","onPostSubmit","isOpen","onRequestClose","onSave","onClose","ref","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/pages/ProfilePage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../config';\r\nimport Modal from 'react-modal';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport { logout, updateUserProfileImage } from '../features/auth/userSlice';\r\nimport { showErrorToast } from '../components/ErroToast';\r\nimport ImageCropper from '../components/Cropper';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport PostBox from '../components/ProfilePageComponents/PostBoxComponent';\r\nimport { showSuccessToast } from '../components/CustomToast';\r\nimport ProfileHeader from '../components/ProfilePageComponents/ProfileHeader';\r\nimport ProfileSection from '../components/ProfilePageComponents/ProfileSection';\r\nimport PostListComponent from '../components/ProfilePageComponents/PostListComponent';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchProfile, uploadProfileImage } from '../features/auth/profileSlice';\r\nimport { createNewPost, fetchBookmarks, fetchPosts } from '../features/auth/postSlice';\r\nimport { fetchLikeStatus, handleLike } from '../features/auth/likeSlice';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ProfilePage = () => {\r\n  const [error, setError] = useState(null);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [modalImage, setModalImage] = useState('');\r\n  const [openCommentId, setOpenCommentId] = useState(null); \r\n  const [imageType, setImageType] = useState(''); // 'cover' or 'profile'\r\n  const cropperRef = useRef(null); \r\n  const [comments, setComments] = useState({}); \r\n  const [newComment, setNewComment] = useState(\"\"); \r\n  const [replyingToCommentId, setReplyingToCommentId] = useState(null); \r\n  const user = useSelector((state) => state.user.user);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [commentText, setCommentText] = useState('');\r\n  //const [bookmarks, setBookmarks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { profile, isFollowing, followerCount, followingCount } = useSelector((state) => state.profile);\r\n  const { posts, bookmarks, loading:postLoading, error:postError } = useSelector((state) => state.posts);\r\n  const likedPosts = useSelector((state) => state.likedPosts);\r\n  const bookmarkPosts = useSelector((state) => state.bookmarkPosts);\r\n  const dispatch = useDispatch()\r\n  const navigate=useNavigate();\r\n\r\n  const fetchComments = async (postId) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: response.data,\r\n        \r\n      }));\r\n    } catch (error) {\r\n      console.log(\"Error fetching comments\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n\r\n    if (user && token) {\r\n      dispatch(fetchProfile({ userId:user.id, token }));\r\n      dispatch(fetchPosts({ userId: user.id, token }));\r\n      dispatch(fetchBookmarks({ token }));\r\n      \r\n    }\r\n  }, [user, token]);\r\n\r\n  useEffect(() => {\r\n    if (posts.length > 0) {\r\n      posts.forEach((post) => {\r\n        console.log(`Correct post id: ${post.id}`);\r\n        fetchComments(post.id);\r\n      });\r\n    }\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    // Fetch like statuses when posts change\r\n    if (posts.length) {\r\n      dispatch(fetchLikeStatus({ posts, token }));\r\n    }\r\n  }, [posts, dispatch, token]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchBookmarkStatus = async () => {\r\n      try {\r\n        const bookmarkPosts = {};\r\n        for (let post of posts) {\r\n          const response = await fetch(`${BASE_URL}/api/posts/${post.id}/check_bookmarked/`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (response.ok) {\r\n            const result = await response.json();\r\n            bookmarkPosts[post.id] = result.bookmarked; // Assume the response contains { liked: true/false }\r\n           \r\n          }\r\n        }\r\n        setbookmarkPosts(bookmarkPosts);\r\n      } catch (error) {\r\n        console.error('Error fetching like status:', error);\r\n      }\r\n    };\r\n\r\n    \r\n    fetchBookmarkStatus();\r\n  }, [posts, token,user]);\r\n\r\n  const handleLogout=()=>{\r\n    dispatch(logout());\r\n    navigate('/login')\r\n  }\r\n\r\n\r\n  const handleFileChange = (event, type) => {\r\n    const fileInput = event.target;\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const validImageTypes = ['image/jpeg', 'image/jpg', 'image/png'];\r\n      if (!validImageTypes.includes(file.type)) {\r\n        // setError('Please select a valid image file (JPEG, JPG, or PNG).');\r\n        showErrorToast('Please select a valid image file (JPEG, JPG, or PNG).');\r\n        fileInput.value = null; \r\n        return;\r\n      }\r\n    }\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setModalImage(reader.result);\r\n        setImageType(type);\r\n        setModalIsOpen(true);\r\n        fileInput.value = null; \r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      console.error('No file selected.');\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = async () => {\r\n    if (!cropperRef.current) return;\r\n\r\n    const cropper = cropperRef.current.cropper;\r\n    const canvas = cropper.getCroppedCanvas();\r\n    canvas.toBlob(async (blob) => {\r\n      const formData = new FormData();\r\n      formData.append(imageType === 'cover' ? 'cover_pic' : 'profile_pic', blob, 'cropped-image.jpg');\r\n\r\n      try {\r\n       \r\n        dispatch(uploadProfileImage({ imageBlob: blob, imageType, token, userId: user.id }));\r\n\r\n        closeModal();\r\n\r\n      } catch (err) {\r\n        setError('An error occurred while uploading the image.');\r\n      }\r\n    }, 'image/jpeg');\r\n  };\r\n\r\n\r\n  const openModal = (type) => {\r\n    setImageType(type);\r\n    document.getElementById(`${type}-upload`).click(); // Trigger the file input click\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n    setModalImage('');\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500 text-center mt-4\">{error}</div>;\r\n  }\r\n\r\n  if (!profile) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"></div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  const handleNewPost  = (postData) => {\r\n    const userId = user.id;\r\n    dispatch(createNewPost({ postData, userId, token }));\r\n  };\r\n\r\n  const postLike = async  (postId) => {\r\n    dispatch(handleLike({ postId, token ,userId:user.id}));\r\n  };\r\n\r\n\r\n\r\n  const handleSubmitComment = async (postId, commentText, parentId = null) => {\r\n    if (!commentText.trim()) {\r\n      showErrorToast('Empty Comment Box');\r\n      return;\r\n    }\r\n    console.log(postId,commentText,user.id,parentId,token);\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/api/comments/`, {\r\n        post: postId,\r\n        content: commentText,\r\n        user: user.id,\r\n        parent: parentId, // Include parentId here\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      const newCommentData = response.data;\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: [...(prevComments[postId] || []), newCommentData],\r\n      }));\r\n  \r\n      setNewComment(\"\");\r\n      setReplyingToCommentId(null);\r\n     \r\n      showSuccessToast(\"Comment submitted successfully\");\r\n      fetchPosts();\r\n    } catch (error) {\r\n      showErrorToast(\"Error submitting comment\");\r\n    }\r\n  };\r\n  const handleToggleComments = (postId) => {\r\n    if (openCommentId === postId) {\r\n      setOpenCommentId(null); // Close the comments section if it's already open\r\n    } else {\r\n      setOpenCommentId(postId); // Open the comments section for the specific post\r\n    }\r\n  };\r\n\r\n  const handleAddEmoji = (emoji) => {\r\n    setCommentText((prev) => prev + emoji.native); // Append the selected emoji to the comment text\r\n  };\r\n \r\n\r\n  const handleBookmark = async (postId) => {\r\n    try {\r\n      \r\n      if (bookmarkPosts[postId]) {\r\n        // If already bookmarked, unbookmark the post\r\n        await axios.delete(`${BASE_URL}/api/bookmarks/${postId}`,{\r\n          headers: {\r\n              Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setbookmarkPosts((prevState) => ({\r\n          ...prevState,\r\n          [postId]: false,\r\n        }));\r\n        showErrorToast('Post removed from Bookmarks');\r\n      } else {\r\n        // If not bookmarked, bookmark the post\r\n        await axios.post(`${BASE_URL}/api/bookmarks/`, { post: postId }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setbookmarkPosts((prevState) => ({\r\n          ...prevState,\r\n          [postId]: true,\r\n        }));\r\n        showSuccessToast('Added to Bookmarks');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto bg-white shadow-md rounded-md overflow-hidden mt-8\">\r\n      \r\n    {/* Profile Header */}\r\n  \r\n    <ProfileHeader profile={profile} handleFileChange={handleFileChange} openModal={openModal}/>\r\n    {/* Profile Details */}\r\n  <div className=\"p-4 sm:p-6\">\r\n    {/* Profile Section */}\r\n    <ProfileSection user={user} profile={profile} followerCount={followerCount} followingCount={followingCount}/>\r\n{loading && (\r\n      <div className=\"flex justify-center items-center mb-2\">\r\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"></div>\r\n      </div>\r\n    )}\r\n    {postLoading && (<div className=\"flex justify-center items-center mb-2\">\r\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500 border-solid\"></div>\r\n      </div>)}\r\n      {postError && <p className=\"text-red-500\">{postError}</p>}\r\n    {/* PostBox Section */}\r\n    <PostBox onPostSubmit={handleNewPost} />\r\n\r\n  \r\n   \r\n      <PostListComponent \r\n      posts={posts}\r\n      user={user}\r\n      likedPosts={likedPosts}\r\n      handleLike={postLike}\r\n      handleToggleComments={handleToggleComments}\r\n      handleBookmark={handleBookmark}\r\n      bookmarkPosts={bookmarkPosts}\r\n      openCommentId={openCommentId}\r\n      handleSubmitComment={handleSubmitComment}\r\n      replyingToCommentId={replyingToCommentId}\r\n      setReplyingToCommentId={setReplyingToCommentId}\r\n      setCommentText={setCommentText}\r\n      setShowEmojiPicker={setShowEmojiPicker}\r\n      showEmojiPicker={showEmojiPicker}\r\n      handleAddEmoji={handleAddEmoji}\r\n      comments={comments}\r\n      commentText={commentText}\r\n      />\r\n   \r\n  </div>\r\n\r\n  {/* Cropper Modal */}\r\n  <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className=\"w-full max-w-2xl mx-auto mt-16\">\r\n    <ImageCropper modalImage={modalImage} onSave={handleImageUpload} onClose={closeModal} ref={cropperRef} imageType={imageType}/>\r\n  </Modal>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}