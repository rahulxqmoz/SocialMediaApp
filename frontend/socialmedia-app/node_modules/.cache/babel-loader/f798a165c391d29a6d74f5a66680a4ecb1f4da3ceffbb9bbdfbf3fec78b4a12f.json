{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\ChatDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages, sendMessage } from '../features/auth/chatSlice';\nimport { FaSmile, FaTimes, FaPaperclip } from 'react-icons/fa'; // Emoji toggle icons\nimport Picker from '@emoji-mart/react'; // Emoji picker component\nimport data from '@emoji-mart/data';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDialog = ({\n  roomName,\n  user\n}) => {\n  _s();\n  console.log(`roomName: ${roomName}`);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const messages = useSelector(state => state.chat.messages);\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const socketRef = useRef(null); // Using useRef for socket\n  const chatRooms = useSelector(state => state.chat.rooms);\n  const currentUser = useSelector(state => state.user.user);\n  const room = useSelector(state => state.chat.rooms);\n  const messagesEndRef = useRef(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const peerConnectionRef = useRef(null);\n  const [inCall, setInCall] = useState(false);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [incomingCallerName, setIncomingCallerName] = useState(null);\n  const [offerdata, setOfferdata] = useState(null);\n  const [file, setFile] = useState(null);\n  const [messageType, setMessageType] = useState('text');\n  const [filePreview, setFilePreview] = useState(null);\n  const messagesContainerRef = useRef(null);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [lastFetchedMessageId, setLastFetchedMessageId] = useState(null);\n  let iceCandidatesBuffer = [];\n  console.log(`roomsssss${room}`);\n  console.log(messages);\n  console.log(user.id, currentUser.id);\n  const startVideoCall = async () => {\n    if (inCall) {\n      console.log(\"Already in a call\");\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setLocalStream(stream);\n      setInCall(true);\n      peerConnectionRef.current = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      });\n\n      // Add local stream tracks to peer connection\n      stream.getTracks().forEach(track => {\n        peerConnectionRef.current.addTrack(track, stream);\n      });\n      peerConnectionRef.current.ontrack = event => {\n        const [remoteStream] = event.streams;\n        setRemoteStream(remoteStream);\n      };\n      peerConnectionRef.current.onicecandidate = event => {\n        if (event.candidate) {\n          socketRef.current.send(JSON.stringify({\n            candidate: event.candidate\n          }));\n        }\n      };\n      const offer = await peerConnectionRef.current.createOffer();\n      await peerConnectionRef.current.setLocalDescription(offer);\n\n      // Send offer to the other user\n      socketRef.current.send(JSON.stringify({\n        type: 'video-call-offer',\n        from: currentUser.id,\n        to: user.id !== currentUser.id ? user.id : currentUser.id,\n        offer: offer\n      }));\n    } catch (error) {\n      console.error('Error accessing media devices.', error);\n    }\n  };\n  const markMessagesAsRead = messageId => {\n    const message = messages.find(msg => msg.id === messageId);\n    if (message && !message.read_by.includes(currentUser.id)) {\n      //message.read_by.push(currentUser.id);\n      if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n        socketRef.current.send(JSON.stringify({\n          type: 'message_read',\n          message_id: messageId,\n          user_id: currentUser.id\n        }));\n      }\n    }\n  };\n  const acceptCall = async data => {\n    //setIncomingCallerName(data.to);\n    console.log(`datafrom:${data.from}`);\n    console.log(`data.offer:${data.offer.sdp}`);\n    console.log(`incomingCallerName:${incomingCallerName}`);\n    setIncomingCall(false);\n    try {\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\n        type: 'offer',\n        sdp: data.offer.sdp // Use the received offer's sdp\n      }));\n      const answer = await peerConnectionRef.current.createAnswer();\n      await peerConnectionRef.current.setLocalDescription(answer);\n\n      // Send answer back to the caller\n      socketRef.current.send(JSON.stringify({\n        type: 'video-call-answer',\n        answer: answer,\n        offer: data.offer,\n        to: data.to\n      }));\n    } catch (error) {\n      console.error(\"Error accepting call:\", error);\n    }\n  };\n  const rejectCall = from => {\n    setIncomingCall(false);\n    socketRef.current.send(JSON.stringify({\n      type: 'video-call-rejected',\n      from: currentUser.id,\n      to: from\n    }));\n  };\n  const endCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (peerConnectionRef.current) {\n      peerConnectionRef.current.close();\n      peerConnectionRef.current = null;\n    }\n    setLocalStream(null);\n    setRemoteStream(null);\n    setInCall(false);\n  };\n  useEffect(() => {\n    if (roomName && token) {\n      dispatch({\n        type: 'chat/resetMessages'\n      });\n      // Step 1: Fetch all chat rooms to check if the room exists\n      dispatch(fetchChatRooms({\n        token\n      })).then(action => {\n        const roomExists = chatRooms.some(room => room.name === roomName);\n        if (roomExists) {\n          // Room exists, fetch messages for this room\n          dispatch(fetchMessages({\n            roomName,\n            token\n          }));\n        } else {\n          // Room doesn't exist, create it first\n          dispatch(createChatRoom({\n            roomName,\n            participants: [user.id, currentUser.id],\n            token\n          })).then(() => {\n            // After creating the room, fetch the messages\n            dispatch(fetchMessages({\n              roomName,\n              token\n            }));\n          });\n        }\n      });\n    }\n    // WebSocket connection setup\n    socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\n    socketRef.current.onopen = () => {\n      console.log(\"WebSocket connection opened\");\n    };\n    let iceCandidatesBuffer = [];\n    socketRef.current.onmessage = async e => {\n      const data = JSON.parse(e.data);\n      console.log(\"WebSocket data received:\", data);\n      console.log(\"Current messages in state:\", messages);\n      if (!peerConnectionRef.current) {\n        peerConnectionRef.current = new RTCPeerConnection();\n        if (localStream) {\n          localStream.getTracks().forEach(track => {\n            peerConnectionRef.current.addTrack(track, localStream);\n          });\n        }\n      }\n      if (data.type === 'video-call-offer') {\n        if (data.to === currentUser.id) {\n          setOfferdata(data);\n          setIncomingCall(true);\n          console.log(`data:${data}`);\n          console.log(`IncomingCallerName:${data.from}`);\n          console.log(`to:${data.to}`);\n          setIncomingCallerName(data.from);\n        }\n      } else if (data.type === 'video-call-answer') {\n        if (peerConnectionRef.current.signalingState === 'stable') {\n          await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\n            type: 'answer',\n            sdp: data.answer.sdp\n          }));\n        } else {\n          console.log('Peer connection is not in a stable state. Cannot set remote description.');\n        }\n        // Process buffered ICE candidates\n        iceCandidatesBuffer.forEach(candidate => {\n          peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(candidate)).catch(error => {\n            console.error('Error adding received ICE candidate', error);\n          });\n        });\n        iceCandidatesBuffer = []; // Clear buffer after processing\n      } else if (data.candidate) {\n        if (incomingCall && peerConnectionRef.current.remoteDescription) {\n          await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate)).catch(error => {\n            console.error('Error adding received ICE candidate', error);\n          });\n        } else {\n          iceCandidatesBuffer.push(data.candidate); // Buffer candidate until remote description is set\n        }\n      } else if (data.type === 'message_read') {\n        console.log(`messgae read entered:${data.message_id}`);\n        console.log(\"Current messages in state message_read:\", messages);\n        // Update the specific message's read_by list\n        const updatedMessages = messages.map(msg => {\n          if (msg.id === data.message_id) {\n            return {\n              ...msg,\n              // Directly use the updated 'read_by' array from the WebSocket event\n              read_by: data.read_by\n            };\n          }\n          return msg;\n        });\n\n        // Dispatch the action to update the messages array in the Redux store\n        dispatch({\n          type: 'chat/updateMessages',\n          payload: {\n            message_id: data.message_id,\n            // Identify the specific message\n            read_by: data.read_by // Provide the updated read_by array\n          }\n        });\n      } else if (data.message && data.sender) {\n        const existingMessage = messages.find(msg => msg.id === data.message_id);\n        if (!existingMessage) {\n          dispatch(addMessage({\n            sender: data.sender,\n            message: data.message,\n            message_type: data.message_type,\n            file: data.file,\n            timestamp: data.timestamp || new Date().toISOString(),\n            id: data.message_id,\n            // Include the message ID\n            read_by: data.read_by || []\n          }));\n        }\n      } else if (data.file && data.sender) {\n        const existingMessage = messages.find(msg => msg.id === data.message_id);\n        if (!existingMessage) {\n          dispatch(addMessage({\n            sender: data.sender,\n            message: data.message,\n            message_type: data.message_type,\n            file: data.file,\n            timestamp: data.timestamp || new Date().toISOString(),\n            id: data.message_id,\n            // Include the message ID\n            read_by: data.read_by || []\n          }));\n        }\n      }\n    };\n    socketRef.current.onclose = event => {\n      console.log('WebSocket closed. Attempting to reconnect...');\n      console.error(\"WebSocket closed unexpectedly:\", event.reason);\n    };\n    return () => {\n      socketRef.current.close();\n    };\n  }, [roomName, token, dispatch]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    messages.forEach(msg => {\n      if (msg.sender !== currentUser.id && !msg.read_by.includes(currentUser.id)) {\n        console.log(`entered markMeaa`);\n        markMessagesAsRead(msg.id);\n      }\n    });\n  }, [messages]);\n  const handleScroll = async () => {\n    if (messagesContainerRef.current) {\n      const {\n        scrollTop\n      } = messagesContainerRef.current;\n      if (scrollTop === 0 && !loadingMore) {\n        // Check if at the top\n        setLoadingMore(true);\n        // Fetch more messages\n        await dispatch(fetchMessages({\n          roomName,\n          token,\n          lastMessageId: lastFetchedMessageId\n        }));\n        setLoadingMore(false);\n      }\n    }\n  };\n  const handleSendMessage = async () => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      try {\n        const result = await dispatch(sendMessage({\n          roomName,\n          message: messageInput,\n          messageType,\n          file,\n          token\n        })).unwrap();\n        console.log(`result:${result}`);\n        console.log(`result id:${result.id}`);\n        socketRef.current.send(JSON.stringify({\n          type: 'message_sent',\n          sender: currentUser.id,\n          message_id: result.id,\n          timestamp: new Date().toISOString()\n        }));\n        setMessageInput('');\n        setFile(null);\n        setMessageType('text');\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const handleAddEmoji = emoji => {\n    setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\n  };\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      const fileType = selectedFile.type;\n      const maxVideoSize = 100 * 1024 * 1024;\n      // Set message type based on the file type\n      if (fileType.startsWith('image/')) {\n        setMessageType('image');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the image\n      } else if (fileType === 'image/gif') {\n        setMessageType('gif');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the GIF\n      } else if (fileType.startsWith('video/')) {\n        if (selectedFile.size > maxVideoSize) {\n          alert('Video file size must be smaller than 100MB.');\n          return;\n        }\n        setMessageType('video');\n        setFilePreview(URL.createObjectURL(selectedFile)); // Preview the video\n      } else {\n        setMessageType('file');\n        setFilePreview(null); // No preview for other file types\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 mt-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic || 'https://via.placeholder.com/800x500',\n        alt: user.username,\n        className: \"w-10 h-10 rounded-full mr-3 object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg font-semibold\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-sm\",\n        children: user.is_online ? 'Online' : 'Offline'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startVideoCall,\n        className: \"ml-auto text-white bg-green-500 rounded-full p-2\",\n        children: \"\\uD83D\\uDCF9 Video Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), filePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center p-4 border-b\",\n      children: [messageType === 'image' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: filePreview,\n        alt: \"Preview\",\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 25\n      }, this), messageType === 'video' && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: filePreview,\n        controls: true,\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }, this), messageType === 'gif' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: filePreview,\n        alt: \"Preview\",\n        className: \"w-32 h-32 object-cover rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto bg-gray-100 p-4\",\n      children: [messages.map((msg, index) => {\n        var _msg$read_by, _msg$read_by2, _msg$read_by3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 rounded-lg mb-2 ${currentUser.id === msg.sender ? 'bg-blue-500 text-white self-end' : 'bg-gray-400  text-white self-end'}`,\n          style: {\n            maxWidth: '50%',\n            marginLeft: currentUser.id === msg.sender ? 'auto' : '0'\n          },\n          children: [msg.message_type === 'text' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this) : msg.file ?\n          /*#__PURE__*/\n          // Check the media type to render images, GIFs, or videos\n          _jsxDEV(_Fragment, {\n            children: msg.message_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: msg.file,\n              alt: \"Image\",\n              className: \"max-w-full w-[300px] h-auto object-cover rounded-lg shadow-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 29\n            }, this) : msg.message_type === 'video' ? /*#__PURE__*/_jsxDEV(\"video\", {\n              src: msg.file,\n              controls: true,\n              className: \"max-w-full w-[300px] h-auto rounded-lg shadow-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 29\n            }, this) : msg.message_type === 'gif' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: msg.file,\n              alt: \"GIF\",\n              className: \"max-w-full w-[300px] h-auto object-cover rounded-lg shadow-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"No file available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 33\n            }, this) // Optional fallback for unrecognized file types\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No message available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-status flex items-center mt-1\",\n            children: (_msg$read_by = msg.read_by) !== null && _msg$read_by !== void 0 && _msg$read_by.includes(currentUser.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-500\",\n                title: \"Read\",\n                children: \"\\u2714\\u2714\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 text-xs text-white\",\n                children: \"Read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 9\n            }, this) : (_msg$read_by2 = msg.read_by) !== null && _msg$read_by2 !== void 0 && _msg$read_by2.includes(user.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-yellow-500\",\n                title: \"Delivered\",\n                children: \"\\u2714\\u2714\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 text-xs text-white\",\n                children: \"Seen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 9\n            }, this) : ((_msg$read_by3 = msg.read_by) === null || _msg$read_by3 === void 0 ? void 0 : _msg$read_by3.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white\",\n                title: \"Delivered\",\n                children: \"\\u2714\\u2714\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 text-xs text-white\",\n                children: \"Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white\",\n                title: \"Sent\",\n                children: \"\\u2714\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 text-xs text-white\",\n                children: \"Sent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-orange-50 mt-1 text-right\",\n            children: formatTimestamp(msg.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-2 border-t bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEmojiPicker(!showEmojiPicker),\n        className: \"text-gray-500 hover:text-gray-800 mr-2\",\n        children: showEmojiPicker ? /*#__PURE__*/_jsxDEV(FaTimes, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(FaSmile, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 16\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-12 left-0 z-10\",\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          data: data,\n          onEmojiSelect: handleAddEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ml-2\",\n        children: [/*#__PURE__*/_jsxDEV(FaPaperclip, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"hidden\",\n          accept: \"image/*,video/*,.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this), incomingCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [incomingCallerName, \" is calling...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => acceptCall(offerdata),\n        className: \"bg-green-500 p-2 rounded-lg\",\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIncomingCall(false),\n        className: \"bg-red-500 p-2 rounded-lg\",\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 17\n    }, this), inCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-call\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Call in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: video => {\n          if (video) video.srcObject = localStream;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: video => {\n          if (video) video.srcObject = remoteStream;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endCall,\n        children: \"End Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatDialog, \"GGVd1zrFqzW9rkR8ksxAihWAOfM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ChatDialog;\nexport default ChatDialog;\nvar _c;\n$RefreshReg$(_c, \"ChatDialog\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useDispatch","useSelector","addMessage","createChatRoom","fetchChatRooms","fetchMessages","sendMessage","FaSmile","FaTimes","FaPaperclip","Picker","data","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDialog","roomName","user","_s","console","log","dispatch","token","state","auth","messages","chat","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","socketRef","chatRooms","rooms","currentUser","room","messagesEndRef","localStream","setLocalStream","remoteStream","setRemoteStream","peerConnectionRef","inCall","setInCall","incomingCall","setIncomingCall","incomingCallerName","setIncomingCallerName","offerdata","setOfferdata","file","setFile","messageType","setMessageType","filePreview","setFilePreview","messagesContainerRef","loadingMore","setLoadingMore","lastFetchedMessageId","setLastFetchedMessageId","iceCandidatesBuffer","id","startVideoCall","stream","navigator","mediaDevices","getUserMedia","video","audio","current","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","ontrack","event","streams","onicecandidate","candidate","send","JSON","stringify","offer","createOffer","setLocalDescription","type","from","to","error","markMessagesAsRead","messageId","message","find","msg","read_by","includes","readyState","WebSocket","OPEN","message_id","user_id","acceptCall","sdp","setRemoteDescription","RTCSessionDescription","answer","createAnswer","rejectCall","endCall","stop","close","then","action","roomExists","some","name","participants","onopen","onmessage","e","parse","signalingState","addIceCandidate","RTCIceCandidate","catch","remoteDescription","push","updatedMessages","map","payload","sender","existingMessage","message_type","timestamp","Date","toISOString","onclose","reason","_messagesEndRef$curre","scrollIntoView","behavior","handleScroll","scrollTop","lastMessageId","handleSendMessage","result","unwrap","err","formatTimestamp","date","toLocaleTimeString","hour","minute","hour12","handleAddEmoji","emoji","prevInput","native","handleFileChange","selectedFile","target","files","fileType","maxVideoSize","startsWith","URL","createObjectURL","size","alert","className","children","src","profile_pic","alt","username","fileName","_jsxFileName","lineNumber","columnNumber","is_online","onClick","controls","index","_msg$read_by","_msg$read_by2","_msg$read_by3","style","maxWidth","marginLeft","title","length","ref","onEmojiSelect","value","onChange","onKeyPress","key","placeholder","accept","autoPlay","playsInline","srcObject","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/ChatDialog.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages,sendMessage } from '../features/auth/chatSlice';\r\nimport { FaSmile, FaTimes,FaPaperclip  } from 'react-icons/fa'; // Emoji toggle icons\r\nimport Picker from '@emoji-mart/react'; // Emoji picker component\r\nimport data from '@emoji-mart/data';\r\nconst ChatDialog = ({ roomName, user }) => {\r\n    console.log(`roomName: ${roomName}`);\r\n    const dispatch = useDispatch();\r\n    const token = useSelector((state) => state.auth.token);\r\n    const messages = useSelector((state) => state.chat.messages);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const socketRef = useRef(null); // Using useRef for socket\r\n    const chatRooms = useSelector((state) => state.chat.rooms);\r\n    const currentUser = useSelector((state) => state.user.user);\r\n    const room = useSelector((state)=>state.chat.rooms)\r\n    const messagesEndRef = useRef(null);\r\n    const [localStream, setLocalStream] = useState(null);\r\n    const [remoteStream, setRemoteStream] = useState(null);\r\n    const peerConnectionRef = useRef(null);\r\n    const [inCall, setInCall] = useState(false);\r\n    const [incomingCall, setIncomingCall] = useState(false);\r\n    const [incomingCallerName, setIncomingCallerName] = useState(null);\r\n    const [offerdata, setOfferdata] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n    const [messageType, setMessageType] = useState('text');\r\n    const [filePreview, setFilePreview] = useState(null);\r\n    const messagesContainerRef = useRef(null);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [lastFetchedMessageId, setLastFetchedMessageId] = useState(null); \r\n    let iceCandidatesBuffer = [];\r\n    console.log(`roomsssss${room}`)\r\n    console.log(messages)\r\n    console.log(user.id,currentUser.id)\r\n\r\n    const startVideoCall = async () => {\r\n      if (inCall) {\r\n          console.log(\"Already in a call\");\r\n          return;\r\n      }\r\n\r\n      try {\r\n          const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n          setLocalStream(stream);\r\n          setInCall(true);\r\n\r\n          peerConnectionRef.current = new RTCPeerConnection({\r\n            iceServers: [\r\n                {\r\n                    urls: 'stun:stun.l.google.com:19302',\r\n                },\r\n            ],\r\n        });\r\n\r\n          // Add local stream tracks to peer connection\r\n          stream.getTracks().forEach(track => {\r\n              peerConnectionRef.current.addTrack(track, stream);\r\n          });\r\n\r\n          peerConnectionRef.current.ontrack = (event) => {\r\n              const [remoteStream] = event.streams;\r\n              setRemoteStream(remoteStream);\r\n          };\r\n\r\n          peerConnectionRef.current.onicecandidate = (event) => {\r\n              if (event.candidate) {\r\n                  socketRef.current.send(JSON.stringify({ candidate: event.candidate }));\r\n              }\r\n          };\r\n\r\n          const offer = await peerConnectionRef.current.createOffer();\r\n          await peerConnectionRef.current.setLocalDescription(offer);\r\n\r\n          // Send offer to the other user\r\n          socketRef.current.send(JSON.stringify({\r\n              type: 'video-call-offer',\r\n              from: currentUser.id,\r\n              to: user.id !== currentUser.id ? user.id : currentUser.id,\r\n              offer: offer,\r\n          }));\r\n      } catch (error) {\r\n          console.error('Error accessing media devices.', error);\r\n      }\r\n  };\r\n  const markMessagesAsRead = (messageId) => {\r\n    const message = messages.find(msg => msg.id === messageId);\r\n    if (message && !message.read_by.includes(currentUser.id)) {\r\n        //message.read_by.push(currentUser.id);\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n            socketRef.current.send(JSON.stringify({\r\n                type: 'message_read',\r\n                message_id: messageId,\r\n                user_id: currentUser.id,\r\n            }));\r\n          \r\n        }\r\n    }\r\n};\r\n  \r\n  const acceptCall = async (data) => {\r\n    //setIncomingCallerName(data.to);\r\n    console.log(`datafrom:${data.from}`)\r\n    console.log(`data.offer:${data.offer.sdp}`)\r\n    console.log(`incomingCallerName:${incomingCallerName}`)\r\n    setIncomingCall(false);\r\n    try {\r\n        await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\r\n          type: 'offer',\r\n          sdp: data.offer.sdp, // Use the received offer's sdp\r\n          }));\r\n          const answer = await peerConnectionRef.current.createAnswer();\r\n          await peerConnectionRef.current.setLocalDescription(answer);\r\n\r\n          // Send answer back to the caller\r\n          socketRef.current.send(JSON.stringify({\r\n              type: 'video-call-answer',\r\n              answer: answer,\r\n              offer:data.offer,\r\n              to: data.to\r\n          }));\r\n       \r\n          } catch (error) {\r\n              console.error(\"Error accepting call:\", error);\r\n          }\r\n};\r\n\r\n  \r\n    const rejectCall = (from) => {\r\n      setIncomingCall(false);\r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'video-call-rejected',\r\n        from: currentUser.id,\r\n        to: from,\r\n      }));\r\n    };\r\n  \r\n    \r\n    const endCall = () => {\r\n      if (localStream) {\r\n          localStream.getTracks().forEach(track => track.stop());\r\n      }\r\n\r\n      if (peerConnectionRef.current) {\r\n          peerConnectionRef.current.close();\r\n          peerConnectionRef.current = null;\r\n      }\r\n\r\n      setLocalStream(null);\r\n      setRemoteStream(null);\r\n      setInCall(false);\r\n  };\r\n  \r\n\r\n    useEffect(() => {\r\n        if (roomName && token) {\r\n\r\n            dispatch({ type: 'chat/resetMessages' });\r\n            // Step 1: Fetch all chat rooms to check if the room exists\r\n            dispatch(fetchChatRooms({ token })).then((action) => {\r\n                const roomExists = chatRooms.some(room => room.name === roomName);\r\n\r\n                if (roomExists) {\r\n                    // Room exists, fetch messages for this room\r\n                    dispatch(fetchMessages({ roomName, token }));\r\n                } else {\r\n                    // Room doesn't exist, create it first\r\n                    dispatch(createChatRoom({ roomName,participants:[user.id,currentUser.id], token }))\r\n                        .then(() => {\r\n                            // After creating the room, fetch the messages\r\n                            dispatch(fetchMessages({ roomName, token }));\r\n                        });\r\n                }\r\n            });\r\n        }\r\n       // WebSocket connection setup\r\n        socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\r\n\r\n        socketRef.current.onopen = () => {\r\n            console.log(\"WebSocket connection opened\");\r\n        };\r\n        \r\n        let iceCandidatesBuffer = [];\r\n        socketRef.current.onmessage = async (e) => {\r\n          const data = JSON.parse(e.data);\r\n          console.log(\"WebSocket data received:\", data);\r\n          console.log(\"Current messages in state:\", messages);\r\n\r\n          if (!peerConnectionRef.current) {\r\n            peerConnectionRef.current = new RTCPeerConnection();\r\n\r\n            if (localStream) {\r\n                localStream.getTracks().forEach(track => {\r\n                    peerConnectionRef.current.addTrack(track, localStream);\r\n                });\r\n            }\r\n        }\r\n\r\n        if (data.type === 'video-call-offer') {\r\n          if (data.to === currentUser.id) {\r\n              setOfferdata(data);\r\n              setIncomingCall(true);\r\n              console.log(`data:${data}`)\r\n              console.log(`IncomingCallerName:${data.from}`)\r\n              console.log(`to:${data.to}`)\r\n              setIncomingCallerName(data.from);\r\n          }\r\n        } else if (data.type === 'video-call-answer') {\r\n                if (peerConnectionRef.current.signalingState === 'stable') {\r\n                  await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription({\r\n                      type: 'answer',\r\n                      sdp: data.answer.sdp,\r\n                  }));\r\n              } else {\r\n                  console.log('Peer connection is not in a stable state. Cannot set remote description.');\r\n              }\r\n              // Process buffered ICE candidates\r\n              iceCandidatesBuffer.forEach(candidate => {\r\n                  peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(candidate)).catch(error => {\r\n                      console.error('Error adding received ICE candidate', error);\r\n                  });\r\n              });\r\n              iceCandidatesBuffer = [];  // Clear buffer after processing\r\n            } else if (data.candidate) {\r\n              if (incomingCall && peerConnectionRef.current.remoteDescription) {\r\n                await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate)).catch(error => {\r\n                    console.error('Error adding received ICE candidate', error);\r\n                });\r\n                } else {\r\n                    iceCandidatesBuffer.push(data.candidate); // Buffer candidate until remote description is set\r\n                }\r\n            }else if (data.type === 'message_read') {\r\n                console.log(`messgae read entered:${data.message_id}`)\r\n                console.log(\"Current messages in state message_read:\", messages);\r\n                // Update the specific message's read_by list\r\n                const updatedMessages = messages.map((msg) => {\r\n                    if (msg.id === data.message_id) {\r\n                        return {\r\n                            ...msg,\r\n                            // Directly use the updated 'read_by' array from the WebSocket event\r\n                            read_by: data.read_by, \r\n                        };\r\n                    }\r\n                    return msg;\r\n                });\r\n            \r\n                // Dispatch the action to update the messages array in the Redux store\r\n                dispatch({\r\n                    type: 'chat/updateMessages',\r\n                    payload: {\r\n                        message_id: data.message_id,  // Identify the specific message\r\n                        read_by: data.read_by,        // Provide the updated read_by array\r\n                    },\r\n                });\r\n                \r\n            }else if (data.message && data.sender) {\r\n                const existingMessage = messages.find(msg => msg.id === data.message_id);\r\n                if (!existingMessage) {\r\n              dispatch(addMessage({\r\n                  sender: data.sender,\r\n                  message: data.message,\r\n                  message_type: data.message_type,\r\n                  file: data.file,\r\n                  timestamp: data.timestamp || new Date().toISOString(),\r\n                  id: data.message_id,  // Include the message ID\r\n                  read_by: data.read_by || []\r\n              }));\r\n            }\r\n          }else if (data.file && data.sender) {\r\n            const existingMessage = messages.find(msg => msg.id === data.message_id);\r\n            if (!existingMessage) {\r\n            dispatch(addMessage({\r\n                sender: data.sender,\r\n                message: data.message,\r\n                message_type: data.message_type,\r\n                file: data.file,\r\n                timestamp: data.timestamp || new Date().toISOString(),\r\n                id: data.message_id,  // Include the message ID\r\n                read_by: data.read_by || []\r\n            }));\r\n        }\r\n        }\r\n      };\r\n\r\n        \r\n        socketRef.current.onclose = (event) => {\r\n            console.log('WebSocket closed. Attempting to reconnect...');\r\n            console.error(\"WebSocket closed unexpectedly:\", event.reason);\r\n        };\r\n        \r\n\r\n        return () => {\r\n            socketRef.current.close();\r\n        };\r\n    }, [roomName, token, dispatch]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        messages.forEach(msg => {\r\n            if (msg.sender !== currentUser.id && !msg.read_by.includes(currentUser.id)) {\r\n                console.log(`entered markMeaa`)\r\n                markMessagesAsRead(msg.id);\r\n            }\r\n        });\r\n    }, [messages]);\r\n    \r\n    const handleScroll = async () => {\r\n        if (messagesContainerRef.current) {\r\n            const { scrollTop } = messagesContainerRef.current;\r\n            if (scrollTop === 0 && !loadingMore) { // Check if at the top\r\n                setLoadingMore(true);\r\n                // Fetch more messages\r\n                await dispatch(fetchMessages({ roomName, token, lastMessageId: lastFetchedMessageId }));\r\n                setLoadingMore(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async  () => {\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n        try {\r\n            const result = await dispatch(sendMessage({ roomName, message:messageInput, messageType, file, token })).unwrap();\r\n            console.log(`result:${result}`)\r\n            console.log(`result id:${result.id}`)\r\n            socketRef.current.send(JSON.stringify({\r\n                type: 'message_sent',\r\n                sender: currentUser.id,\r\n                message_id: result.id, \r\n                timestamp: new Date().toISOString(),\r\n              }));\r\n            setMessageInput('');\r\n            setFile(null);\r\n            setMessageType('text'); \r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        }\r\n     \r\n    };\r\n\r\n\r\n   \r\n    const formatTimestamp = (timestamp) => {\r\n        const date = new Date(timestamp);\r\n        return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true });\r\n    };\r\n    const handleAddEmoji = (emoji) => {\r\n      setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\r\n  };\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n        setFile(selectedFile);\r\n        const fileType = selectedFile.type;\r\n        const maxVideoSize = 100 * 1024 * 1024; \r\n        // Set message type based on the file type\r\n        if (fileType.startsWith('image/')) {\r\n            setMessageType('image');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the image\r\n        } else if (fileType === 'image/gif') {\r\n            setMessageType('gif');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the GIF\r\n        } else if (fileType.startsWith('video/')) {\r\n            if (selectedFile.size > maxVideoSize) {\r\n                alert('Video file size must be smaller than 100MB.');\r\n                return; \r\n            }\r\n            setMessageType('video');\r\n            setFilePreview(URL.createObjectURL(selectedFile)); // Preview the video\r\n        } else {\r\n            setMessageType('file');\r\n            setFilePreview(null); // No preview for other file types\r\n        }\r\n    }\r\n};\r\n  \r\n    return (\r\n        <div className=\"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \">\r\n        {/* Header */}\r\n        <div className=\"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 mt-16\">\r\n          <img\r\n            src={user.profile_pic || 'https://via.placeholder.com/800x500'}\r\n            alt={user.username}\r\n            className=\"w-10 h-10 rounded-full mr-3 object-cover\"\r\n          />\r\n          <span className=\"text-lg font-semibold\">{user.username}</span>\r\n          <div className={`ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`}></div>\r\n                <span className=\"ml-1 text-sm\">\r\n                    {user.is_online ? 'Online' : 'Offline'}\r\n                </span>\r\n                <button \r\n                  onClick={startVideoCall} \r\n                  className=\"ml-auto text-white bg-green-500 rounded-full p-2\"\r\n                >\r\n                  📹 Video Call\r\n                </button>\r\n        </div>\r\n\r\n            {/* File Preview Section */}\r\n            {filePreview && (\r\n                <div className=\"flex items-center justify-center p-4 border-b\">\r\n                    {messageType === 'image' && (\r\n                        <img src={filePreview} alt=\"Preview\" className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                    {messageType === 'video' && (\r\n                        <video src={filePreview} controls className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                    {messageType === 'gif' && (\r\n                        <img src={filePreview} alt=\"Preview\" className=\"w-32 h-32 object-cover rounded-lg\" />\r\n                    )}\r\n                </div>\r\n            )}\r\n      \r\n        {/* Chat messages container */}\r\n        <div className=\"flex-1 overflow-y-auto bg-gray-100 p-4\">\r\n          {messages.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              className={`p-2 rounded-lg mb-2 ${\r\n                currentUser.id === msg.sender\r\n                  ? 'bg-blue-500 text-white self-end'\r\n                  : 'bg-gray-400  text-white self-end'\r\n              }`}\r\n              style={{\r\n                maxWidth: '50%',\r\n                marginLeft: currentUser.id === msg.sender ? 'auto' : '0',\r\n              }}\r\n            >\r\n                    {msg.message_type === 'text' ? ( \r\n                        <span>{msg.message}</span>\r\n                    ) : msg.file ? ( \r\n                        // Check the media type to render images, GIFs, or videos\r\n                        <>\r\n                        {msg.message_type === 'image' ? (\r\n                            <img\r\n                                src={msg.file}\r\n                                alt=\"Image\"\r\n                                className=\"max-w-full w-[300px] h-auto object-cover rounded-lg shadow-md\"\r\n                            />\r\n                        ) : msg.message_type === 'video' ? (\r\n                            <video\r\n                                src={msg.file}\r\n                                controls\r\n                                className=\"max-w-full w-[300px] h-auto rounded-lg shadow-md\"\r\n                            />\r\n                            ) : msg.message_type === 'gif' ? (\r\n                                <img\r\n                                    src={msg.file}\r\n                                    alt=\"GIF\"\r\n                                    className=\"max-w-full w-[300px] h-auto object-cover rounded-lg shadow-md\"\r\n                                />\r\n                            ) : (\r\n                                <span>No file available</span> // Optional fallback for unrecognized file types\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <span>No message available</span>\r\n                    )}\r\n                   <div className=\"message-status flex items-center mt-1\">\r\n    {/* Sent, Delivered, Read Status */}\r\n    {msg.read_by?.includes(currentUser.id) ? (\r\n        <div className=\"flex items-center\">\r\n            <span className=\"text-green-500\" title=\"Read\">\r\n                ✔✔\r\n            </span>\r\n            <span className=\"ml-1 text-xs text-white\">Read</span>\r\n        </div>\r\n    ) : msg.read_by?.includes(user.id) ? (\r\n        <div className=\"flex items-center\">\r\n            <span className=\"text-yellow-500\" title=\"Delivered\">\r\n                ✔✔\r\n            </span>\r\n            <span className=\"ml-1 text-xs text-white\">Seen</span>\r\n        </div>\r\n    ) : msg.read_by?.length > 0 ? (\r\n        <div className=\"flex items-center\">\r\n            <span className=\"text-white\" title=\"Delivered\">\r\n                ✔✔\r\n            </span>\r\n            <span className=\"ml-1 text-xs text-white\">Delivered</span>\r\n        </div>\r\n    ) : (\r\n        <div className=\"flex items-center\">\r\n            <span className=\"text-white\" title=\"Sent\">\r\n                ✔\r\n            </span>\r\n            <span className=\"ml-1 text-xs text-white\">Sent</span>\r\n        </div>\r\n    )}\r\n</div>\r\n\r\n              <div className=\"text-xs text-orange-50 mt-1 text-right\">\r\n                {formatTimestamp(msg.timestamp)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n           \r\n              \r\n        {/* Message input */}\r\n        <div className=\"flex items-center p-2 border-t bg-white\">\r\n               {/* Emoji Picker Button */}\r\n               <button\r\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                    className=\"text-gray-500 hover:text-gray-800 mr-2\"\r\n                >\r\n                    {showEmojiPicker ? <FaTimes size={20} /> : <FaSmile size={20} />}\r\n                </button>\r\n\r\n                {showEmojiPicker && (\r\n                    <div className=\"absolute bottom-12 left-0 z-10\">\r\n                        <Picker data={data} onEmojiSelect={handleAddEmoji} />\r\n                    </div>\r\n                )}\r\n                \r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            value={messageInput}\r\n            onChange={(e) => setMessageInput(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <label className=\"ml-2\">\r\n                    <FaPaperclip size={20} />\r\n                    <input type=\"file\" onChange={handleFileChange} className=\"hidden\" accept=\"image/*,video/*,.gif\" />\r\n            </label>\r\n            \r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n\r\n        {incomingCall && (\r\n                <div className=\"fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white p-4 rounded-lg\">\r\n                    <p>{incomingCallerName} is calling...</p>\r\n                    <button onClick={() => acceptCall(offerdata)} className=\"bg-green-500 p-2 rounded-lg\">Accept</button>\r\n                    <button onClick={() => setIncomingCall(false)} className=\"bg-red-500 p-2 rounded-lg\">Decline</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Video Call Stream */}\r\n            {inCall && (\r\n                <div className=\"video-call\">\r\n                    <h2>Video Call in Progress</h2>\r\n                    <video autoPlay playsInline ref={(video) => { if (video) video.srcObject = localStream; }} />\r\n                    <video autoPlay playsInline ref={(video) => { if (video) video.srcObject = remoteStream; }} />\r\n                    <button onClick={endCall}>End Call</button>\r\n                </div>\r\n            )}\r\n        \r\n\r\n      </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default ChatDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}