{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL } from '../config';\nimport store from '../store'; // Import your Redux store\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL\n});\n\n// Request interceptor to add token to headers\napiClient.interceptors.request.use(config => {\n  const state = store.getState();\n  const token = state.auth.token; // Access token from Redux store\n\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default apiClient;","map":{"version":3,"names":["axios","BASE_URL","store","apiClient","create","baseURL","interceptors","request","use","config","state","getState","token","auth","headers","error","Promise","reject"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/config/apiClient.js"],"sourcesContent":["import axios from 'axios';\r\nimport { BASE_URL } from '../config';\r\nimport store from '../store'; // Import your Redux store\r\n\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\n// Request interceptor to add token to headers\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const state = store.getState();\r\n    const token = state.auth.token; // Access token from Redux store\r\n\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default apiClient;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,KAAK,MAAM,UAAU,CAAC,CAAC;;AAG9B,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC7BC,OAAO,EAAEJ;AACX,CAAC,CAAC;;AAEF;AACAE,SAAS,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAGF,KAAK,CAACG,IAAI,CAACD,KAAK,CAAC,CAAC;;EAEhC,IAAIA,KAAK,EAAE;IACTH,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUF,KAAK,EAAE;EACrD;EAEA,OAAOH,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeZ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}