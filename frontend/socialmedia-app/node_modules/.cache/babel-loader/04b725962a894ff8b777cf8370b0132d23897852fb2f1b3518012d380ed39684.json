{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../../config';\nimport { showSuccessToast } from '../../components/CustomToast';\n\n// Updated to accept page parameter\nexport const fetchFeed = createAsyncThunk('feed/fetchFeed', async ({\n  token,\n  page\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/api/interactions/feed/?page=${page}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      posts: response.data,\n      page\n    };\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const updatePostLikes = createAsyncThunk('feed/updatePostLikes', async ({\n  postId,\n  token,\n  userId\n}, {\n  dispatch\n}) => {\n  const response = await axios.post(`${BASE_URL}/api/likes/`, {\n    post: postId\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  dispatch(fetchFeed({\n    token,\n    userId\n  }));\n  if (response.status === 201) {\n    showSuccessToast(\"Post Liked!\");\n    return {\n      postId,\n      liked: true\n    };\n  } else if (response.status === 204) {\n    showSuccessToast(\"Post Uniked!\");\n    return {\n      postId,\n      liked: false\n    };\n  } else {\n    throw new Error('Failed to like/unlike post');\n  }\n});\nexport const updatePostBookmarks = createAsyncThunk('feed/updatePostBookmarks', async ({\n  postId,\n  token,\n  isBookmarked\n}, {\n  dispatch\n}) => {\n  if (isBookmarked) {\n    // If already bookmarked, unbookmark the post\n    await axios.delete(`${BASE_URL}/api/bookmarks/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    showSuccessToast(\"Post Unmarked!\");\n    return {\n      postId,\n      bookmarked: false\n    };\n  } else {\n    // If not bookmarked, bookmark the post\n    await axios.post(`${BASE_URL}/api/bookmarks/`, {\n      post: postId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    showSuccessToast(\"Post Bookmarked!\");\n    return {\n      postId,\n      bookmarked: true\n    };\n  }\n});\nexport const reportPost = createAsyncThunk('feed/reportPost', async ({\n  postId,\n  reason,\n  additionalInfo,\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/api/posts/${postId}/report/`, {\n      reason,\n      // Include reason in request body\n      additionalInfo // Include additional info in request body\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst feedSlice = createSlice({\n  name: 'feed',\n  initialState: {\n    posts: [],\n    loading: false,\n    error: null,\n    hasMore: true\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchFeed.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchFeed.fulfilled, (state, action) => {\n      const {\n        posts,\n        page\n      } = action.payload;\n      state.loading = false;\n      state.error = null;\n      if (page === 1) {\n        // Replace posts if it's the first page\n        state.posts = posts;\n      } else {\n        // Append posts for subsequent pages\n        state.posts = [...state.posts, ...posts];\n      }\n\n      // Determine if there are more posts to load\n      state.hasMore = posts.length > 0;\n    }).addCase(fetchFeed.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    }).addCase(updatePostLikes.fulfilled, (state, action) => {\n      const postIndex = state.posts.findIndex(post => post.id === action.payload.postId);\n      if (postIndex !== -1) {\n        state.posts[postIndex].liked = action.payload.liked;\n        state.posts[postIndex].total_likes += action.payload.liked ? 1 : -1;\n      }\n    }).addCase(updatePostBookmarks.fulfilled, (state, action) => {\n      const postIndex = state.posts.findIndex(post => post.id === action.payload.postId);\n      if (postIndex !== -1) {\n        state.posts[postIndex].bookmarked = action.payload.bookmarked;\n      }\n    }).addCase(reportPost.pending, state => {\n      state.loading = true;\n    }).addCase(reportPost.fulfilled, (state, action) => {\n      state.loading = false;\n      // Handle successful report (e.g., show a success message, update state if needed)\n    }).addCase(reportPost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      // Optionally handle errors here\n    });\n  }\n});\nexport default feedSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","BASE_URL","showSuccessToast","fetchFeed","token","page","rejectWithValue","response","get","headers","Authorization","posts","data","error","updatePostLikes","postId","userId","dispatch","post","status","liked","Error","updatePostBookmarks","isBookmarked","delete","bookmarked","reportPost","reason","additionalInfo","feedSlice","name","initialState","loading","hasMore","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","length","rejected","message","postIndex","findIndex","id","total_likes","reducer"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/features/auth/feedSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; \r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../config';\r\nimport { showSuccessToast } from '../../components/CustomToast';\r\n\r\n// Updated to accept page parameter\r\nexport const fetchFeed = createAsyncThunk(\r\n  'feed/fetchFeed',\r\n  async ({ token, page }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/interactions/feed/?page=${page}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return { posts: response.data, page };\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updatePostLikes = createAsyncThunk(\r\n  'feed/updatePostLikes',\r\n  async ({ postId, token, userId }, { dispatch }) => {\r\n    const response = await axios.post(`${BASE_URL}/api/likes/`, {\r\n      post: postId,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    dispatch(fetchFeed({ token, userId }));\r\n    if (response.status === 201) {\r\n      showSuccessToast(\"Post Liked!\");\r\n      return { postId, liked: true };\r\n    } else if (response.status === 204) {\r\n      showSuccessToast(\"Post Uniked!\");\r\n      return { postId, liked: false };\r\n    } else {\r\n      throw new Error('Failed to like/unlike post');\r\n    }\r\n  }\r\n);\r\n\r\nexport const updatePostBookmarks = createAsyncThunk(\r\n  'feed/updatePostBookmarks',\r\n  async ({ postId, token, isBookmarked }, { dispatch }) => {\r\n    if (isBookmarked) {\r\n      // If already bookmarked, unbookmark the post\r\n      await axios.delete(`${BASE_URL}/api/bookmarks/${postId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      showSuccessToast(\"Post Unmarked!\");\r\n      return { postId, bookmarked: false };\r\n    } else {\r\n      // If not bookmarked, bookmark the post\r\n      await axios.post(`${BASE_URL}/api/bookmarks/`, { post: postId }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      showSuccessToast(\"Post Bookmarked!\");\r\n      return { postId, bookmarked: true };\r\n    }\r\n  }\r\n);\r\nexport const reportPost = createAsyncThunk(\r\n  'feed/reportPost',\r\n  async ({ postId, reason, additionalInfo, token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${BASE_URL}/api/posts/${postId}/report/`,\r\n        {\r\n          reason,          // Include reason in request body\r\n          additionalInfo,  // Include additional info in request body\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\nconst feedSlice = createSlice({\r\n  name: 'feed',\r\n  initialState: {\r\n    posts: [],\r\n    loading: false,\r\n    error: null,\r\n    hasMore: true,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchFeed.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchFeed.fulfilled, (state, action) => {\r\n        const { posts, page } = action.payload;\r\n        state.loading = false;\r\n        state.error = null;\r\n\r\n        if (page === 1) {\r\n          // Replace posts if it's the first page\r\n          state.posts = posts;\r\n        } else {\r\n          // Append posts for subsequent pages\r\n          state.posts = [...state.posts, ...posts];\r\n        }\r\n\r\n        // Determine if there are more posts to load\r\n        state.hasMore = posts.length > 0;\r\n      })\r\n      .addCase(fetchFeed.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message;\r\n      })\r\n      .addCase(updatePostLikes.fulfilled, (state, action) => {\r\n        const postIndex = state.posts.findIndex(post => post.id === action.payload.postId);\r\n        if (postIndex !== -1) {\r\n          state.posts[postIndex].liked = action.payload.liked;\r\n          state.posts[postIndex].total_likes += action.payload.liked ? 1 : -1;\r\n        }\r\n      })\r\n      .addCase(updatePostBookmarks.fulfilled, (state, action) => {\r\n        const postIndex = state.posts.findIndex(post => post.id === action.payload.postId);\r\n        if (postIndex !== -1) {\r\n          state.posts[postIndex].bookmarked = action.payload.bookmarked;\r\n        }\r\n      })\r\n      .addCase(reportPost.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(reportPost.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        // Handle successful report (e.g., show a success message, update state if needed)\r\n      })\r\n      .addCase(reportPost.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        // Optionally handle errors here\r\n      });\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nexport default feedSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}