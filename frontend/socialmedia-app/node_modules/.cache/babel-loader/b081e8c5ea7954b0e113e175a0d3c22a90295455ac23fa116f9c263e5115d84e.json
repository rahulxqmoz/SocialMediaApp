{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\ChatDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages, sendMessage } from '../features/auth/chatSlice';\nimport { FaSmile, FaTimes } from 'react-icons/fa'; // Emoji toggle icons\nimport Picker from '@emoji-mart/react'; // Emoji picker component\nimport data from '@emoji-mart/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDialog = ({\n  roomName,\n  user\n}) => {\n  _s();\n  console.log(`roomName: ${roomName}`);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const messages = useSelector(state => state.chat.messages);\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const socketRef = useRef(null); // Using useRef for socket\n  const chatRooms = useSelector(state => state.chat.rooms);\n  const currentUser = useSelector(state => state.user.user);\n  const room = useSelector(state => state.chat.rooms);\n  const messagesEndRef = useRef(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const peerConnectionRef = useRef(null);\n  const [inCall, setInCall] = useState(false);\n  console.log(`roomsssss${room}`);\n  console.log(messages);\n  console.log(user.id, currentUser.id);\n  const startVideoCall = async () => {\n    if (inCall) {\n      console.log(\"Already in a call\");\n      return; // Prevent starting a new call if already in a call\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setLocalStream(stream);\n      setInCall(true);\n\n      // Initialize peer connection\n      peerConnectionRef.current = new RTCPeerConnection();\n\n      // Add local stream tracks to the peer connection\n      stream.getTracks().forEach(track => {\n        peerConnectionRef.current.addTrack(track, stream);\n      });\n\n      // Handle remote stream\n      peerConnectionRef.current.ontrack = event => {\n        const [remoteStream] = event.streams;\n        setRemoteStream(remoteStream);\n      };\n\n      // Handle ICE candidates\n      peerConnectionRef.current.onicecandidate = event => {\n        if (event.candidate) {\n          socketRef.current.send(JSON.stringify({\n            candidate: event.candidate\n          }));\n        }\n      };\n\n      // Create offer and set local description\n      const offer = await peerConnectionRef.current.createOffer();\n      await peerConnectionRef.current.setLocalDescription(offer);\n\n      // Send offer to the other user\n      socketRef.current.send(JSON.stringify({\n        type: 'video-call-offer',\n        from: currentUser.id,\n        to: user.id,\n        offer: offer\n      }));\n    } catch (error) {\n      console.error('Error accessing media devices.', error);\n    }\n  };\n  const acceptCall = async data => {\n    setIncomingCall(false);\n    try {\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n      const answer = await peerConnectionRef.current.createAnswer();\n      await peerConnectionRef.current.setLocalDescription(answer);\n\n      // Send answer back to the caller\n      socketRef.current.send(JSON.stringify({\n        type: 'video-call-answer',\n        from: currentUser.id,\n        to: data.from,\n        answer: answer\n      }));\n    } catch (error) {\n      console.error(\"Error accepting call:\", error);\n    }\n  };\n  const rejectCall = from => {\n    setIncomingCall(false);\n    socketRef.current.send(JSON.stringify({\n      type: 'video-call-rejected',\n      from: currentUser.id,\n      to: from\n    }));\n  };\n  const endCall = () => {\n    // Stop all tracks in the local stream\n    localStream.getTracks().forEach(track => track.stop());\n\n    // Close the peer connection\n    if (peerConnectionRef.current) {\n      peerConnectionRef.current.close();\n      peerConnectionRef.current = null;\n    }\n\n    // Clean up state\n    setLocalStream(null);\n    setRemoteStream(null);\n    setInCall(false);\n  };\n  useEffect(() => {\n    if (roomName && token) {\n      dispatch({\n        type: 'chat/resetMessages'\n      });\n      // Step 1: Fetch all chat rooms to check if the room exists\n      dispatch(fetchChatRooms({\n        token\n      })).then(action => {\n        const roomExists = chatRooms.some(room => room.name === roomName);\n        if (roomExists) {\n          // Room exists, fetch messages for this room\n          dispatch(fetchMessages({\n            roomName,\n            token\n          }));\n        } else {\n          // Room doesn't exist, create it first\n          dispatch(createChatRoom({\n            roomName,\n            participants: [user.id, currentUser.id],\n            token\n          })).then(() => {\n            // After creating the room, fetch the messages\n            dispatch(fetchMessages({\n              roomName,\n              token\n            }));\n          });\n        }\n      });\n    }\n\n    // WebSocket connection setup\n    socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\n    socketRef.current.onopen = () => {\n      console.log(\"WebSocket connection opened\");\n    };\n\n    // socketRef.current.onmessage = (e) => {\n    //     const data = JSON.parse(e.data);\n    //     console.log(\"WebSocket data received:\", data); \n    //     if (data && data.message && data.sender) {\n    //         dispatch(addMessage({\n    //             sender: data.sender,\n    //             message: data.message,\n    //             timestamp: data.timestamp || new Date().toISOString(),  // Use provided timestamp or current time if not available\n    //         }));\n    //     }\n    //     // dispatch(addMessage({\n    //     //     sender: data.sender,\n    //     //     message: data.message,\n    //     //     timestamp: new Date().toISOString(),  // Or use the timestamp from data if available\n    //     // }));\n    // };\n    socketRef.current.onmessage = async e => {\n      const data = JSON.parse(e.data);\n      console.log(\"WebSocket data received:\", data);\n      if (!peerConnectionRef.current) {\n        // Initialize peer connection if not already done\n        peerConnectionRef.current = new RTCPeerConnection();\n\n        // Ensure localStream is not null before adding tracks\n        if (localStream) {\n          localStream.getTracks().forEach(track => {\n            peerConnectionRef.current.addTrack(track, localStream);\n          });\n        }\n      }\n      if (data.type === 'offer') {\n        if (peerConnectionRef.current) {\n          try {\n            await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n            const answer = await peerConnectionRef.current.createAnswer();\n            await peerConnectionRef.current.setLocalDescription(answer);\n            socketRef.current.send(JSON.stringify({\n              type: 'answer',\n              answer\n            }));\n          } catch (error) {\n            console.error(\"Error handling offer:\", error);\n          }\n        } else {\n          console.error(\"Peer connection is not initialized.\");\n        }\n      } else if (data.type === 'answer') {\n        if (peerConnectionRef.current) {\n          try {\n            await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n          } catch (error) {\n            console.error(\"Error handling answer:\", error);\n          }\n        } else {\n          console.error(\"Peer connection is not initialized.\");\n        }\n      } else if (data.candidate) {\n        if (peerConnectionRef.current) {\n          try {\n            await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          } catch (error) {\n            console.error(\"Error adding ICE candidate:\", error);\n          }\n        } else {\n          console.error(\"Peer connection is not initialized.\");\n        }\n      } else if (data.message && data.sender) {\n        dispatch(addMessage({\n          sender: data.sender,\n          message: data.message,\n          timestamp: data.timestamp || new Date().toISOString()\n        }));\n      }\n    };\n    socketRef.current.onclose = event => {\n      console.log('WebSocket closed. Attempting to reconnect...');\n      console.error(\"WebSocket closed unexpectedly:\", event.reason);\n    };\n    return () => {\n      socketRef.current.close();\n    };\n  }, [roomName, token, dispatch]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (messageInput && socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(JSON.stringify({\n        message: messageInput,\n        user_id: user.id\n      }));\n      console.log(`roomname=${roomName},message:${messageInput}`);\n      // dispatch(sendMessage({ roomName, message: messageInput, token }));\n      setMessageInput('');\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const handleAddEmoji = emoji => {\n    setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 mt-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic || 'https://via.placeholder.com/800x500',\n        alt: user.username,\n        className: \"w-10 h-10 rounded-full mr-3 object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg font-semibold\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-sm\",\n        children: user.is_online ? 'Online' : 'Offline'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startVideoCall,\n        className: \"ml-auto text-white bg-green-500 rounded-full p-2\",\n        children: \"\\uD83D\\uDCF9 Video Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto bg-gray-100 p-4\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded-lg mb-2 ${currentUser.id === msg.sender ? 'bg-blue-500 text-white self-end' : 'bg-gray-400  text-white self-end'}`,\n        style: {\n          maxWidth: '50%',\n          marginLeft: currentUser.id === msg.sender ? 'auto' : '0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-orange-50 mt-1 text-right\",\n          children: formatTimestamp(msg.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-2 border-t bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEmojiPicker(!showEmojiPicker),\n        className: \"text-gray-500 hover:text-gray-800 mr-2\",\n        children: showEmojiPicker ? /*#__PURE__*/_jsxDEV(FaTimes, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(FaSmile, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 16\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-12 left-0 z-10\",\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          data: data,\n          onEmojiSelect: handleAddEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this), localStream && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-0 right-0 p-2 bg-gray-800 text-white z-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        playsInline: true,\n        autoPlay: true,\n        muted: true,\n        ref: video => {\n          if (video) video.srcObject = localStream;\n        },\n        className: \"w-40 h-40 rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-red-500 mt-2\",\n        onClick: () => {\n          // Stop local stream\n          localStream.getTracks().forEach(track => track.stop());\n          setLocalStream(null);\n          setRemoteStream(null);\n          setInCall(null);\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 3\n    }, this), remoteStream && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-0 right-52 p-2 bg-gray-800 text-white z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        playsInline: true,\n        autoPlay: true,\n        ref: video => {\n          if (video) video.srcObject = remoteStream;\n        },\n        className: \"w-40 h-40 rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatDialog, \"Y9ClmV1J/mhwDLz5R8iKHlVGmwc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ChatDialog;\nexport default ChatDialog;\nvar _c;\n$RefreshReg$(_c, \"ChatDialog\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useDispatch","useSelector","addMessage","createChatRoom","fetchChatRooms","fetchMessages","sendMessage","FaSmile","FaTimes","Picker","data","jsxDEV","_jsxDEV","ChatDialog","roomName","user","_s","console","log","dispatch","token","state","auth","messages","chat","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","socketRef","chatRooms","rooms","currentUser","room","messagesEndRef","localStream","setLocalStream","remoteStream","setRemoteStream","peerConnectionRef","inCall","setInCall","id","startVideoCall","stream","navigator","mediaDevices","getUserMedia","video","audio","current","RTCPeerConnection","getTracks","forEach","track","addTrack","ontrack","event","streams","onicecandidate","candidate","send","JSON","stringify","offer","createOffer","setLocalDescription","type","from","to","error","acceptCall","setIncomingCall","setRemoteDescription","RTCSessionDescription","answer","createAnswer","rejectCall","endCall","stop","close","then","action","roomExists","some","name","participants","WebSocket","onopen","onmessage","e","parse","addIceCandidate","RTCIceCandidate","message","sender","timestamp","Date","toISOString","onclose","reason","_messagesEndRef$curre","scrollIntoView","behavior","handleSendMessage","readyState","OPEN","user_id","formatTimestamp","date","toLocaleTimeString","hour","minute","hour12","handleAddEmoji","emoji","prevInput","native","className","children","src","profile_pic","alt","username","fileName","_jsxFileName","lineNumber","columnNumber","is_online","onClick","map","msg","index","style","maxWidth","marginLeft","ref","size","onEmojiSelect","value","onChange","target","onKeyPress","key","placeholder","playsInline","autoPlay","muted","srcObject","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/ChatDialog.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessage, createChatRoom, fetchChatRooms, fetchMessages,sendMessage } from '../features/auth/chatSlice';\r\nimport { FaSmile, FaTimes } from 'react-icons/fa'; // Emoji toggle icons\r\nimport Picker from '@emoji-mart/react'; // Emoji picker component\r\nimport data from '@emoji-mart/data';\r\nconst ChatDialog = ({ roomName, user }) => {\r\n    console.log(`roomName: ${roomName}`);\r\n    const dispatch = useDispatch();\r\n    const token = useSelector((state) => state.auth.token);\r\n    const messages = useSelector((state) => state.chat.messages);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const socketRef = useRef(null); // Using useRef for socket\r\n    const chatRooms = useSelector((state) => state.chat.rooms);\r\n    const currentUser = useSelector((state) => state.user.user);\r\n    const room = useSelector((state)=>state.chat.rooms)\r\n    const messagesEndRef = useRef(null);\r\n    const [localStream, setLocalStream] = useState(null);\r\n    const [remoteStream, setRemoteStream] = useState(null);\r\n    const peerConnectionRef = useRef(null);\r\n    const [inCall, setInCall] = useState(false);\r\n    console.log(`roomsssss${room}`)\r\n    console.log(messages)\r\n    console.log(user.id,currentUser.id)\r\n\r\n    const startVideoCall = async () => {\r\n      if (inCall) {\r\n        console.log(\"Already in a call\");\r\n        return; // Prevent starting a new call if already in a call\r\n      }\r\n  \r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n        setLocalStream(stream);\r\n        setInCall(true);\r\n  \r\n        // Initialize peer connection\r\n        peerConnectionRef.current = new RTCPeerConnection();\r\n  \r\n        // Add local stream tracks to the peer connection\r\n        stream.getTracks().forEach(track => {\r\n          peerConnectionRef.current.addTrack(track, stream);\r\n        });\r\n  \r\n        // Handle remote stream\r\n        peerConnectionRef.current.ontrack = (event) => {\r\n          const [remoteStream] = event.streams;\r\n          setRemoteStream(remoteStream);\r\n        };\r\n  \r\n        // Handle ICE candidates\r\n        peerConnectionRef.current.onicecandidate = (event) => {\r\n          if (event.candidate) {\r\n            socketRef.current.send(JSON.stringify({ candidate: event.candidate }));\r\n          }\r\n        };\r\n  \r\n        // Create offer and set local description\r\n        const offer = await peerConnectionRef.current.createOffer();\r\n        await peerConnectionRef.current.setLocalDescription(offer);\r\n  \r\n        // Send offer to the other user\r\n        socketRef.current.send(JSON.stringify({\r\n          type: 'video-call-offer',\r\n          from: currentUser.id,\r\n          to: user.id,\r\n          offer: offer,\r\n        }));\r\n  \r\n      } catch (error) {\r\n        console.error('Error accessing media devices.', error);\r\n      }\r\n    };\r\n  \r\n    const acceptCall = async (data) => {\r\n      setIncomingCall(false);\r\n      try {\r\n        await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n        const answer = await peerConnectionRef.current.createAnswer();\r\n        await peerConnectionRef.current.setLocalDescription(answer);\r\n  \r\n        // Send answer back to the caller\r\n        socketRef.current.send(JSON.stringify({\r\n          type: 'video-call-answer',\r\n          from: currentUser.id,\r\n          to: data.from,\r\n          answer: answer,\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error accepting call:\", error);\r\n      }\r\n    };\r\n  \r\n    const rejectCall = (from) => {\r\n      setIncomingCall(false);\r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'video-call-rejected',\r\n        from: currentUser.id,\r\n        to: from,\r\n      }));\r\n    };\r\n  \r\n    const endCall = () => {\r\n      // Stop all tracks in the local stream\r\n      localStream.getTracks().forEach(track => track.stop());\r\n  \r\n      // Close the peer connection\r\n      if (peerConnectionRef.current) {\r\n        peerConnectionRef.current.close();\r\n        peerConnectionRef.current = null;\r\n      }\r\n  \r\n      // Clean up state\r\n      setLocalStream(null);\r\n      setRemoteStream(null);\r\n      setInCall(false);\r\n    };\r\n  \r\n\r\n    useEffect(() => {\r\n        if (roomName && token) {\r\n\r\n            dispatch({ type: 'chat/resetMessages' });\r\n            // Step 1: Fetch all chat rooms to check if the room exists\r\n            dispatch(fetchChatRooms({ token })).then((action) => {\r\n                const roomExists = chatRooms.some(room => room.name === roomName);\r\n\r\n                if (roomExists) {\r\n                    // Room exists, fetch messages for this room\r\n                    dispatch(fetchMessages({ roomName, token }));\r\n                } else {\r\n                    // Room doesn't exist, create it first\r\n                    dispatch(createChatRoom({ roomName,participants:[user.id,currentUser.id], token }))\r\n                        .then(() => {\r\n                            // After creating the room, fetch the messages\r\n                            dispatch(fetchMessages({ roomName, token }));\r\n                        });\r\n                }\r\n            });\r\n        }\r\n       \r\n\r\n\r\n        // WebSocket connection setup\r\n        socketRef.current = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/?token=${token}`);\r\n\r\n        socketRef.current.onopen = () => {\r\n            console.log(\"WebSocket connection opened\");\r\n        };\r\n        \r\n        // socketRef.current.onmessage = (e) => {\r\n        //     const data = JSON.parse(e.data);\r\n        //     console.log(\"WebSocket data received:\", data); \r\n        //     if (data && data.message && data.sender) {\r\n        //         dispatch(addMessage({\r\n        //             sender: data.sender,\r\n        //             message: data.message,\r\n        //             timestamp: data.timestamp || new Date().toISOString(),  // Use provided timestamp or current time if not available\r\n        //         }));\r\n        //     }\r\n        //     // dispatch(addMessage({\r\n        //     //     sender: data.sender,\r\n        //     //     message: data.message,\r\n        //     //     timestamp: new Date().toISOString(),  // Or use the timestamp from data if available\r\n        //     // }));\r\n        // };\r\n        socketRef.current.onmessage = async (e) => {\r\n          const data = JSON.parse(e.data);\r\n          console.log(\"WebSocket data received:\", data);\r\n\r\n          if (!peerConnectionRef.current) {\r\n            // Initialize peer connection if not already done\r\n            peerConnectionRef.current = new RTCPeerConnection();\r\n        \r\n            // Ensure localStream is not null before adding tracks\r\n            if (localStream) {\r\n              localStream.getTracks().forEach(track => {\r\n                peerConnectionRef.current.addTrack(track, localStream);\r\n              });\r\n            }\r\n          }\r\n\r\n          if (data.type === 'offer') {\r\n            if (peerConnectionRef.current) {\r\n              try {\r\n                  await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n                  const answer = await peerConnectionRef.current.createAnswer();\r\n                  await peerConnectionRef.current.setLocalDescription(answer);\r\n                  socketRef.current.send(JSON.stringify({ type: 'answer', answer }));\r\n              } catch (error) {\r\n                  console.error(\"Error handling offer:\", error);\r\n              }\r\n          } else {\r\n              console.error(\"Peer connection is not initialized.\");\r\n          }\r\n          } else if (data.type === 'answer') {\r\n            if (peerConnectionRef.current) {\r\n              try {\r\n                  await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n              } catch (error) {\r\n                  console.error(\"Error handling answer:\", error);\r\n              }\r\n          } else {\r\n              console.error(\"Peer connection is not initialized.\");\r\n          }\r\n          } else if (data.candidate) {\r\n            if (peerConnectionRef.current) {\r\n              try {\r\n                  await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n              } catch (error) {\r\n                  console.error(\"Error adding ICE candidate:\", error);\r\n              }\r\n          } else {\r\n              console.error(\"Peer connection is not initialized.\");\r\n          }\r\n          } else if (data.message && data.sender) {\r\n              dispatch(addMessage({\r\n                  sender: data.sender,\r\n                  message: data.message,\r\n                  timestamp: data.timestamp || new Date().toISOString(),\r\n              }));\r\n          }\r\n      };\r\n\r\n        \r\n        socketRef.current.onclose = (event) => {\r\n            console.log('WebSocket closed. Attempting to reconnect...');\r\n            console.error(\"WebSocket closed unexpectedly:\", event.reason);\r\n        };\r\n        \r\n\r\n        return () => {\r\n            socketRef.current.close();\r\n        };\r\n    }, [roomName, token, dispatch]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        if (messageInput && socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n            socketRef.current.send(JSON.stringify({\r\n                message: messageInput,\r\n                user_id: user.id,\r\n            }));\r\n            console.log(`roomname=${roomName},message:${messageInput}`)\r\n           // dispatch(sendMessage({ roomName, message: messageInput, token }));\r\n            setMessageInput('');\r\n        }\r\n    };\r\n    const formatTimestamp = (timestamp) => {\r\n        const date = new Date(timestamp);\r\n        return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true });\r\n    };\r\n    const handleAddEmoji = (emoji) => {\r\n      setMessageInput(prevInput => prevInput + emoji.native); // Append emoji to message input\r\n  };\r\n  \r\n    return (\r\n        <div className=\"flex flex-col h-full border-2 border-gray-300 rounded-lg shadow-lg \">\r\n        {/* Header */}\r\n        <div className=\"flex items-center p-4 bg-blue-500 text-white sticky top-0 z-10 mt-16\">\r\n          <img\r\n            src={user.profile_pic || 'https://via.placeholder.com/800x500'}\r\n            alt={user.username}\r\n            className=\"w-10 h-10 rounded-full mr-3 object-cover\"\r\n          />\r\n          <span className=\"text-lg font-semibold\">{user.username}</span>\r\n          <div className={`ml-2 w-3 h-3 rounded-full ${user.is_online ? 'bg-green-500' : 'bg-gray-500'}`}></div>\r\n                <span className=\"ml-1 text-sm\">\r\n                    {user.is_online ? 'Online' : 'Offline'}\r\n                </span>\r\n                <button \r\n                  onClick={startVideoCall} \r\n                  className=\"ml-auto text-white bg-green-500 rounded-full p-2\"\r\n                >\r\n                  📹 Video Call\r\n                </button>\r\n        </div>\r\n      \r\n        {/* Chat messages container */}\r\n        <div className=\"flex-1 overflow-y-auto bg-gray-100 p-4\">\r\n          {messages.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              className={`p-2 rounded-lg mb-2 ${\r\n                currentUser.id === msg.sender\r\n                  ? 'bg-blue-500 text-white self-end'\r\n                  : 'bg-gray-400  text-white self-end'\r\n              }`}\r\n              style={{\r\n                maxWidth: '50%',\r\n                marginLeft: currentUser.id === msg.sender ? 'auto' : '0',\r\n              }}\r\n            >\r\n              <span>{msg.message}</span>\r\n              <div className=\"text-xs text-orange-50 mt-1 text-right\">\r\n                {formatTimestamp(msg.timestamp)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      \r\n        {/* Message input */}\r\n        <div className=\"flex items-center p-2 border-t bg-white\">\r\n               {/* Emoji Picker Button */}\r\n               <button\r\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                    className=\"text-gray-500 hover:text-gray-800 mr-2\"\r\n                >\r\n                    {showEmojiPicker ? <FaTimes size={20} /> : <FaSmile size={20} />}\r\n                </button>\r\n\r\n                {showEmojiPicker && (\r\n                    <div className=\"absolute bottom-12 left-0 z-10\">\r\n                        <Picker data={data} onEmojiSelect={handleAddEmoji} />\r\n                    </div>\r\n                )}\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            value={messageInput}\r\n            onChange={(e) => setMessageInput(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"ml-2 bg-blue-500 text-white rounded-lg px-4 py-2 hover:bg-blue-600 transition duration-200\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n\r\n        {localStream && (\r\n  <div className=\"fixed bottom-0 right-0 p-2 bg-gray-800 text-white z-50\">\r\n    <video\r\n      playsInline\r\n      autoPlay\r\n      muted\r\n      ref={(video) => {\r\n        if (video) video.srcObject = localStream;\r\n      }}\r\n      className=\"w-40 h-40 rounded-lg\"\r\n    />\r\n    <button\r\n      className=\"text-red-500 mt-2\"\r\n      onClick={() => {\r\n        // Stop local stream\r\n        localStream.getTracks().forEach((track) => track.stop());\r\n        setLocalStream(null);\r\n        setRemoteStream(null);\r\n        setInCall(null)\r\n      }}\r\n    >\r\n      Close\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n{remoteStream && (\r\n  <div className=\"fixed bottom-0 right-52 p-2 bg-gray-800 text-white z-50\">\r\n    <video\r\n      playsInline\r\n      autoPlay\r\n      ref={(video) => {\r\n        if (video) video.srcObject = remoteStream;\r\n      }}\r\n      className=\"w-40 h-40 rounded-lg\"\r\n    />\r\n  </div>\r\n)}\r\n\r\n      </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default ChatDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}