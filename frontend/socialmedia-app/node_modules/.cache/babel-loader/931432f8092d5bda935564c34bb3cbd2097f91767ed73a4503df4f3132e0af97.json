{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { BASE_URL } from '../../config';\nexport const fetchLikeStatus = createAsyncThunk('likedPosts/fetchLikeStatus', async ({\n  posts,\n  token\n}) => {\n  const likeStatuses = {};\n  for (let post of posts) {\n    const response = await fetch(`${BASE_URL}/api/posts/${post.id}/check_liked/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.ok) {\n      const result = await response.json();\n      likeStatuses[post.id] = result.liked; // Assume the response contains { liked: true/false }\n    }\n  }\n  return likeStatuses;\n});\nexport const handleLikePost = createAsyncThunk('likedPosts/handleLike', async ({\n  postId,\n  token,\n  userId\n}, {\n  dispatch\n}) => {\n  const response = await fetch(`${BASE_URL}/api/likes/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: postId\n    })\n  });\n  dispatch(fetchPosts({\n    userId,\n    token\n  }));\n  if (response.status === 201) {\n    return {\n      postId,\n      liked: true\n    };\n  } else if (response.status === 204) {\n    return {\n      postId,\n      liked: false\n    };\n  } else {\n    throw new Error('Failed to like/unlike post');\n  }\n});\nconst likedPostsSlice = createSlice({\n  name: 'likedPosts',\n  initialState: {},\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchLikeStatus.fulfilled, (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    }).addCase(handleLike.fulfilled, (state, action) => {\n      state[action.payload.postId] = action.payload.liked;\n    });\n  }\n});\nexport default likedPostsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","BASE_URL","fetchLikeStatus","posts","token","likeStatuses","post","response","fetch","id","method","headers","Authorization","ok","result","json","liked","handleLikePost","postId","userId","dispatch","body","JSON","stringify","fetchPosts","status","Error","likedPostsSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","handleLike","reducer"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/features/auth/likeSlice.js"],"sourcesContent":["\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { BASE_URL } from '../../config';\r\n\r\n\r\nexport const fetchLikeStatus = createAsyncThunk(\r\n  'likedPosts/fetchLikeStatus',\r\n  async ({ posts, token }) => {\r\n    const likeStatuses = {};\r\n    for (let post of posts) {\r\n      const response = await fetch(`${BASE_URL}/api/posts/${post.id}/check_liked/`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        likeStatuses[post.id] = result.liked; // Assume the response contains { liked: true/false }\r\n      }\r\n    }\r\n    return likeStatuses;\r\n  }\r\n);\r\n\r\nexport const handleLikePost = createAsyncThunk(\r\n  'likedPosts/handleLike',\r\n  async ({ postId, token ,userId}, { dispatch }) => {\r\n    const response = await fetch(`${BASE_URL}/api/likes/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ post: postId }),\r\n    });\r\n    dispatch(fetchPosts({ userId, token }))\r\n    if (response.status === 201) {\r\n      return { postId, liked: true };\r\n    } else if (response.status === 204) {\r\n      return { postId, liked: false };\r\n    } else {\r\n      throw new Error('Failed to like/unlike post');\r\n    }\r\n    \r\n  }\r\n);\r\n\r\nconst likedPostsSlice = createSlice({\r\n  name: 'likedPosts',\r\n  initialState: {},\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchLikeStatus.fulfilled, (state, action) => {\r\n        return { ...state, ...action.payload };\r\n      })\r\n      .addCase(handleLike.fulfilled, (state, action) => {\r\n        state[action.payload.postId] = action.payload.liked;\r\n      });\r\n  },\r\n});\r\n\r\nexport default likedPostsSlice.reducer;\r\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,cAAc;AAGvC,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,4BAA4B,EAC5B,OAAO;EAAEG,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC1B,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvB,KAAK,IAAIC,IAAI,IAAIH,KAAK,EAAE;IACtB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,cAAcK,IAAI,CAACG,EAAE,eAAe,EAAE;MAC5EC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUR,KAAK;MAChC;IACF,CAAC,CAAC;IACF,IAAIG,QAAQ,CAACM,EAAE,EAAE;MACf,MAAMC,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCV,YAAY,CAACC,IAAI,CAACG,EAAE,CAAC,GAAGK,MAAM,CAACE,KAAK,CAAC,CAAC;IACxC;EACF;EACA,OAAOX,YAAY;AACrB,CACF,CAAC;AAED,OAAO,MAAMY,cAAc,GAAGjB,gBAAgB,CAC5C,uBAAuB,EACvB,OAAO;EAAEkB,MAAM;EAAEd,KAAK;EAAEe;AAAM,CAAC,EAAE;EAAEC;AAAS,CAAC,KAAK;EAChD,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,aAAa,EAAE;IACrDS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUR,KAAK;IAChC,CAAC;IACDiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEjB,IAAI,EAAEY;IAAO,CAAC;EACvC,CAAC,CAAC;EACFE,QAAQ,CAACI,UAAU,CAAC;IAAEL,MAAM;IAAEf;EAAM,CAAC,CAAC,CAAC;EACvC,IAAIG,QAAQ,CAACkB,MAAM,KAAK,GAAG,EAAE;IAC3B,OAAO;MAAEP,MAAM;MAAEF,KAAK,EAAE;IAAK,CAAC;EAChC,CAAC,MAAM,IAAIT,QAAQ,CAACkB,MAAM,KAAK,GAAG,EAAE;IAClC,OAAO;MAAEP,MAAM;MAAEF,KAAK,EAAE;IAAM,CAAC;EACjC,CAAC,MAAM;IACL,MAAM,IAAIU,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AAEF,CACF,CAAC;AAED,MAAMC,eAAe,GAAG5B,WAAW,CAAC;EAClC6B,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE,CAAC,CAAC;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC/B,eAAe,CAACgC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrD,OAAO;QAAE,GAAGD,KAAK;QAAE,GAAGC,MAAM,CAACC;MAAQ,CAAC;IACxC,CAAC,CAAC,CACDJ,OAAO,CAACK,UAAU,CAACJ,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACC,MAAM,CAACC,OAAO,CAACnB,MAAM,CAAC,GAAGkB,MAAM,CAACC,OAAO,CAACrB,KAAK;IACrD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeW,eAAe,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}