{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../../config';\nimport { showErrorToast } from '../../components/ErrorToast';\nimport { showSuccessToast } from '../../components/CustomToast';\n\n// Thunk to fetch posts\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async ({\n  userId,\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/api/posts/?user_id=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response;\n    showErrorToast('Error fetching posts');\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n  }\n});\n\n// Thunk to fetch bookmarks\nexport const fetchBookmarks = createAsyncThunk('posts/fetchBookmarks', async ({\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/api/bookmarks`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.map(bookmark => bookmark.post);\n  } catch (err) {\n    var _err$response2;\n    showErrorToast('Error fetching bookmarks');\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n  }\n});\nexport const createNewPost = createAsyncThunk('posts/createNewPost', async ({\n  postData,\n  userId,\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    if (!postData.content || postData.content.trim() === '') {\n      showErrorToast(\"Content cannot be empty.\");\n      return rejectWithValue(\"Content cannot be empty.\");\n    }\n    const formData = new FormData();\n    formData.append('content', postData.content);\n    formData.append('user', userId);\n    if (postData.image) {\n      const imageBlob = await fetch(postData.image).then(res => res.blob());\n      formData.append('image', imageBlob, 'post.jpg');\n    }\n    if (postData.video) {\n      const videoBlob = await fetch(postData.video).then(res => res.blob());\n      const videoSizeMB = videoBlob.size / (1024 * 1024);\n      if (videoSizeMB > 100) {\n        showErrorToast(\"Video size exceeds 100MB. Please upload a smaller file.\");\n        return rejectWithValue(\"Video size exceeds 100MB.\");\n      }\n      formData.append('video', videoBlob, 'post.mp4');\n    }\n    formData.append('is_approved', true);\n    const response = await axios.post(`${BASE_URL}/api/posts/`, formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    showSuccessToast(\"Post successfully submitted\");\n    return response.data;\n  } catch (err) {\n    var _err$response3;\n    showErrorToast(\"Error while submitting!\");\n    return rejectWithValue(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n  }\n});\n\n// Posts slice to manage posts and bookmarks state\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    posts: [],\n    bookmarks: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.posts = action.payload;\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchBookmarks.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchBookmarks.fulfilled, (state, action) => {\n      state.loading = false;\n      state.bookmarks = action.payload;\n    }).addCase(fetchBookmarks.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","BASE_URL","showErrorToast","showSuccessToast","fetchPosts","userId","token","rejectWithValue","response","get","headers","Authorization","data","err","_err$response","message","fetchBookmarks","map","bookmark","post","_err$response2","createNewPost","postData","content","trim","formData","FormData","append","image","imageBlob","fetch","then","res","blob","video","videoBlob","videoSizeMB","size","_err$response3","postsSlice","name","initialState","posts","bookmarks","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/features/auth/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../config';\r\nimport { showErrorToast } from '../../components/ErrorToast';\r\nimport { showSuccessToast } from '../../components/CustomToast';\r\n\r\n// Thunk to fetch posts\r\nexport const fetchPosts = createAsyncThunk(\r\n  'posts/fetchPosts',\r\n  async ({ userId, token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/posts/?user_id=${userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      showErrorToast('Error fetching posts');\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Thunk to fetch bookmarks\r\nexport const fetchBookmarks = createAsyncThunk(\r\n  'posts/fetchBookmarks',\r\n  async ({ token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/bookmarks`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data.map(bookmark => bookmark.post);\r\n    } catch (err) {\r\n      showErrorToast('Error fetching bookmarks');\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\nexport const createNewPost = createAsyncThunk(\r\n    'posts/createNewPost',\r\n    async ({ postData, userId, token }, { rejectWithValue }) => {\r\n      try {\r\n        if (!postData.content || postData.content.trim() === '') {\r\n          showErrorToast(\"Content cannot be empty.\");\r\n          return rejectWithValue(\"Content cannot be empty.\");\r\n        }\r\n  \r\n        const formData = new FormData();\r\n        formData.append('content', postData.content);\r\n        formData.append('user', userId);\r\n  \r\n        if (postData.image) {\r\n          const imageBlob = await fetch(postData.image).then((res) => res.blob());\r\n          formData.append('image', imageBlob, 'post.jpg');\r\n        }\r\n  \r\n        if (postData.video) {\r\n          const videoBlob = await fetch(postData.video).then((res) => res.blob());\r\n          const videoSizeMB = videoBlob.size / (1024 * 1024);\r\n          if (videoSizeMB > 100) {\r\n            showErrorToast(\"Video size exceeds 100MB. Please upload a smaller file.\");\r\n            return rejectWithValue(\"Video size exceeds 100MB.\");\r\n          }\r\n          formData.append('video', videoBlob, 'post.mp4');\r\n        }\r\n  \r\n        formData.append('is_approved', true);\r\n  \r\n        const response = await axios.post(`${BASE_URL}/api/posts/`, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n  \r\n        showSuccessToast(\"Post successfully submitted\");\r\n        return response.data;\r\n      } catch (err) {\r\n        showErrorToast(\"Error while submitting!\");\r\n        return rejectWithValue(err.response?.data || err.message);\r\n      }\r\n    }\r\n  );\r\n\r\n// Posts slice to manage posts and bookmarks state\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    posts: [],\r\n    bookmarks: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPosts.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.posts = action.payload;\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchBookmarks.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchBookmarks.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.bookmarks = action.payload;\r\n      })\r\n      .addCase(fetchBookmarks.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}