{"ast":null,"code":"/*jshint node:true*/\n'use strict';\n\nvar utils = require('../utils');\n\n/*\n *! Output-related methods\n */\n\nmodule.exports = function (proto) {\n  /**\n   * Add output\n   *\n   * @method FfmpegCommand#output\n   * @category Output\n   * @aliases addOutput\n   *\n   * @param {String|Writable} target target file path or writable stream\n   * @param {Object} [pipeopts={}] pipe options (only applies to streams)\n   * @return FfmpegCommand\n   */\n  proto.addOutput = proto.output = function (target, pipeopts) {\n    var isFile = false;\n    if (!target && this._currentOutput) {\n      // No target is only allowed when called from constructor\n      throw new Error('Invalid output');\n    }\n    if (target && typeof target !== 'string') {\n      if (!('writable' in target) || !target.writable) {\n        throw new Error('Invalid output');\n      }\n    } else if (typeof target === 'string') {\n      var protocol = target.match(/^([a-z]{2,}):/i);\n      isFile = !protocol || protocol[0] === 'file';\n    }\n    if (target && !('target' in this._currentOutput)) {\n      // For backwards compatibility, set target for first output\n      this._currentOutput.target = target;\n      this._currentOutput.isFile = isFile;\n      this._currentOutput.pipeopts = pipeopts || {};\n    } else {\n      if (target && typeof target !== 'string') {\n        var hasOutputStream = this._outputs.some(function (output) {\n          return typeof output.target !== 'string';\n        });\n        if (hasOutputStream) {\n          throw new Error('Only one output stream is supported');\n        }\n      }\n      this._outputs.push(this._currentOutput = {\n        target: target,\n        isFile: isFile,\n        flags: {},\n        pipeopts: pipeopts || {}\n      });\n      var self = this;\n      ['audio', 'audioFilters', 'video', 'videoFilters', 'sizeFilters', 'options'].forEach(function (key) {\n        self._currentOutput[key] = utils.args();\n      });\n      if (!target) {\n        // Call from constructor: remove target key\n        delete this._currentOutput.target;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Specify output seek time\n   *\n   * @method FfmpegCommand#seek\n   * @category Input\n   * @aliases seekOutput\n   *\n   * @param {String|Number} seek seek time in seconds or as a '[hh:[mm:]]ss[.xxx]' string\n   * @return FfmpegCommand\n   */\n  proto.seekOutput = proto.seek = function (seek) {\n    this._currentOutput.options('-ss', seek);\n    return this;\n  };\n\n  /**\n   * Set output duration\n   *\n   * @method FfmpegCommand#duration\n   * @category Output\n   * @aliases withDuration,setDuration\n   *\n   * @param {String|Number} duration duration in seconds or as a '[[hh:]mm:]ss[.xxx]' string\n   * @return FfmpegCommand\n   */\n  proto.withDuration = proto.setDuration = proto.duration = function (duration) {\n    this._currentOutput.options('-t', duration);\n    return this;\n  };\n\n  /**\n   * Set output format\n   *\n   * @method FfmpegCommand#format\n   * @category Output\n   * @aliases toFormat,withOutputFormat,outputFormat\n   *\n   * @param {String} format output format name\n   * @return FfmpegCommand\n   */\n  proto.toFormat = proto.withOutputFormat = proto.outputFormat = proto.format = function (format) {\n    this._currentOutput.options('-f', format);\n    return this;\n  };\n\n  /**\n   * Add stream mapping to output\n   *\n   * @method FfmpegCommand#map\n   * @category Output\n   *\n   * @param {String} spec stream specification string, with optional square brackets\n   * @return FfmpegCommand\n   */\n  proto.map = function (spec) {\n    this._currentOutput.options('-map', spec.replace(utils.streamRegexp, '[$1]'));\n    return this;\n  };\n\n  /**\n   * Run flvtool2/flvmeta on output\n   *\n   * @method FfmpegCommand#flvmeta\n   * @category Output\n   * @aliases updateFlvMetadata\n   *\n   * @return FfmpegCommand\n   */\n  proto.updateFlvMetadata = proto.flvmeta = function () {\n    this._currentOutput.flags.flvmeta = true;\n    return this;\n  };\n};","map":{"version":3,"names":["utils","require","module","exports","proto","addOutput","output","target","pipeopts","isFile","_currentOutput","Error","writable","protocol","match","hasOutputStream","_outputs","some","push","flags","self","forEach","key","args","seekOutput","seek","options","withDuration","setDuration","duration","toFormat","withOutputFormat","outputFormat","format","map","spec","replace","streamRegexp","updateFlvMetadata","flvmeta"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/node_modules/fluent-ffmpeg/lib/options/output.js"],"sourcesContent":["/*jshint node:true*/\n'use strict';\n\nvar utils = require('../utils');\n\n\n/*\n *! Output-related methods\n */\n\nmodule.exports = function(proto) {\n  /**\n   * Add output\n   *\n   * @method FfmpegCommand#output\n   * @category Output\n   * @aliases addOutput\n   *\n   * @param {String|Writable} target target file path or writable stream\n   * @param {Object} [pipeopts={}] pipe options (only applies to streams)\n   * @return FfmpegCommand\n   */\n  proto.addOutput =\n  proto.output = function(target, pipeopts) {\n    var isFile = false;\n\n    if (!target && this._currentOutput) {\n      // No target is only allowed when called from constructor\n      throw new Error('Invalid output');\n    }\n\n    if (target && typeof target !== 'string') {\n      if (!('writable' in target) || !(target.writable)) {\n        throw new Error('Invalid output');\n      }\n    } else if (typeof target === 'string') {\n      var protocol = target.match(/^([a-z]{2,}):/i);\n      isFile = !protocol || protocol[0] === 'file';\n    }\n\n    if (target && !('target' in this._currentOutput)) {\n      // For backwards compatibility, set target for first output\n      this._currentOutput.target = target;\n      this._currentOutput.isFile = isFile;\n      this._currentOutput.pipeopts = pipeopts || {};\n    } else {\n      if (target && typeof target !== 'string') {\n        var hasOutputStream = this._outputs.some(function(output) {\n          return typeof output.target !== 'string';\n        });\n\n        if (hasOutputStream) {\n          throw new Error('Only one output stream is supported');\n        }\n      }\n\n      this._outputs.push(this._currentOutput = {\n        target: target,\n        isFile: isFile,\n        flags: {},\n        pipeopts: pipeopts || {}\n      });\n\n      var self = this;\n      ['audio', 'audioFilters', 'video', 'videoFilters', 'sizeFilters', 'options'].forEach(function(key) {\n        self._currentOutput[key] = utils.args();\n      });\n\n      if (!target) {\n        // Call from constructor: remove target key\n        delete this._currentOutput.target;\n      }\n    }\n\n    return this;\n  };\n\n\n  /**\n   * Specify output seek time\n   *\n   * @method FfmpegCommand#seek\n   * @category Input\n   * @aliases seekOutput\n   *\n   * @param {String|Number} seek seek time in seconds or as a '[hh:[mm:]]ss[.xxx]' string\n   * @return FfmpegCommand\n   */\n  proto.seekOutput =\n  proto.seek = function(seek) {\n    this._currentOutput.options('-ss', seek);\n    return this;\n  };\n\n\n  /**\n   * Set output duration\n   *\n   * @method FfmpegCommand#duration\n   * @category Output\n   * @aliases withDuration,setDuration\n   *\n   * @param {String|Number} duration duration in seconds or as a '[[hh:]mm:]ss[.xxx]' string\n   * @return FfmpegCommand\n   */\n  proto.withDuration =\n  proto.setDuration =\n  proto.duration = function(duration) {\n    this._currentOutput.options('-t', duration);\n    return this;\n  };\n\n\n  /**\n   * Set output format\n   *\n   * @method FfmpegCommand#format\n   * @category Output\n   * @aliases toFormat,withOutputFormat,outputFormat\n   *\n   * @param {String} format output format name\n   * @return FfmpegCommand\n   */\n  proto.toFormat =\n  proto.withOutputFormat =\n  proto.outputFormat =\n  proto.format = function(format) {\n    this._currentOutput.options('-f', format);\n    return this;\n  };\n\n\n  /**\n   * Add stream mapping to output\n   *\n   * @method FfmpegCommand#map\n   * @category Output\n   *\n   * @param {String} spec stream specification string, with optional square brackets\n   * @return FfmpegCommand\n   */\n  proto.map = function(spec) {\n    this._currentOutput.options('-map', spec.replace(utils.streamRegexp, '[$1]'));\n    return this;\n  };\n\n\n  /**\n   * Run flvtool2/flvmeta on output\n   *\n   * @method FfmpegCommand#flvmeta\n   * @category Output\n   * @aliases updateFlvMetadata\n   *\n   * @return FfmpegCommand\n   */\n  proto.updateFlvMetadata =\n  proto.flvmeta = function() {\n    this._currentOutput.flags.flvmeta = true;\n    return this;\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}