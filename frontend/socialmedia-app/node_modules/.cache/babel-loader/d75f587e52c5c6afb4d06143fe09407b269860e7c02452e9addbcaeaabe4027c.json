{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\pages\\\\VerificationWaitingPage .jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificationWaitingPage = () => {\n  _s();\n  const {\n    uidb64,\n    token\n  } = useParams();\n  const [status, setStatus] = useState('pending');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkEmailStatus = async () => {\n      try {\n        const response = await axios.get(`${BASE_URL}/verify-email/${uidb64}/${token}/`);\n        setStatus(response.data.status);\n      } catch (error) {\n        setStatus('invalid');\n      }\n    };\n    const interval = setInterval(() => {\n      checkEmailStatus();\n    }, 5000); // Check every 5 seconds\n\n    return () => clearInterval(interval);\n  }, [uidb64, token]);\n  useEffect(() => {\n    if (status === 'verified') {\n      navigate('/login'); // or '/' for home page\n    } else if (status === 'invalid') {\n      navigate('/error'); // Navigate to an error page or handle accordingly\n    }\n  }, [status, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-waiting-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please wait while we verify your email...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), status === 'pending' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Checking your email verification status...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }, this), status === 'invalid' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Invalid verification link. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationWaitingPage, \"fg8lTZ/LmuYHichJtxxhuhq6pNY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VerificationWaitingPage;\nexport default VerificationWaitingPage;\nvar _c;\n$RefreshReg$(_c, \"VerificationWaitingPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useParams","BASE_URL","jsxDEV","_jsxDEV","VerificationWaitingPage","_s","uidb64","token","status","setStatus","navigate","checkEmailStatus","response","get","data","error","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/pages/VerificationWaitingPage .jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { BASE_URL } from '../config';\r\n\r\nconst VerificationWaitingPage = () => {\r\n  const { uidb64, token } = useParams();\r\n  const [status, setStatus] = useState('pending');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkEmailStatus = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/verify-email/${uidb64}/${token}/`);\r\n        setStatus(response.data.status);\r\n      } catch (error) {\r\n        setStatus('invalid');\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(() => {\r\n      checkEmailStatus();\r\n    }, 5000); // Check every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [uidb64, token]);\r\n\r\n  useEffect(() => {\r\n    if (status === 'verified') {\r\n      navigate('/login'); // or '/' for home page\r\n    } else if (status === 'invalid') {\r\n      navigate('/error'); // Navigate to an error page or handle accordingly\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  return (\r\n    <div className=\"verification-waiting-page\">\r\n      <h2>Please wait while we verify your email...</h2>\r\n      {status === 'pending' && <p>Checking your email verification status...</p>}\r\n      {status === 'invalid' && <p>Invalid verification link. Please try again.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationWaitingPage;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,CAAC,CAAC;EACrC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,GAAGZ,QAAQ,iBAAiBK,MAAM,IAAIC,KAAK,GAAG,CAAC;QAChFE,SAAS,CAACG,QAAQ,CAACE,IAAI,CAACN,MAAM,CAAC;MACjC,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdN,SAAS,CAAC,SAAS,CAAC;MACtB;IACF,CAAC;IAED,MAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCN,gBAAgB,CAAC,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACV,MAAM,EAAEC,KAAK,CAAC,CAAC;EAEnBX,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM,KAAK,UAAU,EAAE;MACzBE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM,IAAIF,MAAM,KAAK,SAAS,EAAE;MAC/BE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACF,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEtB,oBACEP,OAAA;IAAKgB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCjB,OAAA;MAAAiB,QAAA,EAAI;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDhB,MAAM,KAAK,SAAS,iBAAIL,OAAA;MAAAiB,QAAA,EAAG;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACzEhB,MAAM,KAAK,SAAS,iBAAIL,OAAA;MAAAiB,QAAA,EAAG;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,uBAAuB;EAAA,QACDJ,SAAS,EAElBD,WAAW;AAAA;AAAA0B,EAAA,GAHxBrB,uBAAuB;AAuC7B,eAAeA,uBAAuB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}