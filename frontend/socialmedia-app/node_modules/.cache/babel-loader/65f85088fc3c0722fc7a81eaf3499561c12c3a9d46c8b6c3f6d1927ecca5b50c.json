{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\Notification.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchNotifications, markNotificationAsRead } from '../features/auth/notificationSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const {\n    notifications,\n    loading,\n    error\n  } = useSelector(state => state.notifications);\n  useEffect(() => {\n    // Fetch notifications when the component mounts\n    dispatch(fetchNotifications({\n      token\n    }));\n  }, [dispatch, token]);\n  const handleNotificationClick = notificationId => {\n    // Mark the notification as read when clicked\n    dispatch(markNotificationAsRead({\n      notificationId,\n      token\n    }));\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute right-0 mt-2 w-64 bg-white shadow-lg rounded-md overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"p-4 text-gray-600\",\n        children: \"No new notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `p-4 border-b text-gray-800 cursor-pointer ${notification.is_read ? 'bg-gray-100' : 'bg-white'}`,\n        onClick: () => handleNotificationClick(notification.id),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: notification.sender.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [notification.notification_type, \" your post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationList, \"s4e6jknxOEws3FNdbrQvlhR1M08=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchNotifications","markNotificationAsRead","jsxDEV","_jsxDEV","NotificationList","_s","dispatch","token","state","auth","notifications","loading","error","handleNotificationClick","notificationId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","notification","is_read","onClick","id","sender","username","notification_type","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/Notification.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchNotifications, markNotificationAsRead } from '../features/auth/notificationSlice';\r\n\r\nconst NotificationList = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const { notifications, loading, error } = useSelector((state) => state.notifications);\r\n\r\n  useEffect(() => {\r\n    // Fetch notifications when the component mounts\r\n    dispatch(fetchNotifications({ token }));\r\n  }, [dispatch, token]);\r\n\r\n  const handleNotificationClick = (notificationId) => {\r\n    // Mark the notification as read when clicked\r\n    dispatch(markNotificationAsRead({ notificationId, token }));\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"absolute right-0 mt-2 w-64 bg-white shadow-lg rounded-md overflow-hidden\">\r\n      <ul>\r\n        {notifications.length === 0 ? (\r\n          <li className=\"p-4 text-gray-600\">No new notifications</li>\r\n        ) : (\r\n          notifications.map((notification) => (\r\n            <li\r\n              key={notification.id}\r\n              className={`p-4 border-b text-gray-800 cursor-pointer ${\r\n                notification.is_read ? 'bg-gray-100' : 'bg-white'\r\n              }`}\r\n              onClick={() => handleNotificationClick(notification.id)}\r\n            >\r\n              <p className=\"font-semibold\">{notification.sender.username}</p>\r\n              <p>{notification.notification_type} your post</p>\r\n            </li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,EAAEC,sBAAsB,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhG,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EACtD,MAAM;IAAEG,aAAa;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGb,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACE,aAAa,CAAC;EAErFb,SAAS,CAAC,MAAM;IACd;IACAS,QAAQ,CAACN,kBAAkB,CAAC;MAAEO;IAAM,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,CAACD,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAErB,MAAMM,uBAAuB,GAAIC,cAAc,IAAK;IAClD;IACAR,QAAQ,CAACL,sBAAsB,CAAC;MAAEa,cAAc;MAAEP;IAAM,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,IAAII,OAAO,EAAE,oBAAOR,OAAA;IAAAY,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIP,KAAK,EAAE,oBAAOT,OAAA;IAAAY,QAAA,GAAK,SAAO,EAACH,KAAK;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,0EAA0E;IAAAL,QAAA,eACvFZ,OAAA;MAAAY,QAAA,EACGL,aAAa,CAACW,MAAM,KAAK,CAAC,gBACzBlB,OAAA;QAAIiB,SAAS,EAAC,mBAAmB;QAAAL,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAE3DT,aAAa,CAACY,GAAG,CAAEC,YAAY,iBAC7BpB,OAAA;QAEEiB,SAAS,EAAE,6CACTG,YAAY,CAACC,OAAO,GAAG,aAAa,GAAG,UAAU,EAChD;QACHC,OAAO,EAAEA,CAAA,KAAMZ,uBAAuB,CAACU,YAAY,CAACG,EAAE,CAAE;QAAAX,QAAA,gBAExDZ,OAAA;UAAGiB,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAEQ,YAAY,CAACI,MAAM,CAACC;QAAQ;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/DhB,OAAA;UAAAY,QAAA,GAAIQ,YAAY,CAACM,iBAAiB,EAAC,YAAU;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAP5CI,YAAY,CAACG,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQlB,CACL;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAxCID,gBAAgB;EAAA,QACHN,WAAW,EACdC,WAAW,EACiBA,WAAW;AAAA;AAAA+B,EAAA,GAHjD1B,gBAAgB;AA0CtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}