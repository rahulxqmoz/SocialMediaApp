{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../../config';\n\n// Thunk to fetch notifications\nexport const fetchNotifications = createAsyncThunk('notifications/fetchNotifications', async ({\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/api/notifications/notifications/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n  }\n});\n\n// Thunk to mark notification as read\nexport const markNotificationAsRead = createAsyncThunk('notifications/markNotificationAsRead', async ({\n  notificationId,\n  token\n}, {\n  rejectWithValue\n}) => {\n  try {\n    await axios.patch(`${BASE_URL}/api/notifications/notifications/${notificationId}/`, {\n      is_read: true\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return notificationId;\n  } catch (err) {\n    var _err$response2;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n  }\n});\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState: {\n    notifications: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    updateNotificationReadStatus(state, action) {\n      const {\n        notificationId\n      } = action.payload;\n      const notification = state.notifications.find(n => n.id === notificationId);\n      if (notification) {\n        notification.is_read = true;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchNotifications.pending, state => {\n      state.loading = true;\n    }).addCase(fetchNotifications.fulfilled, (state, action) => {\n      state.loading = false;\n      state.notifications = action.payload;\n    }).addCase(fetchNotifications.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    });\n  }\n});\nexport default notificationSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","BASE_URL","fetchNotifications","token","rejectWithValue","response","get","headers","Authorization","data","err","_err$response","message","markNotificationAsRead","notificationId","patch","is_read","_err$response2","notificationSlice","name","initialState","notifications","loading","error","reducers","updateNotificationReadStatus","state","action","payload","notification","find","n","id","extraReducers","builder","addCase","pending","fulfilled","rejected","reducer"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/features/auth/notificationSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../config';\r\n\r\n// Thunk to fetch notifications\r\nexport const fetchNotifications = createAsyncThunk(\r\n  'notifications/fetchNotifications',\r\n  async ({ token }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/notifications/notifications/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Thunk to mark notification as read\r\nexport const markNotificationAsRead = createAsyncThunk(\r\n  'notifications/markNotificationAsRead',\r\n  async ({ notificationId, token }, { rejectWithValue }) => {\r\n    try {\r\n      await axios.patch(\r\n        `${BASE_URL}/api/notifications/notifications/${notificationId}/`,\r\n        { is_read: true },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      return notificationId;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || err.message);\r\n    }\r\n  }\r\n);\r\nconst notificationSlice = createSlice({\r\n    name: 'notifications',\r\n    initialState: {\r\n      notifications: [],\r\n      loading: false,\r\n      error: null,\r\n    },\r\n    reducers: {\r\n      updateNotificationReadStatus(state, action) {\r\n        const { notificationId } = action.payload;\r\n        const notification = state.notifications.find(n => n.id === notificationId);\r\n        if (notification) {\r\n          notification.is_read = true;\r\n        }\r\n      },\r\n    },\r\n    extraReducers: (builder) => {\r\n      builder\r\n        .addCase(fetchNotifications.pending, (state) => {\r\n          state.loading = true;\r\n        })\r\n        .addCase(fetchNotifications.fulfilled, (state, action) => {\r\n          state.loading = false;\r\n          state.notifications = action.payload;\r\n        })\r\n        .addCase(fetchNotifications.rejected, (state, action) => {\r\n          state.loading = false;\r\n          state.error = action.payload.message;\r\n        });\r\n    },\r\n  });\r\n  \r\n  export default notificationSlice.reducer;\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}