{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\pages\\\\GroupChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchRoom } from '../features/auth/groupChatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChatBox = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n  const {\n    group,\n    loading,\n    error\n  } = useSelector(state => state.groupChat);\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [file, setFile] = useState(null);\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  useEffect(() => {\n    dispatch(fetchRoom({\n      roomId,\n      token\n    }));\n  }, [dispatch, token]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: group && group.group_name ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold\",\n      children: [\"Chat Room: \", group.group_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold\",\n      children: \"Chat Room Details Not Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupChatBox, \"Rwwjjh5waBVFX1+zmOHfPx91nSs=\", false, function () {\n  return [useParams, useSelector, useDispatch, useSelector];\n});\n_c = GroupChatBox;\nexport default GroupChatBox;\nvar _c;\n$RefreshReg$(_c, \"GroupChatBox\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useParams","fetchRoom","jsxDEV","_jsxDEV","GroupChatBox","_s","roomId","token","state","auth","dispatch","group","loading","error","groupChat","messageInput","setMessageInput","useState","showEmojiPicker","setShowEmojiPicker","file","setFile","messagesEndRef","useRef","messagesContainerRef","children","fileName","_jsxFileName","lineNumber","columnNumber","className","group_name","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/pages/GroupChatBox.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchRoom } from '../features/auth/groupChatSlice';\r\n\r\nconst GroupChatBox = () => {\r\n  const { roomId } = useParams(); \r\n  const token = useSelector((state)=>state.auth.token)  \r\n  const dispatch = useDispatch();\r\n  const { group, loading, error } = useSelector((state) => state.groupChat);\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const messagesContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchRoom({ roomId,token }));\r\n  }, [dispatch, token]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n  return (\r\n    <div className=\"p-6\">\r\n    {group && group.group_name ? (\r\n      <h2 className=\"text-2xl font-bold\">Chat Room: {group.group_name}</h2>\r\n    ) : (\r\n      <h2 className=\"text-2xl font-bold\">Chat Room Details Not Available</h2>\r\n    )}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default GroupChatBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAMO,KAAK,GAAGR,WAAW,CAAES,KAAK,IAAGA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EACpD,MAAMG,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGd,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACM,SAAS,CAAC;EACzE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMK,cAAc,GAAGC,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMC,oBAAoB,GAAGD,MAAM,CAAC,IAAI,CAAC;EAEzC1B,SAAS,CAAC,MAAM;IACda,QAAQ,CAACT,SAAS,CAAC;MAAEK,MAAM;MAACC;IAAM,CAAC,CAAC,CAAC;EACvC,CAAC,EAAE,CAACG,QAAQ,EAAEH,KAAK,CAAC,CAAC;EAErB,IAAIK,OAAO,EAAE;IACX,oBAAOT,OAAA;MAAAsB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIhB,KAAK,EAAE;IACT,oBAAOV,OAAA;MAAAsB,QAAA,GAAK,SAAO,EAACZ,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EACA,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAL,QAAA,EACnBd,KAAK,IAAIA,KAAK,CAACoB,UAAU,gBACxB5B,OAAA;MAAI2B,SAAS,EAAC,oBAAoB;MAAAL,QAAA,GAAC,aAAW,EAACd,KAAK,CAACoB,UAAU;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAErE1B,OAAA;MAAI2B,SAAS,EAAC,oBAAoB;MAAAL,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EACvE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAACxB,EAAA,CA/BID,YAAY;EAAA,QACGJ,SAAS,EACdD,WAAW,EACRD,WAAW,EACMC,WAAW;AAAA;AAAAiC,EAAA,GAJzC5B,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}