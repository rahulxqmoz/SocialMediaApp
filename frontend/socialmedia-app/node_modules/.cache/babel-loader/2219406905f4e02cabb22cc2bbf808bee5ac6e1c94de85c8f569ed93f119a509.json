{"ast":null,"code":"var _jsxFileName = \"H:\\\\SecondProject-DjangoReact\\\\frontend\\\\socialmedia-app\\\\src\\\\components\\\\Notification.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchNotifications, markNotificationAsRead } from '../features/auth/notificationSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const {\n    notifications = [],\n    loading,\n    error\n  } = useSelector(state => state.notifications);\n  useEffect(() => {\n    // Fetch notifications when the component mounts\n    dispatch(fetchNotifications({\n      token\n    }));\n  }, [dispatch, token]);\n  const handleNotificationClick = notificationId => {\n    // Mark the notification as read when clicked\n    dispatch(markNotificationAsRead({\n      notificationId,\n      token\n    }));\n  };\n  const handleViewAllNotifications = () => {\n    navigate('/notifications');\n    onClose();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute right-0 mt-2 w-64 bg-white shadow-lg rounded-md overflow-hidden\",\n    children: notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `p-4 border-b text-gray-800 cursor-pointer ${notification.is_read ? 'bg-gray-100' : 'bg-white'}`,\n        onClick: () => handleNotificationClick(notification.id),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: notification.sender_username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [notification.notification_type, \" your post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"p-4 text-gray-600\",\n      children: \"No new notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationList, \"Ja0PaVpzvqe2qNSgjfhHQaAoniE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchNotifications","markNotificationAsRead","jsxDEV","_jsxDEV","NotificationList","_s","dispatch","token","state","auth","notifications","loading","error","handleNotificationClick","notificationId","handleViewAllNotifications","navigate","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","notification","is_read","onClick","id","sender_username","notification_type","_c","$RefreshReg$"],"sources":["H:/SecondProject-DjangoReact/frontend/socialmedia-app/src/components/Notification.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchNotifications, markNotificationAsRead } from '../features/auth/notificationSlice';\r\n\r\nconst NotificationList = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const { notifications = [], loading, error } = useSelector((state) => state.notifications);\r\n\r\n  useEffect(() => {\r\n    // Fetch notifications when the component mounts\r\n    dispatch(fetchNotifications({ token }));\r\n  }, [dispatch, token]);\r\n\r\n  const handleNotificationClick = (notificationId) => {\r\n    // Mark the notification as read when clicked\r\n    dispatch(markNotificationAsRead({ notificationId, token }));\r\n  };\r\n\r\n  const handleViewAllNotifications = () => {\r\n    navigate('/notifications');\r\n    onClose();\r\n  };\r\n\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"absolute right-0 mt-2 w-64 bg-white shadow-lg rounded-md overflow-hidden\">\r\n      {notifications.length > 0 ? (\r\n        <ul>\r\n          {notifications.map((notification) => (\r\n            <li\r\n              key={notification.id}\r\n              className={`p-4 border-b text-gray-800 cursor-pointer ${\r\n                notification.is_read ? 'bg-gray-100' : 'bg-white'\r\n              }`}\r\n              onClick={() => handleNotificationClick(notification.id)}\r\n            >\r\n              <p className=\"font-semibold\">{notification.sender_username}</p>\r\n              <p>{notification.notification_type} your post</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <li className=\"p-4 text-gray-600\">No new notifications</li>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}